###############################################################################
# 
# NORMANDY
# 
# normandy.0000-normandy.0019			Setup events, history events, miscellaneous events and decisions
# normandy.0020-normandy.0039			Invite Norse/Norman Adventurers
# normandy.0040-normandy.0049			Settle Norse in Normandy
# normandy.0050-normandy.0069			Mont Saint Michel
# normandy.0070-normandy.0079			Generic flavor events
# normandy.0080-normandy.0089			Rollo narrative events
# normandy.0090-normandy.0109			William the Conqueror/Matilda of Flanders narrative events
# normandy.0110-normandy.0119			Historia Normannorum
# 
# 
###############################################################################

namespace = normandy

######################################################################################
# 
# SETUP EVENTS, HISTORY EVENTS, MISC DECISIONS
# 
# normandy.0000-normandy.0019
# 
######################################################################################

# NORMANDY STRUGGLE INTRO 
normandy.0001 = { # Fullscreen Intro Event
	type = character_event
	window = fullscreen_event
	title = normandy.0001.t
	desc = {
		first_valid = {
			# If done through granting
			triggered_desc = {
				trigger = {
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:RICE_normandy_granted_to_norse_already
					}
				}
				desc = normandy.0001.desc.RICE
			}
			# If done through other means
			desc = normandy.0001.desc.vanilla
		}
	}
	theme = diplomacy_foreign_affairs_focus
	trigger = { # we need to prevent this from firing for all players when a new player joins in MP
		is_ai = no
		NOT = { has_character_flag = RICE_normandy_struggle_intro_event_flag }
		OR = {
			any_character_struggle = {
				involvement = involved
				is_struggle_type = RICE_normandy_struggle
			}
			any_character_struggle = {
				involvement = interloper
				is_struggle_type = RICE_normandy_struggle
			}
		}
 	}
	override_background = { reference = RICE_normandy_struggle_start }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_animate" }

	widgets = {
		widget = {
 			gui = "event_window_widget_struggle_info"
 			container = "dynamic_content_widget"
 			controller = struggle_info
 			setup_scope = { struggle:RICE_normandy_struggle = { save_scope_as = struggle } }
		}
	}
	immediate = {
		play_music_cue = "mx_cue_combat_3"
		add_character_flag = RICE_normandy_struggle_intro_event_flag
		culture:norman = {
			save_scope_as = norman
		}
		save_scope_value_as = {
			name = start
			value = yes
		}
		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}
		if = {
			limit = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:RICE_normandy_granted_to_norse_already
				}
			}
			ordered_in_global_list = {
				variable = RICE_normandy_charles_list
				save_scope_as = charles
			}
		}
	}

	option = {
		name = normandy.0001.a
		trigger = {
			any_character_struggle = {
				involvement = involved
				is_struggle_type = RICE_normandy_struggle
			}
		}
		clicksound = "event:/DLC/FP2/SFX/UI/fp2_struggle_start_select"
	}

	option = {
		name = normandy.0001.b
		trigger = {
			any_character_struggle = {
				involvement = interloper
				is_struggle_type = RICE_normandy_struggle
			}			
		}
		clicksound = "event:/DLC/FP2/SFX/UI/fp2_struggle_start_select"
	}

	after = {
		# If you are Rollo
		if = {
			limit = {
				has_character_modifier = RICE_normandy_rollo_modifier
				NOT = { has_character_flag = RICE_normandy_rollo_concluding_event_done }
			}
			trigger_event = normandy.0086
		}
	}

}



# Year change catalyst
normandy.0002 = {
	hidden = yes
	scope = none
	scope = struggle

	trigger = {
		exists = struggle:RICE_normandy_struggle
	}

	immediate = {
		if = {
			limit = {
				exists = struggle:RICE_normandy_struggle
			}

			struggle:RICE_normandy_struggle = {
				# Spouses
				every_involved_ruler = {
					limit = { 
						any_spouse = {
							NOT = { culture = { rice_culture_trigger_norman = yes } }
							NOT = {
								culture = {
									any_parent_culture_or_above = {
										rice_culture_trigger_norman = yes
									}
								}
							}
							culture = {
								has_cultural_pillar = heritage_frankish
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_married_to_frankish
					}
				}
				every_involved_ruler = {
					limit = { 
						any_spouse = {
							NOT = { culture = { rice_culture_trigger_norman = yes } }
							NOT = {
								culture = {
									any_parent_culture_or_above = {
										rice_culture_trigger_norman = yes
									}
								}
							}
							culture = {
								has_cultural_pillar = heritage_north_germanic
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_married_to_scandinavian
					}
				}
				# Allies
				every_involved_ruler = {
					limit = { 
						any_ally = {
							NOT = { culture = { rice_culture_trigger_norman = yes } }
							NOT = {
								culture = {
									any_parent_culture_or_above = {
										rice_culture_trigger_norman = yes
									}
								}
							}
							culture = {
								has_cultural_pillar = heritage_frankish
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_frankish_ally
					}
				}
				every_involved_ruler = {
					limit = { 
						any_ally = {
							NOT = { culture = { rice_culture_trigger_norman = yes } }
							NOT = {
								culture = {
									any_parent_culture_or_above = {
										rice_culture_trigger_norman = yes
									}
								}
							}
							culture = {
								has_cultural_pillar = heritage_north_germanic
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_scandinavian_ally
					}
				}
				# Stats
				every_involved_ruler = {
					limit = { 
						diplomacy >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_diplomacy
					}
				}
				every_involved_ruler = {
					limit = { 
						martial >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_martial
					}
				}
				every_involved_ruler = {
					limit = { 
						stewardship >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_stewardship
					}
				}
				every_involved_ruler = {
					limit = { 
						intrigue >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_intrigue
					}
				}
				every_involved_ruler = {
					limit = { 
						learning >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_learning
					}
				}
				every_involved_ruler = {
					limit = { 
						prowess >= decent_skill_rating
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_high_prowess
					}
				}
				# Vassal opinion
				every_involved_ruler = {
					limit = { 
						any_vassal = {
							opinion = {
								target = liege
								value > 0
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_vassal_positive_opinion
					}
				}
				every_involved_ruler = {
					limit = { 
						any_vassal = {
							opinion = {
								target = liege
								value < 0
							}
						}
					}
					struggle:RICE_normandy_struggle = {
						activate_struggle_catalyst = catalyst_RICE_normandy_vassal_negative_opinion
					}
				}
			}


			# Then queue the event up against for a year hence.
			trigger_event = {
				id = normandy.0002
				years = 1
			}
		}
	}
}




normandy.0003 = {
	hidden = yes
	scope = none
	scope = struggle
	orphan = yes

	trigger = { # Should not need this, but, redundancy check! -h
		exists = struggle:RICE_normandy_struggle
	}

	immediate = {

		# Go through the characters to notify them
		struggle:RICE_normandy_struggle = {
			every_involved_ruler = {
				limit = {
					is_alive = yes
					is_ai = no
				}
				trigger_event = normandy.0001
			}
			every_interloper_ruler = {
				limit = {
					is_alive = yes
					is_ai = no
				}
				trigger_event = normandy.0001
			}
		}
	}
}



# Norman Conquest Ending
normandy.0005 = { 
	type = character_event
	window = fullscreen_event
	title = normandy.0005.t
	desc = {
		desc = normandy.0005.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender = {
						completely_controls_region = custom_west_francia_minus_mediterranean
					}
				}
				desc = normandy.0005.desc.francia
			}
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender = {
						completely_controls_region = RICE_greater_normandy_region
					}
				}
				desc = normandy.0005.desc.greater_normandy
			}
			desc = normandy.0005.desc.england
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bellicose
					}
				}
				desc = normandy.0005.desc.bellicose
			}	
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_stoic
					}
				}
				desc = normandy.0005.desc.stoic
			}
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_communal
					}
				}
				desc = normandy.0005.desc.communal
			}		
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_egalitarian
					}
				}
				desc = normandy.0005.desc.cosmopolitan
			}	
		}
	}
	theme = court
	override_background = { reference = RICE_medieval_castle_field }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {

		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}

		title:d_normandy = {
			save_scope_as = normandy
		}

		if = {
			limit = {
				root = scope:normandy_struggle_ender
			}
			set_global_variable = {
				name = RICE_normandy_ending_norman_conquest
				value = yes
			}
			if = {
				limit = {
					completely_controls_region = RICE_greater_normandy_region
				}
				set_global_variable = {
					name = RICE_normandy_ending_norman_conquest_greater_normandy
					value = yes
				}
				RICE_normandy_greater_normandy_effect = yes
			}
			else_if = {
				limit = {
					completely_controls_region = custom_west_francia_minus_mediterranean
				}
				set_global_variable = {
					name = RICE_normandy_ending_norman_conquest_francia
					value = yes
				}
				if = {
					limit = {
						NOT = { has_title = title:k_france }
					}
					get_title = title:k_france
				}
			}
			else = {
				set_global_variable = {
					name = RICE_normandy_ending_norman_conquest_england
					value = yes
				}
				if = {
					limit = {
						NOT = { has_title = title:k_england }
					}
					get_title = title:k_england
				}
			}
			# Add all involved cultures with counties to a list, for marriage and holy war checks
			#RICE_normandy_struggle_ending_culture_list_effect = yes
			RICE_normandy_struggle_conquest_ender_effect = yes
			RICE_normandy_struggle_conquest_ending_tooltip_effect = yes
		}
		else = {
			show_as_tooltip = {
				scope:normandy_struggle_ender = {
					RICE_normandy_struggle_conquest_ender_effect = yes
					RICE_normandy_struggle_conquest_ending_tooltip_effect = yes
				}				
			}
		}

		show_as_tooltip = {
			if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bellicose
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_bellicose
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_bellicose
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_stoic
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_stoic
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_stoic
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_communal
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_communal
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_communal
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_egalitarian
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_egalitarian
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_egalitarian
			}
		}

		play_music_cue = "mx_cue_combat_3"
	}

	# Ok
	option = {
		name = normandy.0005.a
	}

	# after = {
	# 	# End Struggle
	# 	if = {
	# 		limit = {
	# 			root = scope:normandy_struggle_ender
	# 		}
	# 		struggle:RICE_normandy_struggle = {
	# 			end_struggle = RICE_normandy_struggle_ending_conquest_decision
	# 		}
	# 	}
	# }
}


# Complete Assimilation Ending
normandy.0006 = { 
	type = character_event
	window = fullscreen_event
	title = normandy.0006.t
	desc = {
		desc = normandy.0006.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_spiritual
					}
				}
				desc = normandy.0006.desc.spiritual
			}	
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_courtly
					}
				}
				desc = normandy.0006.desc.courtly
			}	
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bureaucratic
					}
				}
				desc = normandy.0006.desc.bureaucratic
			}	
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_egalitarian
					}
				}
				desc = normandy.0006.desc.cosmopolitan
			}	
			triggered_desc = {
				trigger = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bellicose
					}
				}
				desc = normandy.0006.desc.bellicose
			}	
		}
	}
	theme = court
	override_background = { reference = RICE_medieval_city }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {

		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}

		title:d_normandy = {
			save_scope_as = normandy
		}


		if = {
			limit = {
				root = scope:normandy_struggle_ender
			}
			set_global_variable = {
				name = RICE_normandy_ending_norman_assimilation
				value = yes
			}
			# Add all involved cultures with counties to a list, for marriage and holy war checks
			#RICE_normandy_struggle_ending_culture_list_effect = yes
			RICE_normandy_struggle_assimilation_ender_effect = yes
			RICE_normandy_struggle_assimilation_ending_tooltip_effect = yes
		}
		else = {
			show_as_tooltip = {
				scope:normandy_struggle_ender = {
					RICE_normandy_struggle_assimilation_ender_effect = yes
					RICE_normandy_struggle_assimilation_ending_tooltip_effect = yes
				}				
			}
		}

		show_as_tooltip = {
			if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_spiritual
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_spiritual
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_spiritual
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_courtly
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_courtly
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_courtly
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bureaucratic
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_bureaucratic
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_bureaucratic
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_egalitarian
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_egalitarian
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_egalitarian
			}
			else_if = {
				limit = {
					scope:normandy_struggle_ender.culture = {
						has_cultural_pillar = ethos_bellicose
					}
				}
				scope:normandy_struggle_ender.culture = {
					set_culture_pillar = ethos_bellicose
				}
				custom_tooltip = normandy.norman_ethnogenesis.ethos_bellicose
			}
		}

		play_music_cue = "mx_cue_combat_3"
	}

	# Ok
	option = {
		name = normandy.0006.a
	}

	# after = {
	# 	# End Struggle
	# 	if = {
	# 		limit = {
	# 			root = scope:normandy_struggle_ender
	# 		}
	# 		struggle:RICE_normandy_struggle = {
	# 			end_struggle = RICE_normandy_struggle_ending_assimilation_decision
	# 		}
	# 	}
	# }
}


# Outsider's Yoke Ending
normandy.0007 = { 
	type = character_event
	window = fullscreen_event
	title = normandy.0007.t
	desc = normandy.0007.desc
	theme = court
	override_background = { reference = RICE_royal_homage }
	override_sound = { reference = "event:/DLC/FP2/SFX/UI/fp2_struggle_ui_intro_end_animate" }

	immediate = {

		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}

		title:d_normandy = {
			save_scope_as = normandy
		}


		if = {
			limit = {
				root = scope:normandy_struggle_ender
			}
			set_global_variable = {
				name = RICE_normandy_ending_outsider_yoke
				value = yes
			}
			# Add all involved cultures with counties to a list, for marriage and holy war checks
			#RICE_normandy_struggle_ending_culture_list_effect = yes
			RICE_normandy_struggle_outsider_ender_effect = yes
			RICE_normandy_struggle_outsider_ending_tooltip_effect = yes
		}
		else = {
			show_as_tooltip = {
				scope:normandy_struggle_ender = {
					RICE_normandy_struggle_outsider_ender_effect = yes
					RICE_normandy_struggle_outsider_ending_tooltip_effect = yes
				}				
			}
		}

		play_music_cue = "mx_cue_combat_3"

		if = {
			limit = {
				root = scope:normandy_struggle_ender
			}
			struggle:RICE_normandy_struggle = {
				end_struggle = RICE_normandy_struggle_ending_conquest_decision
			}
		}
	}

	# Ok
	option = {
		name = normandy.0007.a
	}

	# after = {
	# 	# End Struggle
	# 	if = {
	# 		limit = {
	# 			root = scope:normandy_struggle_ender
	# 		}
	# 		struggle:RICE_normandy_struggle = {
	# 			end_struggle = RICE_normandy_struggle_ending_outsider_decision
	# 		}
	# 	}
	# }
}


# Choose assimilation ethos
normandy.0008 = {
	type = character_event
	title = normandy.0008.t
	desc = normandy.0008.desc
	theme = learning
	override_background = { reference = RICE_background_normandy_mont_saint_michel }
	
	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		struggle:RICE_normandy_struggle = {
			end_struggle = RICE_normandy_struggle_ending_conquest_decision
		}
	}

	option = { # Spiritual ethos
		name = normandy.0008.a
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_spiritual }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_spiritual
			}
		}	
		custom_tooltip = normandy.norman_ethnogenesis.ethos_spiritual		
	}

	option = { # Courtly ethos
		name = normandy.0008.b
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_courtly }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_courtly
			}
		}	
		custom_tooltip = normandy.norman_ethnogenesis.ethos_courtly
	}

	option = { # Bureaucratic ethos
		name = normandy.0008.c
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_bureaucratic }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_bureaucratic
			}
		}
		custom_tooltip = normandy.norman_ethnogenesis.ethos_bureaucratic
	}

	option = { # Cosmopolitan ethos
		name = normandy.0008.d
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_egalitarian }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_egalitarian
			}
		}
		custom_tooltip = normandy.norman_ethnogenesis.ethos_egalitarian
	}

	# option = { # Keep ethos
	# 	name = normandy.0008.e
	# 	# trigger = {
	# 	# 	NOR = {
	# 	# 		root.culture = { has_cultural_pillar = ethos_spiritual }
	# 	# 		root.culture = { has_cultural_pillar = ethos_courtly }
	# 	# 		root.culture = { has_cultural_pillar = ethos_bureaucratic }
	# 	# 		root.culture = { has_cultural_pillar = ethos_bellicose }
	# 	# 		root.culture = { has_cultural_pillar = ethos_egalitarian }
	# 	# 	}	
	# 	# }
	# }

	option = { # Keep bellicose ethos
		name = normandy.0008.e
		trigger = {
			martial >= very_high_skill_rating	
			root.culture = { has_cultural_pillar = ethos_bellicose }	
		}
		skill = martial
		show_as_unavailable = {
			martial < very_high_skill_rating
		}
		custom_tooltip = normandy.norman_ethnogenesis.ethos_bellicose
	}

	after = {		
		every_ruler = {
			limit = {
				is_ai = no
				OR = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = RICE_normandy_struggle
					}					
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = RICE_normandy_struggle
					}
					any_held_title = {
						tier = tier_county
						any_county_province = {
							OR = {
								geographical_region = world_europe_west
								geographical_region = world_europe_south_italy
							}
						}
					}					
				}
			}
			trigger_event = normandy.0006
		}
	}

}



# Choose conquest ethos
normandy.0009 = {
	type = character_event
	title = normandy.0009.t
	desc = normandy.0009.desc
	theme = martial
	override_background = { reference = RICE_background_normandy_castle }
	
	right_portrait = {
		character = root
		animation = marshal
	}

	immediate = {
		struggle:RICE_normandy_struggle = {
			end_struggle = RICE_normandy_struggle_ending_conquest_decision
		}
	}

	option = { # Bellicose ethos
		name = normandy.0009.a
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_bellicose }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_bellicose
			}
		}		
		custom_tooltip = normandy.norman_ethnogenesis.ethos_bellicose
	}

	option = { # Stoic ethos
		name = normandy.0009.b
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_stoic }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_stoic
			}
		}		
		custom_tooltip = normandy.norman_ethnogenesis.ethos_stoic
	}

	option = { # Communal ethos
		name = normandy.0009.c
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_communal }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_communal
			}
		}	
		custom_tooltip = normandy.norman_ethnogenesis.ethos_communal	
	}

	option = { # Cosmpolitan ethos
		name = normandy.0009.d
		if = {
			limit = {
				NOT = {				
					root.culture = { has_cultural_pillar = ethos_egalitarian }
				}
			}
			root.culture = {
				set_culture_pillar = ethos_egalitarian
			}
		}		
		custom_tooltip = normandy.norman_ethnogenesis.ethos_egalitarian
	}

	# option = { # Keep ethos
	# 	name = normandy.0009.d
	# 	trigger = {
	# 		NOR = {
	# 			root.culture = { has_cultural_pillar = ethos_spiritual }
	# 			root.culture = { has_cultural_pillar = ethos_courtly }
	# 			root.culture = { has_cultural_pillar = ethos_bureaucratic }
	# 			root.culture = { has_cultural_pillar = ethos_bellicose }
	# 			root.culture = { has_cultural_pillar = ethos_egalitarian }
	# 		}	
	# 	}
	# }

	after = {		
		every_ruler = {
			limit = {
				is_ai = no
				OR = {
					any_character_struggle = {
						involvement = involved
						is_struggle_type = RICE_normandy_struggle
					}					
					any_character_struggle = {
						involvement = interloper
						is_struggle_type = RICE_normandy_struggle
					}
					any_held_title = {
						tier = tier_county
						any_county_province = {
							OR = {
								geographical_region = world_europe_west
								geographical_region = world_europe_south_italy
							}
						}
					}					
				}
			}
			trigger_event = normandy.0005
		}
	}

}


# Christian religious site
normandy.0010 = {
	type = character_event
	title = normandy.0010.t
	desc = {
		desc = normandy.0010.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:chapel
				}
				desc = normandy.0010.desc.chapel
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:small_church
				}
				desc = normandy.0010.desc.small_church
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:small_monastery
				}
				desc = normandy.0010.desc.small_monastery
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:large_church
				}
				desc = normandy.0010.desc.large_church
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:large_monastery
				}
				desc = normandy.0010.desc.large_monastery
			}		
		}
		desc = normandy.0010.desc.conclusion
	}
	theme = faith
	override_background = { reference = throne_room }
	
	right_portrait = root

	immediate = {		
		faith = {
			save_scope_as = faith
		}
		religion:christianity_religion = { save_scope_as = christian }
	}
	
	option = { # Ok
		name = normandy.0010.a
		if = {
			limit = {
				var:RICE_christian_building_type = flag:chapel
			}
			remove_short_term_gold = RICE_build_small_christian_site_cost
			custom_tooltip = normandy.0010.disclaimer
			show_as_tooltip = {
				RICE_build_christian_chapel_effect = yes
			}
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_church
			}
			remove_short_term_gold = RICE_build_medium_christian_site_cost
			custom_tooltip = normandy.0010.disclaimer
			show_as_tooltip = {
				RICE_build_christian_small_church_effect = yes
			}
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_monastery
			}
			remove_short_term_gold = RICE_build_medium_christian_site_cost
			custom_tooltip = normandy.0010.disclaimer
			show_as_tooltip = {
				RICE_build_christian_small_monastery_effect = yes
			}
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_church
			}
			remove_short_term_gold = RICE_build_large_christian_site_cost
			custom_tooltip = normandy.0010.disclaimer
			show_as_tooltip = {
				RICE_build_christian_large_church_effect = yes
			}
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_monastery
			}
			remove_short_term_gold = RICE_build_large_christian_site_cost
			custom_tooltip = normandy.0010.disclaimer
			show_as_tooltip = {
				RICE_build_christian_large_monastery_effect = yes
			}
		}
	}

	after = {
		# Just in case it doesn't go away for some reason
		add_character_flag = {
			flag = RICE_christian_currently_building_religious_site
			days = 731
		}
		trigger_event = {
			id = normandy.0011
			days = { 365 730 }
		}
	}

}




# The site is built
normandy.0011 = {
	type = character_event
	title = normandy.0011.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:chapel
				}
				desc = normandy.0011.desc.chapel
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:small_church
				}
				desc = normandy.0011.desc.small_church
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:small_monastery
				}
				desc = normandy.0011.desc.small_monastery
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:large_church
				}
				desc = normandy.0011.desc.large_church
			}		
			triggered_desc = {
				trigger = {
					var:RICE_christian_building_type = flag:large_monastery
				}
				desc = normandy.0011.desc.large_monastery
			}		
		}
	}
	theme = faith
	
	left_portrait = root

	trigger = {
		is_alive = yes
		is_landed = yes
		religion = { rice_religion_trigger_christianity_religion = yes }
	}

	on_trigger_fail = { #Trigger different flavor if you switched religions
		if = {
			limit = {
				NOT = { religion = { rice_religion_trigger_christianity_religion = yes } }
			}
			trigger_event = normandy.0012
		}
		# Clear variable just in case
		else = {
			if = {
				limit = { has_variable = RICE_christian_building_type }
				remove_variable = RICE_christian_building_type
			}
		}
	}

	immediate = {
		play_music_cue = "mx_cue_epic_sacral_moment"
		capital_county = {
			save_scope_as = county
		}
	}
	
	option = { # Ok
		name = normandy.0011.a
		if = {
			limit = {
				var:RICE_christian_building_type = flag:chapel
			}
			RICE_build_christian_chapel_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_church
			}
			RICE_build_christian_small_church_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_monastery
			}
			RICE_build_christian_small_monastery_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_church
			}
			RICE_build_christian_large_church_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_monastery
			}
			RICE_build_christian_large_monastery_effect = yes
		}
	}

	after = {
		if = {
			limit = { has_variable = RICE_christian_building_type }
			remove_variable = RICE_christian_building_type
		}
		if = {
			limit = { has_character_flag = RICE_christian_currently_building_religious_site }
			remove_character_flag = RICE_christian_currently_building_religious_site
		}
	}

}


# You switched religions
normandy.0012 = {
	type = character_event
	title = normandy.0012.t
	desc = normandy.0012.desc
	theme = faith
	
	left_portrait = root

	immediate = {
		capital_county = {
			save_scope_as = county
		}
	}
	
	option = { # Keep the structure
		name = normandy.0012.a
		stress_impact = {
			zealous = minor_stress_impact_gain
		}
		add_prestige = 150
		add_piety = -150
		if = {
			limit = {
				var:RICE_christian_building_type = flag:chapel
			}
			RICE_build_christian_chapel_converted_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_church
			}
			RICE_build_christian_small_church_converted_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:small_monastery
			}
			RICE_build_christian_small_monastery_converted_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_church
			}
			RICE_build_christian_large_church_converted_effect = yes
		}
		else_if = {
			limit = {
				var:RICE_christian_building_type = flag:large_monastery
			}
			RICE_build_christian_large_monastery_converted_effect = yes
		}
		custom_tooltip = normandy.0012.a.tooltip
	}
	option = { # Get rid of it
		name = normandy.0012.b
		stress_impact = {
			just = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		add_piety = 150
		custom_tooltip = normandy.0012.b.tooltip
	}

	after = {
		if = {
			limit = { has_variable = RICE_christian_building_type }
			remove_variable = RICE_christian_building_type
		}
	}

}




# Catalysts for activities from traveling
normandy.0013 = {
	hidden = yes

	trigger = {
		is_available_travelling = yes
		is_landed = yes		
		highest_held_title_tier >= tier_county
		exists = struggle:RICE_normandy_struggle
		any_character_struggle = {
			involvement = involved
			is_struggle_type = RICE_normandy_struggle
		}	
		exists = involved_activity	
	}

	immediate = {
		struggle:RICE_normandy_struggle = {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_normandy_activity_travel
				character = root
			}
		}
		if = {
			limit = {
				involved_activity = {
					has_activity_type = activity_hunt
				}
			}
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_hunt
					character = root
				}
			}
		}
	}

}

# Catalysts for activities
normandy.0014 = {
	hidden = yes

	immediate = {
		if = {
			limit = {
				exists = involved_activity
				involved_activity = {
					has_activity_type = activity_RICE_normandy_mont_saint_michel_pilgrimage
				}
			}
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_pilgrimage_mont_saint_michel
					character = root
				}
			}
		}	
		if = {
			limit = {
				exists = involved_activity
				involved_activity = {
					has_activity_type = activity_RICE_normandy_saint_aubert_procession
				}
			}
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_procession_saint_aubert
					character = root
				}
			}
		}	
	}

}







# Domesday Book
normandy.0015 = {
	type = character_event
	title = normandy.0015.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_global_variable = RICE_normandy_ending_norman_conquest_greater_normandy
				}
				desc = normandy.0015.desc.greater_normandy
			}
			triggered_desc = {
				trigger = {
					has_global_variable = RICE_normandy_ending_norman_conquest_francia
				}
				desc = normandy.0015.desc.france
			}
			desc = normandy.0015.desc.england
		}
		desc = normandy.0015.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = cp:councillor_steward
				}
				desc = normandy.0015.desc.steward
			}
			desc = normandy.0015.desc.no_steward
		}
	}
	theme = realm
	
	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:steward
		animation = chancellor		
		trigger = { exists = scope:steward }
	}

	immediate = {
		add_character_flag = RICE_normandy_domesday_book_original
		add_character_flag = RICE_normandy_domesday_book_ongoing
		if = {
			limit = {
				exists = cp:councillor_steward
			}
			cp:councillor_steward = {
				save_scope_as = steward
			}
		}
	}
	
	option = { # ok
		name = normandy.0015.a
	}

	after = {		
		create_story = RICE_story_cycle_normandy_domesday_book
	}

}



# Domesday Book
normandy.0016 = {
	type = character_event
	title = normandy.0016.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = cp:councillor_steward
				}
				desc = normandy.0016.desc.steward
			}
			desc = normandy.0016.desc.no_steward
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					has_global_variable = RICE_normandy_ending_norman_conquest_greater_normandy
				}
				desc = normandy.0016.desc.greater_normandy
			}
			triggered_desc = {
				trigger = {
					has_global_variable = RICE_normandy_ending_norman_conquest_francia
				}
				desc = normandy.0016.desc.france
			}
			desc = normandy.0016.desc.england
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { has_character_flag = RICE_normandy_domesday_book_original }
				}
				desc = normandy.0016.desc.not_original
			}
			desc = normandy.0016.desc.original
		}
		desc = normandy.0016.desc
	}
	theme = realm
	
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:steward
		animation = chancellor		
		trigger = { exists = scope:steward }
	}
	artifact = { # To display the artifact in the event-window
		target = scope:RICE_domesday_book_artifact
		position = lower_center_portrait
		trigger = { exists = scope:RICE_domesday_book_artifact }
	}

	immediate = {
		play_music_cue = mx_cue_sacredrite
		if = {
			limit = {
				exists = cp:councillor_steward
			}
			cp:councillor_steward = {
				save_scope_as = steward
			}
		}
		if = {
			limit = {
				has_global_variable = RICE_normandy_ending_norman_conquest_greater_normandy
			}
			hidden_effect_new_object = {
				create_artifact = {
					name = RICE_normandy_domesday_book_artifact_name
					description = RICE_normandy_domesday_book_artifact_greater_normandy_desc
					type = miscellaneous
					visuals = RICE_normandy_domesday_book_artifact
					quality = 100
					wealth = 100
					modifier = RICE_normandy_domesday_book_modifier
					#max_durability = 40
					save_scope_as = RICE_domesday_book_artifact
					decaying = no
				}
				# scope:RICE_domesday_book_artifact = {
				# 	set_variable = RICE_domesday_book_variable
				# }
			}
		}
		else_if = {
			limit = {
				has_global_variable = RICE_normandy_ending_norman_conquest_francia
			}
			hidden_effect_new_object = {
				create_artifact = {
					name = RICE_normandy_domesday_book_artifact_name
					description = RICE_normandy_domesday_book_artifact_france_desc
					type = miscellaneous
					visuals = RICE_normandy_domesday_book_artifact
					quality = 100
					wealth = 100
					modifier = RICE_normandy_domesday_book_modifier
					#max_durability = 40
					save_scope_as = RICE_domesday_book_artifact
					decaying = no
				}
				# scope:RICE_domesday_book_artifact = {
				# 	set_variable = RICE_domesday_book_variable
				# }
			}
		}
		else_if = {
			limit = {
				has_global_variable = RICE_normandy_ending_norman_conquest_england
			}
			hidden_effect_new_object = {
				create_artifact = {
					name = RICE_normandy_domesday_book_artifact_name
					description = RICE_normandy_domesday_book_artifact_greater_normandy_desc
					type = miscellaneous
					visuals = RICE_normandy_domesday_book_artifact
					quality = 100
					wealth = 100
					modifier = RICE_normandy_domesday_book_modifier
					#max_durability = 40
					save_scope_as = RICE_domesday_book_artifact
					decaying = no
				}
				# scope:RICE_domesday_book_artifact = {
				# 	set_variable = RICE_domesday_book_variable
				# }
			}
		}
	}
	
	option = { # ok
		name = normandy.0016.a
		RICE_domesday_finished_effect = yes
		show_as_tooltip = {
			scope:RICE_domesday_book_artifact = {
				set_owner = {
					target = root
				}
			}
		}
	}

}





######################################################################################
# 
# INVITE NORSE/NORMAN ADVENTURERS
# 
# normandy.0020-normandy.0039
# 
######################################################################################




# Hidden tombola
normandy.0020 = {
	type = character_event
	hidden = yes

	immediate = {

		save_scope_as = current_ruler

		
		# Failsafe in case it isn't set already via the decision for some reason
		# Since I keep getting errors the variable isn't set
		# For some reason this doesn't work even though I literally set the variable here, but I'll keep it here just in case
		if = {
			limit = {
				is_ai = yes
				NOT = { has_variable = RICE_norse_adventurer_type }
			}
			random_list = {
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:courtiers
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:colonists
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:mercenaries
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:traders
					}
				}
				2 = {
					trigger = {
						any_held_county = {
							count > 1 #Don't give away your only title
						}
					}
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:rulers
					}
				}
			}
		}

		# Determine original source of these Norse
		# If there are any Norse in Scandinavia or connected regions, go there first
		if = {
			limit = {
				any_county_in_region = {
					region = graphical_western
					culture = { has_cultural_pillar = heritage_north_germanic }
					# Normans have their own system
					NOR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
			}
			every_county_in_region = {
				region = graphical_western
				limit = {
					culture = { has_cultural_pillar = heritage_north_germanic }
					# Normans have their own system
					NOR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
				add_to_list = norse_counties
			}
			random_in_list = {
				list = norse_counties
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norse_faith
			}
			scope:county.culture = {
				save_scope_as = norse_culture
			}
		}
		# If they cannot be found in Scandinavia and connected regions, search entire map
		else_if = {
			limit = {
				any_county = {
					culture = { has_cultural_pillar = heritage_north_germanic }
					# Normans have their own system
					NOR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
			}
			every_county = {
				limit = {
					culture = { has_cultural_pillar = heritage_north_germanic }
					# Normans have their own system
					NOR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
				add_to_list = norse_counties
			}
			random_in_list = {
				list = norse_counties
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norse_faith
			}
			scope:county.culture = {
				save_scope_as = norse_culture
			}
		}
		# If Norse don't exist on the map for some reason
		else = {
			random_county_in_region = {
				region = world_europe_north
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norse_faith
			}
			# If Norse has been split
			if = {
				limit = {
					has_global_variable = norse_culture_split
				}
				random_list = {
					10 = {
						scope:norwegian = {
							save_scope_as = norse_culture
						}
					}
					10 = {
						scope:swedish = {
							save_scope_as = norse_culture
						}
					}
					10 = {
						scope:danish = {
							save_scope_as = norse_culture
						}
					}
					10 = {
						scope:icelandic = {
							save_scope_as = norse_culture
						}
					}
				}
			}
			#If Norse hasn't split yet
			else = {
				scope:norse = {
					save_scope_as = norse_culture
				}
			}
		}

		# Do the proper setting up of characters as needed
		if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:courtiers
			}
			# Generate first courtier option
			random_list = {
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_diplomat_template
						save_scope_as = courtier_1
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_martial_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_stewardship_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_intrigue_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_learning_template
						save_scope_as = courtier_1
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_prowess_template
						save_scope_as = courtier_1
					}
				}
			}
			# Generate second courtier option
			random_list = {
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_diplomat_template
						save_scope_as = courtier_2
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_martial_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_stewardship_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_intrigue_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_learning_template
						save_scope_as = courtier_2
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norse_adventurer_courtier_prowess_template
						save_scope_as = courtier_2
					}
				}
			}
		}
		# Generate generic Norse adventurer representative for other options
		else = {
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norse_adventurer_generic_template
				save_scope_as = courtier_1
			}
			save_scope_as = courtier_2 # The ruler is not technically not a courtier, but this is for convenience
		}
		# else_if = {
		# 	limit = {
		# 		var:RICE_norse_adventurer_type = flag:colonists
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		var:RICE_norse_adventurer_type = flag:mercenaries
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		var:RICE_norse_adventurer_type = flag:traders
		# 	}
		# }

		random_list = {
			# Things go as planned
			80 = {
				trigger_event = normandy.0021
			}
			# They demand more, either gold or titles
			20 = {
				trigger = {
					NOT = { var:RICE_norse_adventurer_type = flag:rulers }
				}
				trigger_event = normandy.0023			
			}
		}
	}
}

# They come in peace
normandy.0021 = {
	type = character_event
	title = normandy.0021.t
	desc = {
		desc = normandy.0021.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0021.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0021.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0021.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0021.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:rulers
				}
				desc = normandy.0021.desc.rulers
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { var:RICE_norse_adventurer_type = flag:rulers }
				}
				desc = normandy.0021.desc.conclusion
			}
		}
	}
	theme = realm
	
	left_portrait = {
		trigger = { root = { var:RICE_norse_adventurer_type = flag:courtiers } }
		character = scope:courtier_2
		animation = throne_room_bow_2
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norse_adventurer_type = flag:courtiers } }
		# 	animation = throne_room_bow_2
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norse_adventurer_type = flag:courtiers } } }
		# 	animation = idle
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = throne_room_bow_1
	}

	immediate = {

		# Final failsafe in case it isn't set already via the decision for some reason
		# Since I keep getting errors the variable isn't set
		# A lot of the stuff requires the previous event, but this is just to get rid of the stupid error log message
		# For some reason this doesn't work even though I literally set the variable here, but I'll keep it here just in case
		if = {
			limit = {
				is_ai = yes
				NOT = { has_variable = RICE_norse_adventurer_type }
			}
			random_list = {
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:courtiers
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:colonists
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:mercenaries
					}
				}
				12 = {
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:traders
					}
				}
				2 = {
					trigger = {
						any_held_county = {
							count > 1 #Don't give away your only title
						}
					}
					set_variable = {
						name = RICE_norse_adventurer_type
						value = flag:rulers
					}
				}
			}
		}

		RICE_invite_norse_initial_setup_effect = yes
		RICE_invite_norse_main_effect = yes
		
	}
	
	option = { # Pick option 1
		name = normandy.0021.a
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0021.b
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0021.c
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norse_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norse_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0021.d
		trigger = {
			NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		}
	}
	
	option = { # Defend against borders?
		name = normandy.0021.e
		trigger = {
			NOT = { var:RICE_norse_adventurer_type = flag:rulers }
		}
		if = {
			limit = {
				highest_held_title_tier = tier_county
			}
			add_prestige = -200
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			add_prestige = -400
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_kingdom
			}
			add_prestige = -600
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_empire
			}
			add_prestige = -800
		}
		# Diplomacy
		if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:colonists
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Martial
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:mercenaries
			}
			duel = {
				skill = martial
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Stewardship
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:traders
			}
			duel = {
				skill = stewardship
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Intrigue
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:courtiers
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		trigger_event = normandy.0022
	}

		
	option = { # Play as them
		name = normandy.0021.f
		trigger = {
			var:RICE_norse_adventurer_type = flag:rulers
			is_ai = no
		}
		set_player_character = scope:courtier_1
	}

	after = {
		if = {
			limit = {
				var:RICE_norse_adventurer_type ?= flag:rulers
			}
			scope:courtier_1 = {
				trigger_event = normandy.0025
			}
			# Small chance they want to convert
			# random = {
			# 	chance = 25
			# 	scope:courtier_1 = {					
			# 		trigger_event = 
			# 	}
			# }		
			if = {
				limit = {
					is_independent_ruler = no
					NOT = {
						scope:courtier_1 = {
							is_vassal_of = scope:granter 
						}
					}
				}
				scope:granter.liege = {
					trigger_event = normandy.0027
				}
			}	
		}
		if = {
			limit = {
				NOT = { has_variable = RICE_overrated_vikings_gtfo }
			}
			if = {
				limit = {
					scope:courtier_1 = {
						has_character_flag = single_combat_duel_armor
					}
				}
				scope:courtier_1 = {
					remove_character_flag = single_combat_duel_armor
				}
			}
			if = {
				limit = {
					NOR = {
						var:RICE_norse_adventurer_type = flag:courtiers
						var:RICE_norse_adventurer_type = flag:rulers
					}
				}
				hidden_effect = {
					scope:courtier_1 = {
						death = {
							death_reason = death_vanished
						}
					}			
				}
			}
			if = {
				limit = { has_variable = RICE_norse_adventurer_type }
				remove_variable = RICE_norse_adventurer_type
			}
		}
	}

}



# Ask them to provide additional protection
normandy.0022 = {
	type = character_event
	title = normandy.0022.t
	desc = {
		desc = normandy.0022.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:no
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0022.desc.no.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:no
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0022.desc.no.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:no
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0022.desc.no.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:no
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0022.desc.no.traders
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:yes
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0022.desc.yes.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:yes
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0022.desc.yes.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:yes
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0022.desc.yes.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:yes
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0022.desc.yes.traders
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:no
				}
				desc = normandy.0022.desc.conclusion.no
			}
			triggered_desc = {
				trigger = {
					var:RICE_overrated_vikings_gtfo = flag:yes
				}
				desc = normandy.0022.desc.conclusion.yes
			}
		}
	}
	theme = realm
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { root = { var:RICE_overrated_vikings_gtfo = flag:yes } }
			animation = happiness
		}
		triggered_animation = {
			trigger = { root = { var:RICE_overrated_vikings_gtfo = flag:no } }
			animation = schadenfreude
		}
	}
	
	right_portrait = {
		character = scope:courtier_1
		triggered_animation = {
			trigger = { root = { var:RICE_overrated_vikings_gtfo = flag:yes } }
			animation = personality_bold
		}
		triggered_animation = {
			trigger = { root = { var:RICE_overrated_vikings_gtfo = flag:no } }
			animation = shame
		}
	}

	lower_center_portrait = {
		character = scope:courtier_2
		trigger = { var:RICE_norse_adventurer_type = flag:courtiers }
	}

	immediate = {
		if = {
			limit = {
				var:RICE_overrated_vikings_gtfo = flag:yes
			}
			random_list = {
				20 = {
					add_character_modifier = {
						modifier = fp1_reprieve_from_sa_modifier
						years = 5
					}
				}
				20 = {
					add_character_modifier = {
						modifier = fp1_reprieve_from_sa_modifier
						years = 10
					}
				}
				10 = {
					add_character_modifier = {
						modifier = fp1_reprieve_from_sa_modifier
						years = 15
					}
				}
				10 = {
					add_character_modifier = {
						modifier = fp1_reprieve_from_sa_modifier
						years = 20
					}
				}
			}
		}		
	}
		
	option = { # Defend against borders?
		name = normandy.0022.a
		trigger = {
			var:RICE_overrated_vikings_gtfo = flag:yes
			NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		}
	}
		
	option = { # Defend against borders?
		name = normandy.0022.b
		trigger = {
			NOT = {
				var:RICE_overrated_vikings_gtfo = flag:yes
			}
			NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		}
	}
		
	option = { # Courtier 1
		name = normandy.0022.c
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
		
	option = { # Courtier 2
		name = normandy.0022.d
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
		
	option = { # Courtier 1 and Courtier 2
		name = normandy.0022.e
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norse_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norse_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}

	after = {		
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}			
			}
		}
		if = {
			limit = { has_variable = RICE_norse_adventurer_type }
			remove_variable = RICE_norse_adventurer_type
		}
	}
}

# They demand extra gold or titles
normandy.0023 = {
	type = character_event
	title = normandy.0023.t
	desc = {
		desc = normandy.0023.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0023.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0023.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0023.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0023.desc.traders
			}
		}
		desc = normandy.0023.desc.mid
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_demands = flag:titles
				}
				desc = normandy.0023.desc.titles
			}
			desc = normandy.0023.desc.gold
		}
		desc = normandy.0023.desc.conclusion
	}
	theme = realm
	
	left_portrait = {
		#trigger = { exists = scope:courtier_2 }
		character = root
		animation = anger
		#animation = war_attacker
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norse_adventurer_type = flag:courtiers } }
		# 	animation = war_attacker
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norse_adventurer_type = flag:courtiers } } }
		# 	animation = anger
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = personality_callous
	}

	immediate = {
		RICE_invite_norse_initial_setup_effect = yes
		random_list = {
			# They just want gold
			70 = {
				set_variable = {
					name = RICE_norse_adventurer_demands
					value = flag:gold
				}
			}
			# They want a title
			30 = {
				trigger = {
					any_held_county = {
						count > 1 #Don't give away your only title
					}
				}
				# Reduce chances if you are a count yourself
				modifier = {
					add = -10
					highest_held_title_tier = tier_county
				}
				set_variable = {
					name = RICE_norse_adventurer_demands
					value = flag:titles
				}				
				random_held_title = {
					limit = {
						tier = tier_county
						NOT = { this = root.capital_county }
						#NOT = { this = scope:capital_county }
					}	
					save_scope_as = award_county
				}
			}
		}
	}

	
	option = { # Ok
		name = normandy.0023.a
		if = {
			limit = {
				var:RICE_norse_adventurer_demands = flag:titles
			}
			save_scope_as = granter
			scope:courtier_1 = {
				get_title = scope:award_county
			}
			if = {
				limit = {
					highest_held_title_tier > tier_county
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:courtier_1 = {
					change_liege = {
						liege = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			else_if = {
				limit = {
					is_independent_ruler = no
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:courtier_1 = {
					change_liege = {
						liege = scope:granter.liege
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:granter.liege = {
					trigger_event = normandy.0027
				}
			}
			add_truce_both_ways = {
				character = scope:courtier_1
				days = purchase_truce_interaction_truce_days_small_value
				name = RICE_normandy_adventurer_truce
			}
			trigger_event = normandy.0024
		}
		else_if = {
			limit = {				
				var:RICE_norse_adventurer_demands = flag:gold
			}
			remove_short_term_gold = { 25 RICE_normandy_base_adventurers_large_cost }
			trigger_event = normandy.0026
		}
	}
	
	option = { # Refuse
		name = normandy.0023.b
		duel = {
			skill = diplomacy
			target = scope:courtier_1
			10 = {
				custom_tooltip = normandy.0023.b.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.9
				}

				save_scope_as = original_negotiator
				add_to_list = RICE_normandy_brigands_notification_list
				capital_county = { save_scope_as = capital }
				# Every county in your capital duchy
				scope:capital = {
					duchy = {
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							holder = {
								add_to_list = RICE_normandy_brigands_notification_list
							}
							hidden_effect = {
								change_development_progress_with_overflow = -50
								change_county_control = -15
								add_county_modifier = {
									modifier = RICE_normandy_norse_raids
									years = 10
								}
							}
						}
					}
				}

				every_in_list = {
					list = RICE_normandy_brigands_notification_list
					trigger_event = normandy.0028
					remove_from_list = multiple_donated_titles
				}
				
				# send_interface_toast = {
				# 	type = event_generic_bad
				# 	title = normandy.0023.b.failure
				# 	left_icon = scope:courtier_1
				# }
			}
			10 = {
				custom_tooltip = normandy.0023.b.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.9
				}
				trigger_event = normandy.0029
				# send_interface_toast = {
				# 	type = event_generic_good
				# 	title = normandy.0023.b.success
				# 	left_icon = scope:courtier_1
				# }
			}
		}
	}

	after = {
		if = {
			limit = { has_variable = RICE_norse_adventurer_demands }
			remove_variable = RICE_norse_adventurer_demands
		}
	}

}




# New Norse ruler
normandy.0024 = {
	type = character_event
	title = normandy.0024.t
	desc = {
		desc = normandy.0024.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0024.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0024.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0024.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0024.desc.traders
			}
		}
		desc = normandy.0024.desc.conclusion
	}
	theme = RICE_theme_normandy_outpost
	
	left_portrait = {
		character = scope:current_ruler
		animation = personality_vengeful
	}
	right_portrait = {
		character = scope:courtier_1
		animation = personality_callous
	}

	immediate = {
		RICE_invite_norse_initial_setup_effect = yes
		if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:courtiers
			}
			add_courtier = scope:courtier_2
		}
		RICE_invite_norse_main_effect = yes		
	}

	
	# Play as them
	option = {
		name = normandy.0024.a
		trigger = {
			is_ai = no
		}
		set_player_character = scope:courtier_1
	}
	
	# Don't play as them
	option = {
		name = normandy.0024.b
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		# if = {
		# 	limit = {
		# 		NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		# 	}
		# 	hidden_effect = {
		# 		scope:courtier_1 = {
		# 			death = {
		# 				death_reason = death_vanished
		# 			}
		# 		}			
		# 	}
		# }
		if = {
			limit = { has_variable = RICE_norse_adventurer_type }
			remove_variable = RICE_norse_adventurer_type
		}
		scope:courtier_1 = {			
			trigger_event = normandy.0025
		}
	}
}


# New Norse ruler
normandy.0025 = {
	type = character_event
	title = normandy.0025.t
	desc = {
		desc = normandy.0025.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:courtier_1.liege = scope:granter
				}
				desc = normandy.0025.desc.vassal
			}
			triggered_desc = {
				trigger = {
					scope:courtier_1.liege = scope:granter.liege
				}
				desc = normandy.0025.desc.vassal_in_realm
			}
			triggered_desc = {
				trigger = {
					NOT = {
						scope:courtier_1.liege = scope:granter
					}
				}
				desc = normandy.0025.desc.independent
			}
		}
		triggered_desc = {
			trigger = {
				NOT = { scope:current_ruler.faith = scope:courtier_1.faith }
				NOT = { scope:current_ruler.faith = { has_doctrine_parameter = unreformed } }
			}
			desc = normandy.0025.desc.conversion
		}
	}
	# normandy.0025.desc.conversion
	theme = realm # RICE_theme_normandy_outpost
	
	left_portrait = {
		character = scope:current_ruler
		animation = war_over_tie
	}
	right_portrait = scope:courtier_1

	
	# Will convert
	option = {
		name = normandy.0025.a		
		trigger = {
			NOT = { scope:current_ruler.faith = scope:courtier_1.faith }
			NOT = { scope:current_ruler.faith = { has_doctrine_parameter = unreformed } }
		}
		set_character_faith_with_conversion = scope:current_ruler.faith
		add_piety = -200
		add_prestige = 100
		scope:granter = {
			add_opinion = {
				target = scope:courtier_1
				modifier = pleased_opinion
				opinion = 15
			}
		}
	}
	
	# Ok
	option = {
		name = normandy.0025.b
	}
	
}




# Deal agreed to
normandy.0026 = {
	type = character_event
	title = normandy.0026.t
	desc = {
		desc = normandy.0026.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0026.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0026.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0026.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0026.desc.traders
			}
		}
	}
	theme = realm
	
	left_portrait = {
		trigger = { root = { var:RICE_norse_adventurer_type = flag:courtiers } }
		character = scope:courtier_2
		animation = personality_callous
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norse_adventurer_type = flag:courtiers } }
		# 	animation = throne_room_bow_2
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norse_adventurer_type = flag:courtiers } } }
		# 	animation = idle
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = war_over_win
	}

	immediate = {
		#RICE_invite_norse_initial_setup_effect = yes
		RICE_invite_norse_main_effect = yes		
	}
	
	option = { # Pick option 1
		name = normandy.0026.a
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0026.b
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0026.c
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norse_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norse_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0026.d
		trigger = {
			NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		}
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				NOR = {
					var:RICE_norse_adventurer_type = flag:courtiers
					var:RICE_norse_adventurer_type = flag:rulers
				}
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}			
			}
		}
		if = {
			limit = { has_variable = RICE_norse_adventurer_type }
			remove_variable = RICE_norse_adventurer_type
		}
	}

}




# Notify the liege if they get a new Norse vassal
normandy.0027 = {
	type = character_event
	title = normandy.0027.t
	desc = normandy.0027.desc
	theme = realm
	
	left_portrait = {
		character = scope:granter
		animation = war_over_tie
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = war_over_win
	}

	immediate = {
		show_as_tooltip = {
			scope:courtier_1 = {
				get_title = scope:award_county
			}
		}
	}
	
	option = { # ok
		name = normandy.0027.a
	}

}


# Norse refuse to back down and go rogue
normandy.0028 = {
	type = character_event
	window = duel_event
	title = normandy.0028.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = scope:original_negotiator
				}
				desc = normandy.0028.desc.original
			}
			desc = normandy.0028.desc
		}
	}
	theme = martial
	override_background = { reference = burning_building }
	
	left_portrait = {
		character = scope:original_negotiator
		animation = anger
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = aggressive_sword
	}

	immediate = {
		scope:courtier_1 = {
			add_character_flag = single_combat_duel_armor
		}
		#capital_county = { save_scope_as = capital }
		# Every county in your capital duchy
		show_as_tooltip = {
			scope:capital = {
				duchy = {
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						custom = RICE_every_county_in_capital_duchy_owned_or_not
						change_development_progress_with_overflow = -50
						change_county_control = -15
						add_county_modifier = {
							modifier = RICE_normandy_norse_raids
							years = 10
						}
					}
				}
			}
		}
	}
	
	option = { # ok
		name = normandy.0028.a
		trigger = {
			root = scope:original_negotiator
		}
	}
	
	option = { # ok
		name = normandy.0028.b
		trigger = {
			NOT = { root = scope:original_negotiator }
		}
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				root = scope:original_negotiator
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}
				if = {
					limit = {
						var:RICE_norse_adventurer_type = flag:courtiers
					}
					scope:courtier_2 = {
						death = {
							death_reason = death_vanished
						}
					}
				}
			}
		}
		if = {
			limit = { has_variable = RICE_norse_adventurer_type }
			remove_variable = RICE_norse_adventurer_type
		}
	}

}


# Norse agree to back down
normandy.0029 = {
	type = character_event
	title = normandy.0029.t
	desc = {
		desc = normandy.0029.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:courtiers
				}
				desc = normandy.0021.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:colonists
				}
				desc = normandy.0021.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:mercenaries
				}
				desc = normandy.0021.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:traders
				}
				desc = normandy.0021.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norse_adventurer_type = flag:rulers
				}
				desc = normandy.0021.desc.rulers
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { var:RICE_norse_adventurer_type = flag:rulers }
				}
				desc = normandy.0021.desc.conclusion
			}
		}
	}
	theme = realm
	
	left_portrait = {
		character = root
		animation = dismissal
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = personality_dishonorable
	}

	lower_center_portrait = {
		character = scope:courtier_2
		trigger = { var:RICE_norse_adventurer_type = flag:courtiers }
	}

	immediate = {
		# RICE_invite_norse_initial_setup_effect = yes # Already done previously
		RICE_invite_norse_main_effect = yes
		
	}
	
	option = { # Pick option 1
		name = normandy.0029.a
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0029.b
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0029.c
		trigger = {
			var:RICE_norse_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norse_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norse_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0029.d
		trigger = {
			NOT = { var:RICE_norse_adventurer_type = flag:courtiers }
		}
	}
	
	option = { # Defend against borders?
		name = normandy.0029.e
		#trigger = {
		#	NOT = { var:RICE_norse_adventurer_type = flag:rulers }
		#}
		if = {
			limit = {
				highest_held_title_tier = tier_county
			}
			add_prestige = -200
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			add_prestige = -400
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_kingdom
			}
			add_prestige = -600
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_empire
			}
			add_prestige = -800
		}
		# Diplomacy
		if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:colonists
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Martial
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:mercenaries
			}
			duel = {
				skill = martial
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Stewardship
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:traders
			}
			duel = {
				skill = stewardship
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		# Intrigue
		else_if = {
			limit = {
				var:RICE_norse_adventurer_type = flag:courtiers
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0021.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0021.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_overrated_vikings_gtfo
						value = flag:yes
					}
				}
			}
		}
		trigger_event = normandy.0022
	}

	after = {
		if = {
			limit = {
				NOT = { has_variable = RICE_overrated_vikings_gtfo }
			}
			if = {
				limit = {
					scope:courtier_1 = {
						has_character_flag = single_combat_duel_armor
					}
				}
				scope:courtier_1 = {
					remove_character_flag = single_combat_duel_armor
				}
			}
			if = {
				limit = {
					NOR = {
						var:RICE_norse_adventurer_type = flag:courtiers
						var:RICE_norse_adventurer_type = flag:rulers
					}
				}
				hidden_effect = {
					scope:courtier_1 = {
						death = {
							death_reason = death_vanished
						}
					}			
				}
			}
			if = {
				limit = { has_variable = RICE_norse_adventurer_type }
				remove_variable = RICE_norse_adventurer_type
			}
		}
	}

}




# Hidden tombola
normandy.0030 = {
	type = character_event
	hidden = yes

	immediate = {

		save_scope_as = current_ruler

		# Failsafe in case it isn't set already via the decision for some reason
		# Since I keep getting errors the variable isn't set
		# For some reason this doesn't work even though I literally set the variable here, but I'll keep it here just in case
		if = {
			limit = {
				is_ai = yes
				NOT = { has_variable = RICE_norman_adventurer_type }
			}
			random_list = {
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:courtiers
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:colonists
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:mercenaries
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:traders
					}
				}
				12 = {
					trigger = {
						has_global_variable = RICE_normandy_ending_norman_assimilation
					}
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:scholars
					}
				}
				2 = {
					trigger = {
						any_held_county = {
							count > 1 #Don't give away your only title
						}
					}
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:rulers
					}
				}
			}
		}

		# Determine original source of these Normans
		# If there are any Normans in Scandinavia or connected regions, go there first
		if = {
			limit = {
				any_county_in_region = {
					region = RICE_greater_normandy_region
					OR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
			}
			every_county_in_region = {
				region = RICE_greater_normandy_region
				limit = {
					OR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
				add_to_list = norman_counties
			}
			random_in_list = {
				list = norman_counties
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norman_faith
			}
			scope:county.culture = {
				save_scope_as = norman_culture
			}
		}
		# If they cannot be found in Normandy and connected regions, search entire map
		else_if = {
			limit = {
				any_county = {
					# Normans have their own system
					OR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
			}
			every_county = {
				limit = {
					# Normans have their own system
					OR = {
						culture = { rice_culture_trigger_norman = yes }
						culture = {
							any_parent_culture_or_above = {
								rice_culture_trigger_norman = yes
							}
						}
					}
				}
				add_to_list = norman_counties
			}
			random_in_list = {
				list = norman_counties
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norman_faith
			}
			scope:county.culture = {
				save_scope_as = norman_culture
			}
		}
		# If Normans don't exist on the map for some reason
		else = {
			random_county_in_region = {
				region = RICE_greater_normandy_region
				save_scope_as = county
			}
			scope:county.faith = {
				save_scope_as = norman_faith
			}
			scope:norman = {
				save_scope_as = norman_culture
			}
		}

		# Do the proper setting up of characters as needed
		if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:courtiers
			}
			# Generate first courtier option
			random_list = {
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_diplomat_template
						save_scope_as = courtier_1
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_martial_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_stewardship_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_intrigue_template
						save_scope_as = courtier_1
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_learning_template
						save_scope_as = courtier_1
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_prowess_template
						save_scope_as = courtier_1
					}
				}
			}
			# Generate second courtier option
			random_list = {
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_diplomat_template
						save_scope_as = courtier_2
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_martial_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_stewardship_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_intrigue_template
						save_scope_as = courtier_2
					}
				}
				10 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_learning_template
						save_scope_as = courtier_2
					}
				}
				30 = {
					create_character = {
						location = root.capital_province
						template = RICE_normandy_norman_adventurer_courtier_prowess_template
						save_scope_as = courtier_2
					}
				}
			}
		}
		# Generate generic Norse adventurer representative for other options
		else = {
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_adventurer_generic_template
				save_scope_as = courtier_1
			}
			save_scope_as = courtier_2 # The ruler is not technically not a courtier, but this is for convenience
		}
		# else_if = {
		# 	limit = {
		# 		var:RICE_norman_adventurer_type = flag:colonists
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		var:RICE_norman_adventurer_type = flag:mercenaries
		# 	}
		# }
		# else_if = {
		# 	limit = {
		# 		var:RICE_norman_adventurer_type = flag:traders
		# 	}
		# }

		random_list = {
			# Things go as planned
			80 = {
				trigger_event = normandy.0031
			}
			# They demand more, either gold or titles
			20 = {
				trigger = {
					NOT = { var:RICE_norman_adventurer_type = flag:rulers }
				}
				trigger_event = normandy.0033			
			}
		}
	}
}

# They come in peace
normandy.0031 = {
	type = character_event
	title = normandy.0031.t
	desc = {
		desc = normandy.0031.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:courtiers
				}
				desc = normandy.0031.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:colonists
				}
				desc = normandy.0031.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:mercenaries
				}
				desc = normandy.0031.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:traders
				}
				desc = normandy.0031.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:rulers
				}
				desc = normandy.0031.desc.rulers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:scholars
				}
				desc = normandy.0031.desc.scholars
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { var:RICE_norman_adventurer_type = flag:rulers }
				}
				desc = normandy.0031.desc.conclusion
			}
		}
	}
	theme = realm
	
	left_portrait = {
		trigger = { root = { var:RICE_norman_adventurer_type = flag:courtiers } }
		character = scope:courtier_2
		animation = throne_room_bow_2
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norman_adventurer_type = flag:courtiers } }
		# 	animation = throne_room_bow_2
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norman_adventurer_type = flag:courtiers } } }
		# 	animation = idle
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = throne_room_bow_1
	}

	immediate = {

		# Final failsafe in case it isn't set already via the decision for some reason
		# Since I keep getting errors the variable isn't set
		# A lot of the stuff requires the previous event, but this is just to get rid of the stupid error log message		
		# For some reason this doesn't work even though I literally set the variable here, but I'll keep it here just in case
		if = {
			limit = {
				is_ai = yes
				NOT = { has_variable = RICE_norman_adventurer_type }
			}
			random_list = {
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:courtiers
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:colonists
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:mercenaries
					}
				}
				12 = {
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:traders
					}
				}
				12 = {
					trigger = {
						has_global_variable = RICE_normandy_ending_norman_assimilation
					}
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:scholars
					}
				}
				2 = {
					trigger = {
						any_held_county = {
							count > 1 #Don't give away your only title
						}
					}
					set_variable = {
						name = RICE_norman_adventurer_type
						value = flag:rulers
					}
				}
			}
		}

		RICE_invite_norman_initial_setup_effect = yes
		RICE_invite_norman_main_effect = yes
		
	}
	
	option = { # Pick option 1
		name = normandy.0031.a
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0031.b
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0031.c
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norman_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norman_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0031.d
		trigger = {
			NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		}
	}
	
	option = { # Defend against borders?
		name = normandy.0031.e
		trigger = {
			NOT = { var:RICE_norman_adventurer_type = flag:rulers }
		}
		if = {
			limit = {
				highest_held_title_tier = tier_county
			}
			add_prestige = -200
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			add_prestige = -400
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_kingdom
			}
			add_prestige = -600
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_empire
			}
			add_prestige = -800
		}
		# Diplomacy
		if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:colonists
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Martial
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:mercenaries
			}
			duel = {
				skill = martial
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Stewardship
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:traders
			}
			duel = {
				skill = stewardship
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Intrigue
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:courtiers
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Learning
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:scholars
			}
			duel = {
				skill = learning
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		trigger_event = normandy.0032
	}

		
	option = { # Play as them
		name = normandy.0031.f
		trigger = {
			is_ai = no
			var:RICE_norman_adventurer_type = flag:rulers
		}
		set_player_character = scope:courtier_1
	}

	after = {
		if = {
			limit = {
				var:RICE_norman_adventurer_type ?= flag:rulers
			}
			scope:courtier_1 = {
				trigger_event = normandy.0035
			}
			# Small chance they want to convert
			# random = {
			# 	chance = 25
			# 	scope:courtier_1 = {					
			# 		trigger_event = 
			# 	}
			# }		
			if = {
				limit = {
					is_independent_ruler = no
					NOT = {
						scope:courtier_1 = {
							is_vassal_of = scope:granter 
						}
					}
				}
				scope:granter.liege = {
					trigger_event = normandy.0037
				}
			}	
		}
		if = {
			limit = {
				NOT = { has_variable = RICE_norman_provide_further_help }
			}
			if = {
				limit = {
					scope:courtier_1 = {
						has_character_flag = single_combat_duel_armor
					}
				}
				scope:courtier_1 = {
					remove_character_flag = single_combat_duel_armor
				}
			}
			if = {
				limit = {
					NOR = {
						var:RICE_norman_adventurer_type = flag:courtiers
						var:RICE_norman_adventurer_type = flag:rulers
					}
				}
				hidden_effect = {
					scope:courtier_1 = {
						death = {
							death_reason = death_vanished
						}
					}			
				}
			}
			if = {
				limit = { has_variable = RICE_norman_adventurer_type }
				remove_variable = RICE_norman_adventurer_type
			}
		}
	}

}



# Ask them to provide additional assistance
normandy.0032 = {
	type = character_event
	title = normandy.0032.t
	desc = {
		desc = normandy.0032.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_provide_further_help = flag:no
				}
				desc = normandy.0032.desc.no
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_provide_further_help = flag:yes
				}
				desc = normandy.0032.desc.yes
			}
		}
	}
	theme = realm
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { root = { var:RICE_norman_provide_further_help = flag:yes } }
			animation = happiness
		}
		triggered_animation = {
			trigger = { root = { var:RICE_norman_provide_further_help = flag:no } }
			animation = schadenfreude
		}
	}
	
	right_portrait = {
		character = scope:courtier_1
		triggered_animation = {
			trigger = { root = { var:RICE_norman_provide_further_help = flag:yes } }
			animation = personality_bold
		}
		triggered_animation = {
			trigger = { root = { var:RICE_norman_provide_further_help = flag:no } }
			animation = shame
		}
	}

	lower_center_portrait = {
		character = scope:courtier_2
		trigger = { var:RICE_norman_adventurer_type = flag:courtiers }
	}

	immediate = {
		if = {
			limit = {
				var:RICE_norman_provide_further_help = flag:yes
			}
			random_list = {
				20 = {
					add_character_modifier = {
						modifier = RICE_normandy_norman_long_term_assistance
						years = 5
					}
				}
				20 = {
					add_character_modifier = {
						modifier = RICE_normandy_norman_long_term_assistance
						years = 10
					}
				}
				10 = {
					add_character_modifier = {
						modifier = RICE_normandy_norman_long_term_assistance
						years = 15
					}
				}
				10 = {
					add_character_modifier = {
						modifier = RICE_normandy_norman_long_term_assistance
						years = 20
					}
				}
			}
		}		
	}
		
	option = { # Defend against borders?
		name = normandy.0032.a
		trigger = {
			var:RICE_norman_provide_further_help = flag:yes
			NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		}
	}
		
	option = { # Defend against borders?
		name = normandy.0032.b
		trigger = {
			NOT = {
				var:RICE_norman_provide_further_help = flag:yes
			}
			NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		}
	}
		
	option = { # Courtier 1
		name = normandy.0032.c
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
		
	option = { # Courtier 2
		name = normandy.0032.d
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
		
	option = { # Courtier 1 and Courtier 2
		name = normandy.0032.e
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norman_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norman_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}

	after = {		
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}			
			}
		}
		if = {
			limit = { has_variable = RICE_norman_adventurer_type }
			remove_variable = RICE_norman_adventurer_type
		}
	}
}

# They demand extra gold or titles
normandy.0033 = {
	type = character_event
	title = normandy.0033.t
	desc = {
		desc = normandy.0033.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:courtiers
				}
				desc = normandy.0033.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:colonists
				}
				desc = normandy.0033.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:mercenaries
				}
				desc = normandy.0033.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:traders
				}
				desc = normandy.0033.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:scholars
				}
				desc = normandy.0033.desc.scholars
			}
		}
		desc = normandy.0033.desc.mid
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_demands = flag:titles
				}
				desc = normandy.0033.desc.titles
			}
			desc = normandy.0033.desc.gold
		}
		desc = normandy.0033.desc.conclusion
	}
	theme = realm
	
	left_portrait = {
		#trigger = { exists = scope:courtier_2 }
		character = root
		animation = anger
		#animation = war_attacker
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norman_adventurer_type = flag:courtiers } }
		# 	animation = war_attacker
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norman_adventurer_type = flag:courtiers } } }
		# 	animation = anger
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = personality_callous
	}

	immediate = {
		RICE_invite_norman_initial_setup_effect = yes
		random_list = {
			# They just want gold
			70 = {
				set_variable = {
					name = RICE_norman_adventurer_demands
					value = flag:gold
				}
			}
			# They want a title
			30 = {
				trigger = {
					any_held_county = {
						count > 1 #Don't give away your only title
					}
				}
				# Reduce chances if you are a count yourself
				modifier = {
					add = -10
					highest_held_title_tier = tier_county
				}
				set_variable = {
					name = RICE_norman_adventurer_demands
					value = flag:titles
				}				
				random_held_title = {
					limit = {
						tier = tier_county
						NOT = { this = root.capital_county }
						#NOT = { this = scope:capital_county }
					}	
					save_scope_as = award_county
				}
			}
		}
	}

	
	option = { # Ok
		name = normandy.0033.a
		if = {
			limit = {
				var:RICE_norman_adventurer_demands = flag:titles
			}
			save_scope_as = granter
			scope:courtier_1 = {
				get_title = scope:award_county
			}
			if = {
				limit = {
					highest_held_title_tier > tier_county
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:courtier_1 = {
					change_liege = {
						liege = root
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			else_if = {
				limit = {
					is_independent_ruler = no
				}
				create_title_and_vassal_change = {
					type = swear_fealty
					save_scope_as = change
				}
				scope:courtier_1 = {
					change_liege = {
						liege = scope:granter.liege
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:granter.liege = {
					trigger_event = normandy.0037
				}
			}
			add_truce_both_ways = {
				character = scope:courtier_1
				days = purchase_truce_interaction_truce_days_small_value
				name = RICE_normandy_adventurer_truce
			}
			trigger_event = normandy.0034
		}
		else_if = {
			limit = {				
				var:RICE_norman_adventurer_demands = flag:gold
			}
			remove_short_term_gold = { 25 RICE_normandy_base_adventurers_large_cost }
			trigger_event = normandy.0036
		}
	}
	
	option = { # Refuse
		name = normandy.0033.b
		duel = {
			skill = diplomacy
			target = scope:courtier_1
			10 = {
				custom_tooltip = normandy.0033.b.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.9
				}

				save_scope_as = original_negotiator
				add_to_list = RICE_normandy_brigands_notification_list
				capital_county = { save_scope_as = capital }
				# Every county in your capital duchy
				scope:capital = {
					duchy = {
						every_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							holder = {
								add_to_list = RICE_normandy_brigands_notification_list
							}
							hidden_effect = {
								change_development_progress_with_overflow = -50
								change_county_control = -15
								add_county_modifier = {
									modifier = RICE_normandy_norman_raids
									years = 10
								}
							}
						}
					}
				}

				every_in_list = {
					list = RICE_normandy_brigands_notification_list
					trigger_event = normandy.0038
					remove_from_list = multiple_donated_titles
				}
				
				# send_interface_toast = {
				# 	type = event_generic_bad
				# 	title = normandy.0033.b.failure
				# 	left_icon = scope:courtier_1
				# }
			}
			10 = {
				custom_tooltip = normandy.0033.b.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.9
				}
				trigger_event = normandy.0039
				# send_interface_toast = {
				# 	type = event_generic_good
				# 	title = normandy.0033.b.success
				# 	left_icon = scope:courtier_1
				# }
			}
		}
	}

	after = {
		if = {
			limit = { has_variable = RICE_norman_adventurer_demands }
			remove_variable = RICE_norman_adventurer_demands
		}
	}

}




# New Norman ruler
normandy.0034 = {
	type = character_event
	title = normandy.0034.t
	desc = {
		desc = normandy.0034.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:courtiers
				}
				desc = normandy.0034.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:colonists
				}
				desc = normandy.0034.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:mercenaries
				}
				desc = normandy.0034.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:traders
				}
				desc = normandy.0034.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:scholars
				}
				desc = normandy.0034.desc.scholars
			}
		}
		desc = normandy.0034.desc.conclusion
	}
	theme = RICE_theme_normandy_outpost
	
	left_portrait = {
		character = scope:current_ruler
		animation = personality_vengeful
	}
	right_portrait = {
		character = scope:courtier_1
		animation = personality_callous
	}

	immediate = {
		RICE_invite_norman_initial_setup_effect = yes
		if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:courtiers
			}
			add_courtier = scope:courtier_2
		}
		RICE_invite_norman_main_effect = yes		
	}

	
	# Play as them
	option = {
		name = normandy.0034.a
		trigger = {
			is_ai = no
		}
		set_player_character = scope:courtier_1
	}
	
	# Don't play as them
	option = {
		name = normandy.0034.b
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		# if = {
		# 	limit = {
		# 		NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		# 	}
		# 	hidden_effect = {
		# 		scope:courtier_1 = {
		# 			death = {
		# 				death_reason = death_vanished
		# 			}
		# 		}			
		# 	}
		# }
		if = {
			limit = { has_variable = RICE_norman_adventurer_type }
			remove_variable = RICE_norman_adventurer_type
		}
		scope:courtier_1 = {			
			trigger_event = normandy.0035
		}
	}
}


# New Norman ruler
normandy.0035 = {
	type = character_event
	title = normandy.0035.t
	desc = {
		desc = normandy.0035.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:courtier_1.liege = scope:granter
				}
				desc = normandy.0035.desc.vassal
			}
			triggered_desc = {
				trigger = {
					scope:courtier_1.liege = scope:granter.liege
				}
				desc = normandy.0035.desc.vassal_in_realm
			}
			triggered_desc = {
				trigger = {
					NOT = {
						scope:courtier_1.liege = scope:granter
					}
				}
				desc = normandy.0035.desc.independent
			}
		}
		triggered_desc = {
			trigger = {
				NOT = { scope:current_ruler.faith = scope:courtier_1.faith }
				NOT = { scope:current_ruler.faith = { has_doctrine_parameter = unreformed } }
			}
			desc = normandy.0035.desc.conversion
		}
	}
	# normandy.0035.desc.conversion
	theme = realm # RICE_theme_normandy_outpost
	
	left_portrait = {
		character = scope:current_ruler
		animation = war_over_tie
	}
	right_portrait = scope:courtier_1

	
	# Will convert
	option = {
		name = normandy.0035.a		
		trigger = {
			NOT = { scope:current_ruler.faith = scope:courtier_1.faith }
			NOT = { scope:current_ruler.faith = { has_doctrine_parameter = unreformed } }
		}
		set_character_faith_with_conversion = scope:current_ruler.faith
		add_piety = -200
		add_prestige = 100
		scope:granter = {
			add_opinion = {
				target = scope:courtier_1
				modifier = pleased_opinion
				opinion = 15
			}
		}
	}
	
	# Ok
	option = {
		name = normandy.0035.b
	}
	
}




# Deal agreed to
normandy.0036 = {
	type = character_event
	title = normandy.0036.t
	desc = {
		desc = normandy.0036.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:courtiers
				}
				desc = normandy.0036.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:colonists
				}
				desc = normandy.0036.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:mercenaries
				}
				desc = normandy.0036.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:traders
				}
				desc = normandy.0036.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:scholars
				}
				desc = normandy.0036.desc.scholars
			}
		}
	}
	theme = realm
	
	left_portrait = {
		trigger = { root = { var:RICE_norman_adventurer_type = flag:courtiers } }
		character = scope:courtier_2
		animation = personality_callous
		# triggered_animation = {
		# 	trigger = { root = { var:RICE_norman_adventurer_type = flag:courtiers } }
		# 	animation = throne_room_bow_2
		# }
		# triggered_animation = {
		# 	trigger = { NOT = { root = { var:RICE_norman_adventurer_type = flag:courtiers } } }
		# 	animation = idle
		# }
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = war_over_win
	}

	immediate = {
		#RICE_invite_norman_initial_setup_effect = yes
		RICE_invite_norman_main_effect = yes		
	}
	
	option = { # Pick option 1
		name = normandy.0036.a
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0036.b
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0036.c
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norman_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norman_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0036.d
		trigger = {
			NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		}
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				NOR = {
					var:RICE_norman_adventurer_type = flag:courtiers
					var:RICE_norman_adventurer_type = flag:rulers
				}
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}			
			}
		}
		if = {
			limit = { has_variable = RICE_norman_adventurer_type }
			remove_variable = RICE_norman_adventurer_type
		}
	}

}




# Notify the liege if they get a new Norman vassal
normandy.0037 = {
	type = character_event
	title = normandy.0037.t
	desc = normandy.0037.desc
	theme = realm
	
	left_portrait = {
		character = scope:granter
		animation = war_over_tie
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = war_over_win
	}

	immediate = {
		show_as_tooltip = {
			scope:courtier_1 = {
				get_title = scope:award_county
			}
		}
	}
	
	option = { # ok
		name = normandy.0037.a
	}

}


# Normans refuse to back down and go rogue
normandy.0038 = {
	type = character_event
	window = duel_event
	title = normandy.0038.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = scope:original_negotiator
				}
				desc = normandy.0038.desc.original
			}
			desc = normandy.0038.desc
		}
	}
	theme = martial
	override_background = { reference = burning_building }
	
	left_portrait = {
		character = scope:original_negotiator
		animation = anger
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = aggressive_sword
	}

	immediate = {
		# There appears to be some edge case where the courtier is alive
		if = {
			limit = {
				scope:courtier_1 = { is_alive = yes }
			}
			scope:courtier_1 = {
				add_character_flag = single_combat_duel_armor
			}
		}
		#capital_county = { save_scope_as = capital }
		# Every county in your capital duchy
		show_as_tooltip = {
			scope:capital = {
				duchy = {
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
						}
						custom = RICE_every_county_in_capital_duchy_owned_or_not
						change_development_progress_with_overflow = -50
						change_county_control = -15
						add_county_modifier = {
							modifier = RICE_normandy_norman_raids
							years = 10
						}
					}
				}
			}
		}
	}
	
	option = { # ok
		name = normandy.0038.a
		trigger = {
			root = scope:original_negotiator
		}
	}
	
	option = { # ok
		name = normandy.0038.b
		trigger = {
			NOT = { root = scope:original_negotiator }
		}
	}

	after = {
		if = {
			limit = {
				scope:courtier_1 = {
					has_character_flag = single_combat_duel_armor
				}
			}
			scope:courtier_1 = {
				remove_character_flag = single_combat_duel_armor
			}
		}
		if = {
			limit = {
				root = scope:original_negotiator
			}
			hidden_effect = {
				scope:courtier_1 = {
					death = {
						death_reason = death_vanished
					}
				}
				if = {
					limit = {
						var:RICE_norman_adventurer_type = flag:courtiers
					}
					scope:courtier_2 = {
						death = {
							death_reason = death_vanished
						}
					}
				}
			}
		}
		if = {
			limit = { has_variable = RICE_norman_adventurer_type }
			remove_variable = RICE_norman_adventurer_type
		}
	}

}


# Normans agree to back down
normandy.0039 = {
	type = character_event
	title = normandy.0039.t
	desc = {
		desc = normandy.0039.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:courtiers
				}
				desc = normandy.0031.desc.courtiers
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:colonists
				}
				desc = normandy.0031.desc.colonists
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:mercenaries
				}
				desc = normandy.0031.desc.mercenaries
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:traders
				}
				desc = normandy.0031.desc.traders
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:scholars
				}
				desc = normandy.0031.desc.scholars
			}
			triggered_desc = {
				trigger = {
					var:RICE_norman_adventurer_type = flag:rulers
				}
				desc = normandy.0031.desc.rulers
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { var:RICE_norman_adventurer_type = flag:rulers }
				}
				desc = normandy.0031.desc.conclusion
			}
		}
	}
	theme = realm
	
	left_portrait = {
		character = root
		animation = dismissal
	}
	
	right_portrait = {
		character = scope:courtier_1
		animation = personality_dishonorable
	}

	lower_center_portrait = {
		character = scope:courtier_2
		trigger = { var:RICE_norman_adventurer_type = flag:courtiers }
	}

	immediate = {
		# RICE_invite_norman_initial_setup_effect = yes # Already done previously
		RICE_invite_norman_main_effect = yes
		
	}
	
	option = { # Pick option 1
		name = normandy.0039.a
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_1
		hidden_effect = {
			scope:courtier_2 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick option 2
		name = normandy.0039.b
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
		}
		add_courtier = scope:courtier_2
		hidden_effect = {
			scope:courtier_1 = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}
	
	option = { # Pick both
		name = normandy.0039.c
		trigger = {
			var:RICE_norman_adventurer_type = flag:courtiers
			OR = {
				gold >= RICE_norman_adventurers_small_cost
				is_ai = no
			}
		}
		remove_short_term_gold = RICE_norman_adventurers_small_cost
		add_courtier = scope:courtier_1
		add_courtier = scope:courtier_2
	}
	
	option = { # No courtiers to be picked
		name = normandy.0039.d
		trigger = {
			NOT = { var:RICE_norman_adventurer_type = flag:courtiers }
		}
	}
	
	option = { # Defend against borders?
		name = normandy.0039.e
		#trigger = {
		#	NOT = { var:RICE_norman_adventurer_type = flag:rulers }
		#}
		if = {
			limit = {
				highest_held_title_tier = tier_county
			}
			add_prestige = -200
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			add_prestige = -400
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_kingdom
			}
			add_prestige = -600
		}
		else_if = {
			limit = {
				highest_held_title_tier = tier_empire
			}
			add_prestige = -800
		}
		# Diplomacy
		if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:colonists
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Martial
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:mercenaries
			}
			duel = {
				skill = martial
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Stewardship
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:traders
			}
			duel = {
				skill = stewardship
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Intrigue
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:courtiers
			}
			duel = {
				skill = intrigue
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		# Learning
		else_if = {
			limit = {
				var:RICE_norman_adventurer_type = flag:scholars
			}
			duel = {
				skill = learning
				target = scope:courtier_1
				10 = {
					custom_tooltip = normandy.0031.e.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:no
					}
				}
				10 = {
					custom_tooltip = normandy.0031.e.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 0.9
					}
					set_variable = {
						name = RICE_norman_provide_further_help
						value = flag:yes
					}
				}
			}
		}
		trigger_event = normandy.0032
	}

	after = {
		if = {
			limit = {
				NOT = { has_variable = RICE_norman_provide_further_help }
			}
			if = {
				limit = {
					scope:courtier_1 = {
						has_character_flag = single_combat_duel_armor
					}
				}
				scope:courtier_1 = {
					remove_character_flag = single_combat_duel_armor
				}
			}
			if = {
				limit = {
					NOR = {
						var:RICE_norman_adventurer_type = flag:courtiers
						var:RICE_norman_adventurer_type = flag:rulers
					}
				}
				hidden_effect = {
					scope:courtier_1 = {
						death = {
							death_reason = death_vanished
						}
					}			
				}
			}
			if = {
				limit = { has_variable = RICE_norman_adventurer_type }
				remove_variable = RICE_norman_adventurer_type
			}
		}
	}

}










######################################################################################
# 
# SETTLE NORSE IN NORMANDY
# 
# normandy.0040-normandy.0049
# 
######################################################################################


scripted_trigger RICE_valid_rollo_expy = {
	is_available_ai_adult = yes
	is_alive = yes
	is_ruler = no
	martial >= 8
	OR = {
		any_heir_title = { count = 0 }
		AND = {
			save_temporary_scope_as = potential
			any_heir_title = {
				place_in_line_of_succession = {
					target = scope:potential
					value >= 3
				}
			}
		}
	}
}


# Setup stuff
normandy.0040 = {
	hidden = yes

	immediate = {

		#save_scope_as = charles


		start_struggle = {
			struggle_type = RICE_normandy_struggle
			start_phase = struggle_RICE_normandy_phase_adventure
		}
		set_global_variable = {
			name = RICE_normandy_struggle_started
			value = yes
		}
		

		# If Rollo hasn't been chosen yet
		if = {
			limit = {
				NOT = { exists = scope:rollo }
			}
			if = {
				limit = {
					#At least one valid adventurer. Should always be the case, but just to be sure.
					any_in_global_list = {
						variable = western_scandinavian_adventurer_list
						count >= 1
						RICE_valid_rollo_expy = yes
					}
				}
				##Grab the most eligible candidate from the western list.
				ordered_in_global_list = {
					variable = western_scandinavian_adventurer_list
					limit = { RICE_valid_rollo_expy = yes }
					order_by = { value = scandinavian_adventurer_priority_value }
					save_scope_as = rollo
				}
			}
			# Otherwise, randomly generate someone
			else = {
				create_character = {
					location = root.capital_province
					template = RICE_normandy_rollo_template
					save_scope_as = rollo
				}
				# If Rollo equivalent is a woman, make her a shieldmaiden
				if = {
					limit = {
						scope:rollo = {
							is_female = yes
						}
					}
					scope:rollo = {
						add_trait = shieldmaiden
					}
				}
			}
		}

		
		# Save Rollo's old culture and faith in case it's needed
		scope:rollo = {
			culture = {
				save_scope_as = rollo_old_culture
			}
			faith = {
				save_scope_as = rollo_old_faith
			}
		}

		# If Rollo is landed but has a liege, make note of that
		if = {
			limit = {
				scope:rollo = {
					is_ruler = yes
					is_independent_ruler = no
				}
			}
			scope:rollo.liege = {
				save_scope_as = original_liege
			}
		}
				
		if = {
			limit = {
				NOT = {
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:flag_formed_normandy_decision
					}
				}
			}
			#Can only happen once
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_normandy_decision
			}
		}
				
		if = {
			limit = {
				NOT = {
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:RICE_normandy_granted_to_norse_already
					}
				}
			}
			#Can only happen once
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_normandy_granted_to_norse_already
			}
		}

		# Rename the duchy to Normandy
		title:d_normandy = {
			save_scope_as = normandy_title
			set_title_name = d_normandy
		}

		# Generate a list of counties we want to flip to the new culture.
		title:d_normandy = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_county }
				add_to_list = norman_counties
			}
		}


		
		culture:norse = {save_scope_as = old_culture_1 }
		culture:french = { save_scope_as = old_culture_2 }

		# Perform the culture flip.
		every_in_list = {
			list = norman_counties
			merge_cultures_in_region_effect = {
				OLD_CULTURE_1 = culture:norse
				OLD_CULTURE_2 = culture:french
				NEW_CULTURE = culture:norman
				REGION = custom_normandy_and_adjacent
			}
		}

		# Send all players in the game a notification event about the flip.
		#save_scope_as = norman_founder
		culture:norman = {
			reset_culture_creation_date = yes
			get_all_innovations_from = scope:old_culture_1
			get_all_innovations_from = scope:old_culture_2
			save_scope_as = new_culture
		}


		
		# If you are a king or emperor, or vassal to one, Rollo also becomes a vassal
		scope:rollo = {
			add_prestige = 500
			set_character_culture_norman = yes
			add_character_flag = converted_culture_this_lifetime
			get_title = title:c_rouen
			get_title = title:d_normandy
			if = {
				limit = {
					scope:rollo = {
						exists = dynasty
					}
				}
				dynasty = {
					add_dynasty_modifier = {
						modifier = RICE_normandy_rollo_family_equivalent
					}
				}
			}		
			if = {
				limit = {
					scope:rollo = {
						NOT = { religion = scope:charles.religion }
					}
					scope:charles = {
						NOT = { faith = { has_doctrine_parameter = unreformed } }
					}
				}
				add_character_flag = RICE_normandy_rollo_did_convert_flag
				set_character_faith_with_conversion = scope:charles.faith
			}	
		}

		if = {
			limit = {
				scope:rollo = {
					is_dynast = yes
					exists = dynasty
				}
			}
			scope:rollo = {
				dynasty = {				
					set_dynasty_name = "dynn_RICE_normandie"
				}
				house = {
					set_house_name = "dynn_RICE_normandie"
				}
			}
		}
		else_if = {
			limit = {
				scope:rollo = {
					exists = house
				}
			}
			scope:rollo = {
				house = {
					set_house_name = "dynn_RICE_normandie"
				}
			}
		}

		

		# Rulers who have more than one county in Normandy will lose the territory to Vikings
		if = {
			limit = {
				title:c_eu.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_eu }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_eu_ruler
			}
			scope:c_eu_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_eu
			}
			if = {
				limit = {
					scope:c_eu_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_eu_ruler = {
					add_trait = shieldmaiden
				}
			}				
			if = {
				limit = {
					scope:c_eu_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_eu_ruler }
				}
			}
		}
		if = {
			limit = {
				title:c_evreux.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_evreux }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_evreux_ruler
			}
			scope:c_evreux_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_evreux
			}
			if = {
				limit = {
					scope:c_evreux_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_evreux_ruler = {
					add_trait = shieldmaiden
				}
			}			
			if = {
				limit = {
					scope:c_evreux_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_evreux_ruler }
				}
			}
		}
		if = {
			limit = {
				title:c_lisieux.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_lisieux }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_lisieux_ruler
			}
			scope:c_lisieux_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_lisieux
			}
			if = {
				limit = {
					scope:c_lisieux_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_lisieux_ruler = {
					add_trait = shieldmaiden
				}
			}				
			if = {
				limit = {
					scope:c_lisieux_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_lisieux_ruler }
				}
			}
		}
		if = {
			limit = {
				title:c_alencon.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_alencon }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_alencon_ruler
			}
			scope:c_alencon_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_alencon
			}
			if = {
				limit = {
					scope:c_alencon_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_alencon_ruler = {
					add_trait = shieldmaiden
				}
			}				
			if = {
				limit = {
					scope:c_alencon_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_alencon_ruler }
				}
			}
		}
		if = {
			limit = {
				title:c_bayeux.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_bayeux }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_bayeux_ruler
			}
			scope:c_bayeux_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_bayeux
			}
			if = {
				limit = {
					scope:c_bayeux_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_bayeux_ruler = {
					add_trait = shieldmaiden
				}
			}				
			if = {
				limit = {
					scope:c_bayeux_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_bayeux_ruler }
				}
			}
		}
		if = {
			limit = {
				title:c_avranches.holder = {
					OR = {
						is_vassal_or_below_of = scope:charles
						this = scope:charles
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}
					NOT = { capital_county = title:c_avranches }					
				}
			}
			create_character = {
				location = root.capital_province
				template = RICE_normandy_norman_settler_template
				save_scope_as = c_avranches_ruler
			}
			scope:c_avranches_ruler = {
				#set_character_culture_norman = yes
				#add_character_flag = converted_culture_this_lifetime
				get_title = title:c_avranches
			}
			if = {
				limit = {
					scope:c_avranches_ruler = {
						is_female = yes
						OR = {
							martial >= average_skill_rating
							prowess >= average_skill_rating
						}
					}
				}
				scope:c_avranches_ruler = {
					add_trait = shieldmaiden
				}
			}			
			if = {
				limit = {
					scope:c_avranches_ruler = {
						is_married = no
					}
				}
				random = {
					chance = 50
					# If they are unmarried older women, increase chance of spawning a family to ensure they don't die heirless
					modifier = {
						is_female = yes
						age >= 35
						add = 25
					}
					game_rule_create_spouse_and_children = { CHARACTER = scope:c_avranches_ruler }
				}
			}
		}



		
		# Rollo gets any count-tier vassals in Normandy
		if = {
			limit = {
				title:c_eu.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}									
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_eu.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_evreux.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}				
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_evreux.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_lisieux.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}				
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_lisieux.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_alencon.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}					
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_alencon.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_bayeux.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}				
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_bayeux.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				title:c_avranches.holder = {
					highest_held_title_tier = tier_county
					OR = {
						is_vassal_or_below_of = scope:charles						
						AND = {
							scope:charles = {
								is_independent_ruler = no
							}
							is_vassal_or_below_of = scope:charles.top_liege
						}
					}				
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			title:c_avranches.holder = {
				change_liege = {
					liege = scope:rollo
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}


		scope:charles = {
			pay_short_term_gold = {
				target = scope:rollo
				gold = medium_gold_value
			}
		}

		add_to_global_variable_list = {
			name = RICE_normandy_rollo_list
			target = scope:rollo
		}

		add_to_global_variable_list = {
			name = RICE_normandy_charles_list
			target = scope:charles
		}


		if = {
			limit = {
				scope:rollo = {
					#is_landed = yes
					OR = {
						any_vassal = {
							any_held_title = {
								tier = tier_county
								NOT = {
									title_capital_county.title_province = { geographical_region = RICE_normandy_region }
								}
							}							
						}
						any_held_title = {
							#tier = tier_county
							NOT = {
								title_capital_county.title_province = { geographical_region = RICE_normandy_region }
							}
						}	
					}				
				}
			}
			scope:rollo = {
				# Give vassals independence or to original liege if they don't own territory in Normandy
				every_vassal = {
					# limit = {
					# 	any_held_title = {
					# 		tier = tier_county
					# 		NOT = {
					# 			title_capital_county.title_province = { geographical_region = RICE_normandy_region }
					# 		}
					# 	}							
					# }
					# Vassals with territory in Normandy shouldn't be affected
					if = {
						limit = {
							any_held_title = {
								tier = tier_county
								title_capital_county.title_province = { geographical_region = RICE_normandy_region }
							}
						}
					}
					# Give to old liege
					else_if = {
						limit = {
							exists = scope:original_liege
						}
						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = change
						}
						change_liege = {
							liege = scope:original_liege
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
					# Otherwise become independent
					else = {
						create_title_and_vassal_change = {
							type = independency
							save_scope_as = change
							add_claim_on_loss = no
						}
						becomes_independent = { change = scope:change }
						resolve_title_and_vassal_change = scope:change	
					}				
				}
				# Destroy titles higher than county outside Normandy
				every_held_title = {
					limit = {
						tier > tier_county
						NOT = {
							title_capital_county.title_province = { geographical_region = RICE_normandy_region }
						}
					}
					#save_temporary_scope_as = destroyed_title
					root = { destroy_title = prev }
				}
				if = {
					limit = {
						exists = scope:original_liege
					}
					every_held_title = {
						limit = {
							tier = tier_county
							NOT = {
								title_capital_county.title_province = { geographical_region = RICE_normandy_region }
							}
						}
						create_title_and_vassal_change = {
							type = granted
							save_scope_as = title_change
							add_claim_on_loss = no
						}
						change_title_holder = {
							holder = scope:original_liege
							change = scope:title_change
						}
						resolve_title_and_vassal_change = scope:title_change
					}
				}
				else = {
					# Give owned territory outside of Normandy to randos
					every_held_title = {
						limit = {
							tier = tier_county
							NOT = {
								title_capital_county.title_province = { geographical_region = RICE_normandy_region }
							}
						}
						save_temporary_scope_as = seceding_county
						#Create a local peasant warlord for the county.
						create_character = {
							location = scope:seceding_county.title_province
							template = post_migration_minor_warlord_template
							save_scope_as = minor_warlord
						}
						#Assign the seceding title to the new peasant warlord.
						create_title_and_vassal_change = {
							type = granted
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:seceding_county = {
							change_title_holder = {
								holder = scope:minor_warlord
								change = scope:change
								take_baronies = yes
							}
						}
						resolve_title_and_vassal_change = scope:change
						#And give the warlord their independence.
						create_title_and_vassal_change = {
							type = independency
							save_scope_as = change
							add_claim_on_loss = no
						}
						scope:minor_warlord = {
							becomes_independent = { change = scope:change }
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
			}
		}

		scope:rollo = {			
			every_courtier = {
				limit = {
					culture = { has_cultural_pillar = heritage_north_germanic }
				}
				set_character_culture_norman = yes
			}
			every_courtier = {
				limit = {
					NOT = { faith = scope:rollo.faith }
					scope:charles = {
						NOT = { faith = { has_doctrine_parameter = unreformed } }
					}
				}
				set_character_faith_with_conversion = scope:rollo.faith
			}
		}

		
		# In case Rollo isn't the vassal for some reason
		if = {
			limit = {
				# Rollo neither has title giver nor title giver's liege as his liege
				AND = {
					scope:rollo = {
						NOT = { liege = scope:charles }
					}
					scope:rollo = {
						NOT = { liege = scope:charles.top_liege }
					}
				}
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			scope:rollo = {
				change_liege = {
					liege = scope:charles
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		# Just in case
		scope:rollo = {
			convert_whole_realm_to_feudalism_effect = yes
		}

		trigger_event = normandy.0041
	}
}

# Grant the title
normandy.0041 = {
	type = character_event
	title = normandy.0041.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = scope:rollo
				}
				desc = normandy.0041.desc.rollo
			}
			desc = normandy.0041.desc # Defaults to French King's perspective
		}
	}
	theme = RICE_theme_normandy_castle
	override_icon = { reference = "gfx/interface/icons/event_types/type_diplomacy.dds" }
	
	left_portrait = {
		character = scope:charles
		animation = war_over_tie
	}
	
	right_portrait = {
		character = scope:rollo
		animation = personality_callous
	}

	immediate = {
		custom_tooltip = establish_norman_culture_decision_effect.tt.2
		
		# Summary of above hidden effects to inform players of the decision's impact.
		show_as_tooltip = {
			custom_tooltip = establish_norman_culture_decision_effect.tt
			culture:norman = {
				get_all_innovations_from = scope:old_culture_1
				get_all_innovations_from = scope:old_culture_2
			}
			scope:charles = {
				pay_short_term_gold = {
					target = scope:rollo
					gold = medium_gold_value
				}
			}
			scope:rollo = {
				add_prestige = 500
				set_character_culture_norman = yes
				add_character_flag = converted_culture_this_lifetime
				get_title = title:c_rouen
				get_title = title:d_normandy
				if = {
					limit = {
						scope:rollo = {
							has_character_flag = RICE_normandy_rollo_did_convert_flag
						}
					}
					set_character_faith_with_conversion = scope:charles.faith
				}
				dynasty = {
					add_dynasty_modifier = {
						modifier = RICE_normandy_rollo_family_equivalent
					}
				}
			}
		}

	}
	
	option = { # ok
		name = normandy.0041.a
		trigger = {
			root = scope:charles
		}
	}
	
	option = { # ok
		name = normandy.0041.b
		trigger = {
			root = scope:charles
			is_ai = no
		}
		set_player_character = scope:rollo
		# scope:rollo = {
		# 	trigger_event = normandy.0001
		# }
	}
	
	option = { # ok
		name = normandy.0041.c
		trigger = {
			root = scope:rollo
		}
	}

	after = {
		# if = {
		# 	limit = {
		# 		exists = scope:original_liege
		# 	}
		# 	# Notify original liege
		# 	scope:original_liege = {
		# 		trigger_event = normandy.0042
		# 	}
		# }
		if = {
			limit = {				
				scope:rollo = {
					has_character_flag = RICE_normandy_rollo_did_convert_flag
				}
			}
			scope:rollo = {
				remove_character_flag = RICE_normandy_rollo_did_convert_flag
			}
		}
		scope:rollo = {
			trigger_event = normandy.0001
		}
		# Notification event rulers other than Rollo or Charles equivalents
		every_ruler = {
			limit = {
				NOT = { this = scope:rollo }
				NOT = { this = scope:charles }
				OR = {
					AND = {
						exists = scope:original_liege
						this = scope:original_liege
					}
					any_held_title = {
						tier = tier_county
						any_county_province = {
							#OR = {
								geographical_region = world_europe
								#geographical_region = world_europe_west
								#geographical_region = world_europe_north
								#geographical_region = world_europe_south_italy
							#}
						}
					}
				}
			}
			trigger_event = normandy.0042
		}		
	}

}

# Notify people about Rollo's arrival in Normandy
normandy.0042 = {
	type = character_event
	title = normandy.0042.t
	desc = normandy.0042.desc
	theme = RICE_theme_normandy_castle
	override_icon = { reference = "gfx/interface/icons/event_types/type_diplomacy.dds" }
	
	left_portrait = {
		character = scope:charles
		animation = war_over_tie
	}
	
	right_portrait = {
		character = scope:rollo
		animation = personality_callous
	}

	immediate = {
		play_music_cue = "mx_cue_combat_3"
	}
	
	option = { # Ok
		name = normandy.0042.a
		custom_tooltip = normandy.0042.tooltip.struggle_started
		custom_tooltip = establish_norman_culture_decision_effect.tt
		custom_tooltip = establish_norman_culture_decision_effect.tt.2
		if = {
			limit = {
				exists = scope:original_liege
				root = scope:original_liege
			}
			custom_tooltip = normandy.0042.tooltip.old_liege
		}
	}
}




##################################################################
# 
# PILGRIMAGE TO MONT SAINT MICHEL
# normandy.0050-0069 reserved
# 
##################################################################

# Make preparations to begin the pilgrimage
normandy.0050 = {
	type = character_event
	title = normandy.0050.t
	desc = {
		desc = normandy.0050.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = {
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:RICE_normandy_michael_statue_dedicated
						}
					}
				}
				desc = normandy.0050.desc.early
			}
			desc = normandy.0050.desc.late
		}
	}
	theme = travel_pilgrimage
	override_background = { reference = RICE_background_normandy_meadow }
	
	right_portrait = root

	trigger = {
		is_available_travelling = yes
		is_landed = yes
		exists = involved_activity
		involved_activity = {
			has_activity_type = activity_RICE_normandy_mont_saint_michel_pilgrimage
		}
	}
	
	immediate = {
		title:b_avranches = {
			save_scope_as = avranches
		}
		faith = {
			save_scope_as = faith
		}
		religion:christianity_religion = { save_scope_as = christian }
		play_music_cue = "mx_cue_epic_sacral_moment"
	}
	
	option = { # Ok
		name = normandy.0051.a
	}
}

# Pilgrimage begins
# normandy.0051 = {
# 	type = character_event
# 	title = normandy.0051.t
# 	desc = {
# 		desc = normandy.0051.desc
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = {
# 					NOT = {
# 						is_target_in_global_variable_list = {
# 							name = unavailable_unique_decisions
# 							target = flag:RICE_normandy_michael_statue_dedicated
# 						}
# 					}
# 				}
# 				desc = normandy.0051.desc.early
# 			}
# 			desc = normandy.0051.desc.late
# 		}
# 	}
# 	theme = RICE_theme_normandy_meadow
# 	override_icon = { reference = "gfx/interface/icons/event_types/type_faith.dds" }
	
# 	left_portrait = {
# 		character = root
# 		animation = happiness
# 	}
	
# 	option = { # Ok
# 		name = normandy.0051.a
# 		trigger_event = {
# 			id = normandy.0052
# 			days = { 10 20 }
# 		}
# 	}
	
# 	immediate = {
# 		play_music_cue = "mx_cue_epic_sacral_moment"
# 	}
# }

# Arrive in Mont Saint Michel
normandy.0052 = {
	type = activity_event
	title = normandy.0052.t
	desc = normandy.0052.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = personality_zealous
	}

	immediate = {
		title:b_avranches = {
			save_scope_as = avranches
		}
		faith = {
			save_scope_as = faith
		}
		religion:christianity_religion = { save_scope_as = christian }
	}
	
	option = { # Ok
		name = normandy.0052.a
		trigger_event = {
			id = normandy.0053
			days = { 4 12 }
		}
	}
}

# Choose what to focus on
normandy.0053 = {
	type = activity_event
	title = normandy.0053.t
	desc = {
		desc = normandy.0053.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = {
						is_target_in_global_variable_list = {
							name = unavailable_unique_decisions
							target = flag:RICE_normandy_michael_statue_dedicated
						}
					}
				}
				desc = normandy.0053.desc.early
			}
			desc = normandy.0053.desc.late
		}
		desc = normandy.0053.desc.conclusion
	}
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = personality_rational
	}
	
	option = { # Saint Aubert
		name = normandy.0053.a
		trigger = {
			NOT = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:RICE_normandy_michael_statue_dedicated
				}
			}
		}
		random = {
			chance = RICE_normandy_mont_saint_michel_chance
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = ROOT
				title = normandy.0053.a.toast
				add_character_modifier = {
					modifier = RICE_normandy_mont_saint_michael_pilgrimage_aubert_modifier
					years = 10
				}
			}
			hidden_effect = {
				scope:activity = {
					add_activity_log_entry = {
						key = RICE_normandy_mont_saint_michel_pilgrimage_blessing_log
						tags = { good }
						# this line below adds the entry to the Effects section of the conclusion UI
						show_in_conclusion = yes
						character = root
						scope:host = {
							add_character_modifier = {
								modifier = RICE_normandy_mont_saint_michael_pilgrimage_aubert_modifier
								years = 10
							}
						}
					}
				}
			}
		}
	}
	
	option = { # Michael (Early)
		name = normandy.0053.b
		trigger = {
			NOT = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:RICE_normandy_michael_statue_dedicated
				}
			}
		}
		random = {
			chance = RICE_normandy_mont_saint_michel_chance
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = ROOT
				title = normandy.0053.b.toast
				add_character_modifier = {
					modifier = RICE_normandy_mont_saint_michael_pilgrimage_michael_early_modifier
					years = 10
				}
			}
			hidden_effect = {
				scope:activity = {
					add_activity_log_entry = {
						key = RICE_normandy_mont_saint_michel_pilgrimage_blessing_log
						tags = { good }
						# this line below adds the entry to the Effects section of the conclusion UI
						show_in_conclusion = yes
						character = root
						scope:host = {
							add_character_modifier = {
								modifier = RICE_normandy_mont_saint_michael_pilgrimage_michael_early_modifier
								years = 10
							}
						}
					}
				}
			}
		}
	}
	
	option = { # Virgin Mary
		name = normandy.0053.c
		trigger = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_normandy_michael_statue_dedicated
			}
		}
		random = {
			chance = RICE_normandy_mont_saint_michel_chance
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = ROOT
				title = normandy.0053.c.toast
				add_character_modifier = {
					modifier = RICE_normandy_mont_saint_michael_pilgrimage_virgin_mary_modifier
					years = 10
				}
			}
			hidden_effect = {
				scope:activity = {
					add_activity_log_entry = {
						key = RICE_normandy_mont_saint_michel_pilgrimage_blessing_log
						tags = { good }
						# this line below adds the entry to the Effects section of the conclusion UI
						show_in_conclusion = yes
						character = root
						scope:host = {
							add_character_modifier = {
								modifier = RICE_normandy_mont_saint_michael_pilgrimage_virgin_mary_modifier
								years = 10
							}
						}
					}
				}
			}
		}
	}
	option = { # Michael (Late)
		name = normandy.0053.d
		trigger = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_normandy_michael_statue_dedicated
			}
		}
		random = {
			chance = RICE_normandy_mont_saint_michel_chance
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = ROOT
				title = normandy.0053.d.toast
				add_character_modifier = {
					modifier = RICE_normandy_mont_saint_michael_pilgrimage_michael_later_modifier
					years = 10
				}
			}
			hidden_effect = {
				scope:activity = {
					add_activity_log_entry = {
						key = RICE_normandy_mont_saint_michel_pilgrimage_blessing_log
						tags = { good }
						# this line below adds the entry to the Effects section of the conclusion UI
						show_in_conclusion = yes
						character = root
						scope:host = {
							add_character_modifier = {
								modifier = RICE_normandy_mont_saint_michael_pilgrimage_michael_later_modifier
								years = 10
							}
						}
					}
				}
			}
		}
	}

	after = {		
		trigger_event = {
			id = normandy.0054
			days = { 4 12 }
		}
	}

}

# Preparing to go home
normandy.0054 = {
	type = activity_event
	title = normandy.0054.t
	desc = normandy.0054.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = personality_zealous
	}
	
	option = { # ok
		name = normandy.0054.a
		RICE_normandy_mont_saint_michel_pilgrimage_completed_log_entry_effect = yes
	}

	after = {
		hidden_effect = {
			scope:activity = {
				hidden_effect = { skip_activity_phase = yes }
			}
		}
	}

}

# Going home
# normandy.0055 = {
# 	type = activity_event
# 	title = normandy.0055.t
# 	desc = normandy.0055.desc
# 	theme = friendly
	
# 	right_portrait = {
# 		character = root
# 		animation = personality_zealous
# 	}
	
# 	option = { # ok
# 		name = normandy.0055.a
# 		add_piety = 200
# 		pilgrimage_additional_reward_effect = yes
# 		add_trait = pilgrim
# 	}

# 	after = {
# 		scope:activity = {
# 			complete_activity = yes
# 		}
# 	}

# }




# Make preparations to go to proccession
normandy.0060 = {
	type = character_event
	title = normandy.0060.t
	desc = normandy.0060.desc
	theme = travel
	override_icon = { reference = "gfx/interface/icons/event_types/type_faith.dds" }
	
	right_portrait = root

	trigger = {	
		is_available_travelling = yes
		is_landed = yes
		exists = involved_activity	
		involved_activity = {
			has_activity_type = activity_RICE_normandy_saint_aubert_procession
		}
	}
	
	immediate = {
		title:b_avranches = {
			save_scope_as = avranches
		}
		faith = {
			save_scope_as = faith
		}
	}
	
	option = { # Ok
		name = normandy.0060.a
	}
}

# Arrive at Avranches
normandy.0061 = {
	type = activity_event
	title = normandy.0061.t
	desc = normandy.0061.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	left_portrait = {
		character = root
		animation = happiness
	}

	immediate = {
		title:b_avranches = {
			save_scope_as = avranches
		}
		faith = {
			save_scope_as = faith
		}
		play_music_cue = "mx_cue_low_key_positive"
	}
	
	option = { # Ok
		name = normandy.0061.a
		# You witness the miracle
		random = {
			chance = RICE_normandy_procession_miracle_chance
			custom_tooltip = normandy.0061.miracle.tooltip
			send_interface_toast = {
				type = event_toast_effect_good
				left_icon = ROOT
				title = normandy.0061.toast
				add_piety = 100
				add_character_modifier = {
					modifier = RICE_normandy_saint_aubert_miracle
					years = 10
				}
			}
			play_music_cue = mx_cue_sacredrite
		}
		trigger_event = {
			id = normandy.0062
			days = { 10 20 }
		}
	}
	
	after = {
		if = {
			limit = {
				has_character_modifier = RICE_normandy_saint_aubert_miracle
			}
			hidden_effect = {
				scope:activity = {
					add_activity_log_entry = {
						key = RICE_normandy_saint_auberts_procession_witnessed_miracle_log
						tags = { good }
						# this line below adds the entry to the Effects section of the conclusion UI
						show_in_conclusion = yes
						character = scope:host
						custom_tooltip = RICE_normandy_saint_auberts_procession_witnessed_miracle_log
					}
				}				
			}
		}
		
	}
}


# Come home
normandy.0062 = {
	type = activity_event
	title = normandy.0062.t
	desc = {
		desc = normandy.0062.desc
		triggered_desc = {
			trigger = {
				has_character_modifier = RICE_normandy_saint_aubert_miracle
			}
			desc = normandy.0062.desc.miracle
		}
	}
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = happiness
	}
	
	option = { # ok
		name = normandy.0062.a
		add_piety = 100
	}

	after = {
		scope:activity = {
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				custom = EVERY_ACTIVITY_PARTICIPANT_EFFECT
				add_piety = 25
			}	
			hidden_effect = { skip_activity_phase = yes }
		}
	}

}

# Miracle
# normandy.0063 = {
# 	type = character_event
# 	title = normandy.0063.t
# 	desc = normandy.0063.desc
# 	theme = RICE_theme_normandy_mont_saint_michel
	
# 	right_portrait = {
# 		character = root
# 		animation = admiration
# 	}

# 	immediate = {
# 		play_music_cue = mx_cue_sacredrite
# 	}
	
# 	option = { # ok
# 		name = normandy.0062.a
# 		add_piety = 100
# 		add_character_modifier = {
# 			modifier = RICE_normandy_saint_aubert_miracle
# 			years = 10
# 		}
# 	}

# }

# Scavenger hunt for Saint Aubert's relics
normandy.0065 = {
	type = character_event
	title = normandy.0065.t
	desc = {
		desc = normandy.0065.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					is_target_in_global_variable_list = {
						name = unavailable_unique_decisions
						target = flag:RICE_normandy_saint_aubert_relics_found
					}
				}
				desc = normandy.0065.desc.found
			}
			desc = normandy.0065.desc.not_found
		}
	}
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = personality_honorable
	}

	immediate = {
		random = {
			chance = RICE_normandy_saint_aubert_relic_discovery_chance
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_normandy_saint_aubert_relics_found
			}
		}
		play_music_cue = mx_cue_sacredrite
	}
	
	option = { # ok
		name = normandy.0065.a
		trigger = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_normandy_saint_aubert_relics_found
			}
		}
		save_scope_as = relic_discoverer
		add_piety = { 150 250 }
		add_character_modifier = {
			modifier = RICE_normandy_saint_aubert_relic_discoverer
		}
		if = {
			limit = {
				exists = struggle:RICE_normandy_struggle
			}
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_saint_auberts_relics_found
					character = root
				}
			}
		}
		custom_tooltip = normandy.0065.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0065.info
		}
		every_ruler = {
			limit = {
				is_ai = no
				any_held_title = {
					tier = tier_county
					any_county_province = {
						OR = {
							geographical_region = world_europe_west_francia
							geographical_region = ghw_region_england
						}
					}
				}
			}
			trigger_event = normandy.0067
		}
	}
	
	option = { # ok
		name = normandy.0065.b
		trigger = {
			NOT = {
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:RICE_normandy_saint_aubert_relics_found
				}
			}
		}
		add_piety = { 50 100 }
		if = {
			limit = {
				exists = struggle:RICE_normandy_struggle
			}
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_saint_auberts_relics_fail_search
					character = root
				}
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0065.info
		}
	}

}

# Notification event about Saint Aubert's relics being lost
normandy.0066 = {
	type = character_event
	title = normandy.0066.t
	desc = normandy.0066.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = scope:mont_saint_michel_ruler
		triggered_animation = {
			trigger = { scope:mont_saint_michel_ruler.faith.religion = { rice_religion_trigger_christianity_religion = yes } }
			animation = worry
		}
		triggered_animation = {
			trigger = { NOT = { scope:mont_saint_michel_ruler.faith.religion = { rice_religion_trigger_christianity_religion = yes } } }
			animation = personality_callous
		}
	}

	immediate = {
		title:c_avranches.holder = {
			save_scope_as = mont_saint_michel_ruler
		}
		religion:christianity_religion = { save_scope_as = christian }
	}
	
	option = { # ok
		name = normandy.0066.a
		custom_tooltip = normandy.0066.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0066.info
		}
	}

}

# Notification event about Saint Aubert's relics being found
normandy.0067 = {
	type = character_event
	title = normandy.0067.t
	desc = normandy.0067.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = scope:relic_discoverer
		animation = personality_content
	}

	immediate = {
		religion:christianity_religion = { save_scope_as = christian }
		play_music_cue = mx_cue_sacredrite
		show_as_tooltip = {			
			if = {
				limit = {
					exists = struggle:RICE_normandy_struggle
				}
				struggle:RICE_normandy_struggle = {
					activate_struggle_catalyst = {
						catalyst = catalyst_RICE_normandy_saint_auberts_relics_found
						character = scope:relic_discoverer
					}
				}
			}
		}
	}
	
	option = { # ok
		name = normandy.0067.a
		trigger = {
			religion = { rice_religion_trigger_christianity_religion = yes }
		}
		custom_tooltip = normandy.0067.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0065.info
		}
	}
	
	option = { # ok
		name = normandy.0067.b
		trigger = {
			NOT = { religion = { rice_religion_trigger_christianity_religion = yes } }
		}
		custom_tooltip = normandy.0067.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0065.info
		}
	}

}


# Notification event about Saint Aubert's relics being found
normandy.0068 = {
	type = character_event
	title = normandy.0068.t
	desc = normandy.0068.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = scope:statue_giver
		animation = personality_zealous
	}

	immediate = {
		religion:christianity_religion = { save_scope_as = christian }
		play_music_cue = mx_cue_sacredrite
		if = {
			limit = {
				this = scope:statue_giver
			}
			scope:statue_giver = {
				RICE_mont_saint_michel_statue_effect = yes
			}
		}
		else = {
			show_as_tooltip = {			
				scope:statue_giver = {
					RICE_mont_saint_michel_statue_effect = yes
				}
			}
		}
		custom_tooltip = RICE_normandy_archangel_michael_statue_effect_tooltip_1
		custom_tooltip = RICE_normandy_archangel_michael_statue_effect_tooltip_2
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = normandy.0068.info
		}
	}
	
	option = { # ok
		name = normandy.0068.a
		trigger = {
			religion = { rice_religion_trigger_christianity_religion = yes }
		}
	}
	
	option = { # ok
		name = normandy.0068.b
		trigger = {
			NOT = { religion = { rice_religion_trigger_christianity_religion = yes } }
		}
	}

}




######################################################################################
# 
# FLAVOR EVENTS
# 
# normandy.0070-normandy.0079 reserved
# 
######################################################################################


# Get some chausey stone?
normandy.0070 = {
	type = character_event
	title = normandy.0070.t
	desc = normandy.0070.desc
	theme = RICE_theme_normandy_castle
	
	right_portrait = root
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_and_brittany_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = diligent
		}
		modifier = {
			add = -0.2
			has_trait = lazy
		}
		modifier = {
			add = 0.2
			has_trait = just
		}
		modifier = {
			add = -0.2
			has_trait = arbitrary
		}
		modifier = {
			add = 0.2
			has_trait = ambitious
		}
		modifier = {
			add = -0.2
			has_trait = content
		}
	}

	immediate = {
		title:c_avranches = {
			save_scope_as = avranches
		}
	}

	option = { # Ok
		name = normandy.0070.a
		trigger = {
			OR = {
				gold >= 50
				is_ai = no
			}
		}
		remove_short_term_gold = 50
		add_character_modifier = {
			modifier = RICE_normandy_chausey_stone
			years = 10
		}
		stress_impact = {
			greedy = miniscule_stress_impact_gain
		}
	}

	option = { # Ok
		name = normandy.0070.b
	}
}

# Donate to Mont Saint Michel?
normandy.0071 = {
	type = character_event
	title = normandy.0071.t
	desc = normandy.0071.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	right_portrait = {
		character = root
		animation = personality_zealous
	}
	
	trigger = {
		religion = { rice_religion_trigger_christianity_religion = yes }
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_and_brittany_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = generous
		}
		modifier = {
			add = -0.2
			has_trait = greedy
		}
		modifier = {
			add = 0.2
			has_trait = zealous
		}
		modifier = {
			add = -0.2
			has_trait = cynical
		}
		modifier = {
			add = 0.2
			has_trait = ambitious
		}
		modifier = {
			add = -0.2
			has_trait = content
		}
	}

	option = { # Ok
		name = normandy.0071.a
		trigger = {
			OR = {
				gold >= 25
				is_ai = no
			}
		}
		remove_short_term_gold = 25
		add_piety = 75
		stress_impact = {
			greedy = minor_stress_impact_gain
			cynical = miniscule_stress_impact_gain
		}
	}

	option = { # Ok
		name = normandy.0071.b
		trigger = {
			OR = {
				gold >= 50
				is_ai = no
			}
		}
		remove_short_term_gold = 50
		add_piety = 150
		stress_impact = {
			greedy = medium_stress_impact_gain
			cynical = minor_stress_impact_gain
		}
	}

	option = { # Ok
		name = normandy.0071.c
		stress_impact = {
			zealous = minor_stress_impact_gain
		}
	}
}

# A miracle at Mont Saint Michel
normandy.0072 = {
	type = character_event
	title = normandy.0072.t
	desc = normandy.0072.desc
	theme = RICE_theme_normandy_mont_saint_michel
	
	left_portrait = {
		character = root
		animation = personality_cynical
	}
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_greater_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = generous
		}
		modifier = {
			add = -0.2
			has_trait = greedy
		}
		modifier = {
			add = 0.2
			has_trait = zealous
		}
		modifier = {
			add = -0.2
			has_trait = cynical
		}
		modifier = {
			add = 0.2
			has_trait = ambitious
		}
		modifier = {
			add = -0.2
			has_trait = content
		}
	}

	immediate = {	
		religion:christianity_religion = { save_scope_as = christian }	
		title:c_avranches = {
			save_scope_as = avranches
		}
	}

	option = { # Ok
		name = normandy.0072.a
		add_prestige = 25
	}

	option = { # Ok
		name = normandy.0072.b
		trigger = {
			religion = { rice_religion_trigger_christianity_religion = yes }
		}
		add_piety = 25
	}

	option = { # Ok
		name = normandy.0072.c
		trigger = {
			NOT = {
				religion = { rice_religion_trigger_christianity_religion = yes }
			}
		}
		add_piety = 25
	}
}


# Norman apple orchards
normandy.0073 = {
	type = character_event
	title = normandy.0073.t
	desc = normandy.0073.desc
	theme = RICE_theme_normandy_meadow
	
	left_portrait = root
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = just
		}
		modifier = {
			add = -0.2
			has_trait = arbitrary
		}
		modifier = {
			add = 0.2
			has_trait = patient
		}
		modifier = {
			add = -0.2
			has_trait = impatient
		}
		modifier = {
			add = 0.2
			has_trait = diligent
		}
		modifier = {
			add = -0.2
			has_trait = lazy
		}
	}

	immediate = {	
		random_held_title = {
			limit = {
				tier = tier_county
				any_county_province = {
					geographical_region = RICE_normandy_region
				}
			}
			save_scope_as = county
		}
	}

	option = { # Ok
		name = normandy.0073.a
		trigger = {
			OR = {
				gold >= 50
				is_ai = no
			}
		}
		remove_short_term_gold = 50
		scope:county = {
			add_county_modifier = {
				modifier = RICE_normandy_apple_orchards
				years = 10
			}
		}
	}

	option = { # Ok
		name = normandy.0073.b
	}
}


# Beef tripe / Tripes à la mode de Caen
normandy.0074 = {
	type = character_event
	title = normandy.0074.t
	desc = normandy.0074.desc
	theme = feast_activity
	
	right_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = gluttonous
		}
		modifier = {
			add = -0.2
			has_trait = temperate
		}
		modifier = {
			add = 0.2
			has_trait = gregarious
		}
		modifier = {
			add = -0.2
			has_trait = shy
		}
		modifier = {
			add = 0.2
			has_trait = generous
		}
		modifier = {
			add = -0.2
			has_trait = greedy
		}
	}

	option = { # Ok
		name = normandy.0074.a
		add_prestige = 50
		stress_impact = {
			base = miniscule_stress_impact_loss
			gluttonous = miniscule_stress_impact_loss
			gregarious = miniscule_stress_impact_loss
		}
	}
}



# Norman brioche
normandy.0075 = {
	type = character_event
	title = normandy.0075.t
	desc = normandy.0075.desc
	theme = feast_activity
	override_background = { reference = bp1_kitchen_western }
	
	right_portrait = {
		character = root
		animation = personality_content
	}
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = gluttonous
		}
		modifier = {
			add = -0.2
			has_trait = temperate
		}
		modifier = {
			add = 0.2
			has_trait = content
		}
		modifier = {
			add = -0.2
			has_trait = ambitious
		}
		modifier = {
			add = 0.2
			has_trait = patient
		}
		modifier = {
			add = -0.2
			has_trait = impatient
		}
	}

	immediate = {
		random_held_title = {
			limit = {
				tier = tier_county
				any_county_province = {
					geographical_region = RICE_greater_normandy_region
				}
			}
			save_scope_as = county
		}
	}

	option = { # Ok
		name = normandy.0075.a
		add_character_modifier = {
			modifier = RICE_normandy_brioche
			years = 5
		}
	}
}



# Visiting the white cliffs of Étretat
normandy.0076 = {
	type = character_event
	title = normandy.0076.t
	desc = normandy.0076.desc
	theme = RICE_theme_normandy_outpost
	
	right_portrait = {
		character = root
		animation = personality_forgiving
	}
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = gluttonous
		}
		modifier = {
			add = -0.2
			has_trait = temperate
		}
		modifier = {
			add = 0.2
			has_trait = content
		}
		modifier = {
			add = -0.2
			has_trait = ambitious
		}
		modifier = {
			add = 0.2
			has_trait = patient
		}
		modifier = {
			add = -0.2
			has_trait = impatient
		}
	}

	immediate = {
		title:c_eu = {
			save_scope_as = eu
		}
	}

	option = { # Ok
		name = normandy.0076.a
		stress_impact = {
			base = minor_stress_impact_loss
			content = miniscule_stress_impact_loss
		}
	}
}


# Hearing about the legend of castle Pirou
normandy.0077 = {
	type = character_event
	title = normandy.0077.t
	desc = normandy.0077.desc
	theme = RICE_theme_normandy_castle
	
	right_portrait = {
		character = root
		animation = personality_rational
	}
	
	trigger = {
		any_held_title = {
			tier = tier_county
			any_county_province = {
				geographical_region = RICE_greater_normandy_region
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			has_trait = gregarious
		}
		modifier = {
			add = -0.2
			has_trait = shy
		}
		modifier = {
			add = 0.2
			has_trait = content
		}
		modifier = {
			add = -0.2
			has_trait = ambitious
		}
		modifier = {
			add = 0.2
			has_trait = patient
		}
		modifier = {
			add = -0.2
			has_trait = impatient
		}
	}

	immediate = {
		title:c_avranches = {
			save_scope_as = avranches
		}
	}

	option = { # Ok
		name = normandy.0077.a
		add_piety = 25
		stress_impact = {
			trusting = miniscule_stress_impact_gain
		}
	}

	option = { # Ok
		name = normandy.0077.b
		add_prestige = 25
		stress_impact = {
			cynical = miniscule_stress_impact_gain
		}
	}
}



######################################################################################
# 
# ROLLO EVENTS
# 
# normandy.0080-normandy.0089 reserved
# 
######################################################################################



# Play as Rollo
normandy.0080 = {
	type = character_event
	title = normandy.0080.t
	desc = normandy.0080.desc
	theme = RICE_theme_normandy_outpost
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_positive.dds" }
	
	left_portrait = {
		character = scope:rollo
		animation = throne_room_conversation_4
	}

	right_portrait = {
		character = scope:thrall
		animation = throne_room_bow_2
	}
	
	immediate = {
		save_scope_as = rollo

		if = {
			limit = {
				exists = title:d_sjaelland.holder
			}
			title:d_sjaelland.holder = {
				save_scope_as = sjaelland_holder
			}
		}

		# Find a random European county for the Christian thrall
		if = {
			limit = {
				any_county_in_region = {
					region = graphical_western
					religion = { rice_religion_trigger_christianity_religion = yes }
				}
			}
			every_county_in_region = {
				region = graphical_western
				limit = {
					religion = { rice_religion_trigger_christianity_religion = yes }
				}
				add_to_list = christian_counties
			}
			random_in_list = {
				list = christian_counties
				save_scope_as = thrall_county
			}
			scope:thrall_county.faith = {
				save_scope_as = thrall_faith
			}
			scope:thrall_county.culture = {
				save_scope_as = thrall_culture
			}
		}
		# If none exist for some reason, generate them as somewhere from the British isles 
		else = {
			random_list = {
				# Anglo-Saxon
				10 = {
					culture:anglo_saxon = {
						save_scope_as = thrall_culture
					}
					faith:catholic = {
						save_scope_as = thrall_faith
					}
				}
				# Irish
				10 = {
					culture:irish = {
						save_scope_as = thrall_culture
					}
					faith:insular_celtic = {
						save_scope_as = thrall_faith
					}
				}
			}
		}
		
		create_character = {
			location = root.capital_province
			template = RICE_christian_thrall_template
			faith = scope:thrall_faith
			culture = scope:thrall_culture
			save_scope_as = thrall
		}

		# scope:rollo = {
		# 	dynasty = {
		# 		set_dynasty_name = "dynn_RICE_rollo_placeholder"
		# 	}
		# 	house = {
		# 		set_house_name = "dynn_RICE_rollo_placeholder"
		# 	}
		# }
		religion:christianity_religion = { save_scope_as = christian }
	}
	
	# af More
	option = {
		name = normandy.0080.a
		scope:rollo = {
			dynasty = {
				set_dynasty_name = "dynn_RICE_rollo_af_more"
			}
			house = {
				set_house_name = "dynn_RICE_rollo_af_more"
			}
		}
		custom_tooltip = normandy.0080.a.tooltip
		custom_tooltip = normandy.0080.tooltip
		show_as_tooltip = {
			add_character_modifier = {
				modifier = RICE_normandy_aspiration_settle_in_normandy
			}
			add_character_modifier = {
				modifier = RICE_normandy_rollo_modifier
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0080.a.info
			}
		}
		trigger_event = normandy.0081
	}
	
	# af Fasge
	option = {
		name = normandy.0080.b
		scope:rollo = {
			dynasty = {
				set_dynasty_name = "dynn_RICE_rollo_af_fasge"
			}
			house = {
				set_house_name = "dynn_RICE_rollo_af_fasge"
			}
		}
		custom_tooltip = normandy.0080.b.tooltip
		custom_tooltip = normandy.0080.tooltip
		show_as_tooltip = {
			add_character_modifier = {
				modifier = RICE_normandy_aspiration_settle_in_normandy
			}
			add_character_modifier = {
				modifier = RICE_normandy_rollo_modifier
			}
		}
		get_title = title:c_lolland_falster
		hidden_effect = {
			character:186004 = {
				get_title = title:c_trandheim
			}
		}
		if = {
			limit = {
				exists = title:d_sjaelland.holder
			}
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = change
			}
			scope:rollo = {
				change_liege = {
					liege = scope:sjaelland_holder
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0080.b.info
			}
		}
		trigger_event = normandy.0081
	}
	
	# None of these
	option = {
		name = normandy.0080.c
		scope:rollo = {
			dynasty = {
				set_dynasty_name = "dynn_RICE_rollo_placeholder"
			}
			house = {
				set_house_name = "dynn_RICE_rollo_placeholder"
			}
		}
		custom_tooltip = normandy.0080.c.tooltip
		custom_tooltip = normandy.0080.tooltip
		show_as_tooltip = {
			add_character_modifier = {
				modifier = RICE_normandy_aspiration_settle_in_normandy
			}
			add_character_modifier = {
				modifier = RICE_normandy_rollo_modifier
			}
		}
		random_list = {
			50 = {
				custom_tooltip = normandy.0080.c.tooltip.stay
			}
			50 = {
				get_title = title:c_lolland_falster
				hidden_effect = {
					character:186004 = {
						get_title = title:c_trandheim
					}
				}
				if = {
					limit = {
						exists = title:d_sjaelland.holder
					}
					create_title_and_vassal_change = {
						type = swear_fealty
						save_scope_as = change
					}
					scope:rollo = {
						change_liege = {
							liege = scope:sjaelland_holder
							change = scope:change
						}
					}
					resolve_title_and_vassal_change = scope:change
				}				
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0080.c.info
			}
		}
		trigger_event = normandy.0081
	}
	
	# Skip the boring introduction
	option = {
		name = normandy.0080.d
		# There should be a chance the AI doesn't care
		#trigger = {
		#	is_ai = no
		#}
		custom_tooltip = normandy.0080.d.tooltip
		custom_tooltip = normandy.0080.tooltip
		remove_character_modifier = RICE_normandy_aspiration_settle_in_normandy
		if = {
			limit = { has_variable = RICE_historical_aspiration }
			remove_variable = RICE_historical_aspiration
		}
		show_as_tooltip = {
			remove_character_modifier = RICE_normandy_rollo_modifier
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0080.d.info
			}
		}
		# hidden_effect = {
		# 	scope:rollo = {
		# 		dynasty = {
		# 			set_dynasty_name = "dynn_RICE_rollo_placeholder"
		# 		}
		# 		house = {
		# 			set_house_name = "dynn_RICE_rollo_placeholder"
		# 		}
		# 	}
		# }
	}

	#after = {
	#	trigger_event = normandy.0081
	#}

}




# Rollo - king of Denmark
normandy.0081 = {
	type = character_event
	title = normandy.0081.t
	desc = normandy.0081.desc
	theme = RICE_theme_normandy_outpost
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_martial.dds" }
	
	left_portrait = {
		character = scope:rollo
		animation = anger
	}
	
	right_portrait = {
		character = scope:king
		animation = personality_callous
	}

	immediate = {
		hidden_effect = {
			remove_trait = lustful
		}
		#remove_trait = arrogant # Possibly replace it with another trait
		# Make sure Danish "king" or equivalent exists
		if = {
			limit = {
				exists = title:d_sjaelland.holder
			}
			title:d_sjaelland.holder = {
				save_scope_as = king
			}
		}
		# Otherwise, if he doesn't exist for whatever reason, find a random Danish ruler as the equivalent
		else = {
			random_county = {
				limit = {
					any_county_province = {
						geographical_region = custom_danish
					}
					NOT = { holder = root }
				}
				holder = {
					save_scope_as = king
				}
			}
		}
	}
		
	# We bow to no king
	option = {
		name = normandy.0081.a
		random_list = {
			#40 = { }
			20 = { add_trait = stubborn }
			20 = { add_trait = just }
			20 = { add_trait = ambitious }
		}	
		add_diplomacy_lifestyle_perk_points = 1
		scope:king = {
			add_opinion = {
				target = root
				modifier = RICE_opinion_political_disagreements
			}
			reverse_add_opinion = {
				target = root
				modifier = RICE_opinion_political_disagreements
			}			
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0081.info
			}
		}
		trigger_event = normandy.0082
	}
		
	# Brother was murdered
	option = {
		name = normandy.0081.b
		random_list = {
			#40 = { }
			20 = { add_trait = vengeful }
			20 = { add_trait = just }
			20 = { add_trait = wrathful }
		}	
		add_intrigue_lifestyle_perk_points = 1
		scope:king = {
			reverse_add_opinion = {
				target = root
				modifier = murdered_close_relation_opinion
			}			
		}
		set_relation_rival = {
			target = scope:king
			reason = RICE_rival_rollo_danish_king_reason
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0081.info
			}
		}
		trigger_event = normandy.0082
	}
		
	# Neutral
	option = {
		name = normandy.0081.c
		random_list = {
			#40 = { }
			20 = { add_trait = calm }
			20 = { add_trait = forgiving }
			20 = { add_trait = compassionate }
		}	
		add_stewardship_lifestyle_perk_points = 1
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0081.info
			}
		}
		trigger_event = normandy.0082
	}
		
	# Skip this stuff
	option = {
		name = normandy.0081.d
		trigger = {
			is_ai = no
		}
		custom_tooltip = normandy.0080.d.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0081.info
			}
		}
		hidden_effect = {
			add_trait = lustful
		}
	}

}



# Rollo - chat with the thrall again
normandy.0082 = {
	type = character_event
	title = normandy.0082.t
	desc = normandy.0082.desc
	theme = RICE_theme_normandy_outpost
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_learning.dds" }
	
	left_portrait = {
		character = scope:rollo
		animation = personality_rational
	}
	
	right_portrait = {
		character = scope:thrall
		animation = throne_room_bow_3
	}
		
	# Curious about God
	option = {
		name = normandy.0082.a
		add_piety = 100
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0082.info
			}
		}
		# So the next dream doesn't happen right away
		add_character_flag = {
			flag = RICE_normandy_rollo_dream_timer
			days = 730
		}
		hidden_effect = {
			scope:thrall = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}

	# Glory? Awesome
	option = {
		name = normandy.0082.b
		add_prestige = 100
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0082.info
			}
		}
		# So the next dream doesn't happen right away
		add_character_flag = {
			flag = RICE_normandy_rollo_dream_timer
			days = 730
		}
		hidden_effect = {
			scope:thrall = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}

	# Stay by my side
	option = {
		name = normandy.0082.c
		add_courtier = scope:thrall
		scope:thrall = {
			add_character_flag = blocked_from_leaving
			add_character_flag = RICE_rollo_original_thrall
		}
		scope:thrall = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 30
			}		
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0082.info
			}
		}
		# So the next dream doesn't happen right away
		add_character_flag = {
			flag = RICE_normandy_rollo_dream_timer
			days = 730
		}
	}
		
	# Skip this stuff
	option = {
		name = normandy.0082.d
		trigger = {
			is_ai = no
		}
		custom_tooltip = normandy.0080.d.tooltip
		if = {
			limit = {
				has_character_modifier = RICE_normandy_rollo_modifier
			}
			remove_character_modifier = RICE_normandy_rollo_modifier
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0082.info
			}
		}
		hidden_effect = {
			scope:thrall = {
				death = {
					death_reason = death_vanished
				}
			}			
		}
	}

}


# Rollo - have another dream?
normandy.0083 = {
	type = character_event
	title = normandy.0083.t
	desc = normandy.0083.desc
	theme = RICE_theme_normandy_outpost
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_positive.dds" }
	
	left_portrait = {
		character = scope:rollo
		animation = personality_rational
	}

	trigger = {
		NOT = { has_global_variable = RICE_normandy_struggle_started }
		is_alive = yes
		is_landed = yes
		has_character_modifier = RICE_normandy_rollo_modifier		
	}

	immediate = {
		save_scope_as = rollo
		if = {
			limit = {
				any_courtier = {
					has_character_flag = RICE_rollo_original_thrall
				}
			}
			random_courtier = {				
				limit = {
					has_character_flag = RICE_rollo_original_thrall
				}
				save_scope_as = interpreter
			}
		}
		else_if = {
			limit = {
				any_vassal_or_below = {
					has_character_flag = RICE_rollo_original_thrall
				}
			}
			random_vassal_or_below = {				
				limit = {
					has_character_flag = RICE_rollo_original_thrall
				}
				save_scope_as = interpreter
			}
		}
		else_if = {
			limit = {
				any_vassal_or_below = {
					any_courtier = {
						has_character_flag = RICE_rollo_original_thrall
					}
				}
			}
			random_vassal_or_below = {				
				limit = {
					has_character_flag = RICE_rollo_original_thrall
				}
				save_scope_as = interpreter
			}
		}
	}	

		
	# Curious
	option = {
		name = normandy.0083.a
		# trigger = {
		# 	exists = scope:interpreter
		# }
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0083.info
			}
		}
		trigger_event = normandy.0084
	}
	# Skip this stuff
	option = {
		name = normandy.0083.b
		trigger = {
			is_ai = no
		}
		custom_tooltip = normandy.0080.d.tooltip
		if = {
			limit = {
				has_character_modifier = RICE_normandy_rollo_modifier
			}
			remove_character_modifier = RICE_normandy_rollo_modifier
		}
		if = {
			limit = {
				has_character_modifier = RICE_normandy_aspiration_settle_in_normandy
			}
			remove_character_modifier = RICE_normandy_aspiration_settle_in_normandy
		}
		if = {
			limit = { has_variable = RICE_historical_aspiration }
			remove_variable = RICE_historical_aspiration
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0083.info
			}
		}
	}

}


# Rollo - the dream of the mountain spring
normandy.0084 = {
	type = character_event
	title = normandy.0084.t
	desc = normandy.0084.desc
	theme = RICE_theme_normandy_meadow
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_positive.dds" }
	
	left_portrait = {
		character = scope:rollo
		animation = happiness
	}

	immediate = {
		if = {
			limit = {
				NOT = { exists = scope:interpreter }
			}
			# Find a random European county for the Christian thrall
			if = {
				limit = {
					any_county_in_region = {
						region = graphical_western
						religion = { rice_religion_trigger_christianity_religion = yes }
					}
				}
				every_county_in_region = {
					region = graphical_western
					limit = {
						religion = { rice_religion_trigger_christianity_religion = yes }
					}
					add_to_list = christian_counties
				}
				random_in_list = {
					list = christian_counties
					save_scope_as = thrall_county
				}
				scope:thrall_county.faith = {
					save_scope_as = thrall_faith
				}
				scope:thrall_county.culture = {
					save_scope_as = thrall_culture
				}
			}
			# If none exist for some reason, generate them as somewhere from the British isles 
			else = {
				random_list = {
					# Anglo-Saxon
					10 = {
						culture:anglo_saxon = {
							save_scope_as = thrall_culture
						}
						faith:catholic = {
							save_scope_as = thrall_faith
						}
					}
					# Irish
					10 = {
						culture:irish = {
							save_scope_as = thrall_culture
						}
						faith:insular_celtic = {
							save_scope_as = thrall_faith
						}
					}
				}
			}
		}				
	}
		
	# Curious
	option = {
		name = normandy.0084.a
		trigger = {
			exists = scope:interpreter
		}
		# if = {
		# 	limit = {
		# 		has_game_rule = RICE_historical_context_on
		# 	}
		# 	custom_description_no_bullet = {
		# 		text = normandy.0084.info
		# 	}
		# }
	}
	# Interesting
	option = {
		name = normandy.0084.b
		trigger = {
			NOT = { exists = scope:interpreter }
		}
		# if = {
		# 	limit = {
		# 		has_game_rule = RICE_historical_context_on
		# 	}
		# 	custom_description_no_bullet = {
		# 		text = normandy.0084.info
		# 	}
		# }
		hidden_effect = {			
			create_character = {
				location = root.capital_province
				template = RICE_christian_thrall_template
				faith = scope:thrall_faith
				culture = scope:thrall_culture
				save_scope_as = interpreter
			}
			scope:interpreter = {
				add_character_flag = RICE_normandy_rollo_generated_prisoner
			}
			imprison = {
				target = scope:interpreter
				type = dungeon
			}
		}
	}

	after = {		
		trigger_event = normandy.0085
	}

}



# Rollo - interpreting the dream and preparing for Francia
normandy.0085 = {
	type = character_event
	title = normandy.0085.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:interpreter = {
						NOT = { has_character_flag = RICE_normandy_rollo_generated_prisoner }
					}
				}
				desc = normandy.0085.desc.original
			}	
			desc = normandy.0085.desc.not_original
		}
		desc = normandy.0085.desc
	}
	theme = RICE_theme_normandy_outpost
	override_icon = { reference = "gfx/interface/icons/event_types/type_memory_learning.dds" }

	left_portrait = {
		character = scope:rollo
		animation = personality_bold
	}
	
	right_portrait = {
		character = scope:interpreter
		animation = personality_rational
	}
	
	option = { # Embrace destiny
		name = normandy.0085.a
		add_prestige = 100
		add_piety = 100
		if = {
			limit = {
				exists = dynasty
			}
			dynasty = {
				add_dynasty_prestige = 250
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0085.info
			}
		}
	}
	
	# option = { # Ignore destiny
	# 	name = normandy.0085.b
	# 	if = {
	# 		limit = {
	# 			has_game_rule = RICE_historical_context_on
	# 		}
	# 		custom_description_no_bullet = {
	# 			text = normandy.0084.info
	# 		}
	# 	}
	# }

}




# Rollo - concluding event
normandy.0086 = {
	type = character_event
	title = normandy.0086.t
	desc = normandy.0086.desc
	theme = RICE_theme_normandy_castle

	right_portrait = {
		character = scope:rollo
		animation = war_over_win
	}

	immediate = {
		# if = {
		# 	limit = {
		# 		this = character:242
		# 	}
		# }
		# character:242 = {
		# 	is_landed = yes
		# 	has_character_modifier = RICE_normandy_rollo_modifier
		# 	has_character_flag = RICE_normandy_rollo_big_dream
		# }
		add_character_flag = RICE_normandy_rollo_concluding_event_done
	}
	
	option = { # Religious
		name = normandy.0086.a
		add_piety = 200
		if = {
			limit = {
				exists = dynasty
			}
			dynasty = {
				add_dynasty_prestige = 250
			}
		}
		random_list = {
			30 = { }
			40 = {
				if = {
					limit = {
						has_trait = cynical
					}
					remove_trait = cynical
				}
				add_trait = zealous
			}
			15 = {
				if = {
					limit = {
						has_trait = impatient
					}
					remove_trait = impatient
				}
				add_trait = patient
			}
			15 = {
				if = {
					limit = {
						has_trait = ambitious
					}
					remove_trait = ambitious
				}
				add_trait = content
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0086.info
			}
		}
	}
	
	option = { # Glory
		name = normandy.0086.b
		add_prestige = 200
		if = {
			limit = {
				exists = dynasty
			}
			dynasty = {
				add_dynasty_prestige = 250
			}
		}
		random_list = {
			30 = { }
			40 = {
				if = {
					limit = {
						has_trait = content
					}
					remove_trait = content
				}
				add_trait = ambitious
			}
			15 = {
				if = {
					limit = {
						has_trait = generous
					}
					remove_trait = generous
				}
				add_trait = greedy
			}
			15 = {
				if = {
					limit = {
						has_trait = compassionate
					}
					remove_trait = compassionate
				}
				add_trait = callous
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0086.info
			}
		}
	}
	
	option = { # People
		name = normandy.0086.c
		add_prestige = 100
		add_piety = 100
		if = {
			limit = {
				exists = dynasty
			}
			dynasty = {
				add_dynasty_prestige = 250
			}
		}
		random_list = {
			30 = { }
			30 = {
				if = {
					limit = {
						has_trait = arbitrary
					}
					remove_trait = arbitrary
				}
				add_trait = just
			}
			15 = {
				if = {
					limit = {
						has_trait = callous
					}
					remove_trait = callous
				}
				if = {
					limit = {
						has_trait = sadistic
					}
					remove_trait = sadistic
				}
				add_trait = compassionate
			}
			15 = {
				if = {
					limit = {
						has_trait = lazy
					}
					remove_trait = lazy
				}
				add_trait = diligent
			}
			10 = {
				if = {
					limit = {
						has_trait = greedy
					}
					remove_trait = greedy
				}
				add_trait = generous
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0086.info
			}
		}
	}

}



# Rollo's Aspiration Fulfilled
normandy.0087 = {
	type = character_event
	title = normandy.0087.t
	desc = normandy.0087.desc
	theme = RICE_theme_normandy_castle

	right_portrait = {
		character = root
		animation = war_over_win
	}

	immediate = {

		play_music_cue = "mx_cue_epic_sacral_moment"

		religion:christianity_religion = { save_scope_as = christian }

		RICE_historical_aspiration_fulfilled_effect = yes

		hidden_effect = {
			if = {
				limit = {
					has_character_modifier = RICE_normandy_aspiration_settle_in_normandy
				}
				remove_character_modifier = RICE_normandy_aspiration_settle_in_normandy
			}
		}

		# Main Objective Reward

		add_prestige = RICE_aspiration_medium_resource_bonus
		spawn_army = {
			levies = 500
			men_at_arms = {
				type = varangian_veterans
				stacks = 1
			}
			men_at_arms = {
				type = bondi
				stacks = 1
			}
			men_at_arms = {
				type = vigmen
				stacks = 2
			}
			men_at_arms = {
				type = huscarl
				stacks = 1
			}
			location = capital_province
			#inheritable = no
			name = RICE_norman_spawn_event_troops
		}

		# Bonus Objective Reward(s)
		# Convert to Christianity
		if = {
			limit = {
				religion = { rice_religion_trigger_christianity_religion = yes }
			}
			add_piety = RICE_aspiration_medium_resource_bonus
		}

		# Rule Normandy
		if = {
			limit = {
				has_title = title:d_normandy
			}
			dynasty ?= {
				add_dynasty_prestige = RICE_aspiration_medium_resource_bonus
			}
		}

		# Have at least 1000 gold
		if = {
			limit = {
				gold >= 1000
			}
			every_county_in_region = {
				region = RICE_normandy_region
				limit = {
					OR = {
						holder = { is_vassal_or_below_of = root }
						holder = root
					}
				}
				change_development_level = RICE_red_sea_al_umari_aspiration_dev_bonus
			}
		}

	}

	# Ok
	option = {
		name = normandy.0087.a
	}

}


######################################################################################
# 
# WILLIAM THE CONQUEROR/MATILDA OF FLANDERS EVENTS
# 
# normandy.0090-normandy.0099 reserved
# 
######################################################################################



# William the Conqueror - begin the event chain
normandy.0090 = {
	type = character_event
	title = normandy.0090.t
	desc = normandy.0090.desc
	theme = memory_positive
	override_background = { reference = fp1_ocean }

	
	right_portrait = {
		character = scope:william
		animation = personality_forgiving
	}

	lower_center_portrait = scope:matilda

	trigger = {
		character:367 = {
			is_alive = yes
		}		
		character:140 = {
			is_alive = yes
		}
	}
	
	immediate = {
		character:140 = {
			save_scope_as = william
		}
		character:367 = {
			save_scope_as = matilda
		}
		character:364 = {
			save_scope_as = baldwin
		}
		character:1338 = {
			save_scope_as = leo
		}
		character:7940 = {
			save_scope_as = nicholas
		}
		character:2008 = {
			save_scope_as = alexander
		}
		character:122 = {
			save_scope_as = harold
		}
		character:114 = {
			save_scope_as = edward
		}
	}
	
	# Contemplate marriage
	option = {
		name = normandy.0090.a
		custom_tooltip = normandy.0090.a.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0090.info
			}
		}
		trigger_event = normandy.0091
	}

	
	# Skip the whole shebang
	option = {
		name = normandy.0090.b
		custom_tooltip = normandy.0090.b.tooltip
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0090.info
			}
		}
	}

	#after = {
	#	trigger_event = normandy.0091
	#}


}



# William the Conqueror - decide whether to be lovers or friends with Matilda
normandy.0091 = {
	type = character_event
	title = normandy.0091.t
	desc = normandy.0091.desc
	theme = marriage
	override_background = { reference = relaxing_room }
	
	left_portrait = {
		character = scope:william
		animation = personality_content
	}
	
	right_portrait = {
		character = scope:matilda
		animation = personality_compassionate
	}

	lower_center_portrait = scope:baldwin
	
	# Be soulmates
	option = {
		name = normandy.0091.a
		set_relation_soulmate = {
			reason = lover_history
			target = scope:matilda
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0091.info
			}
		}
	}
	
	# Be lovers only
	option = {
		name = normandy.0091.b
		add_prestige = 100
		set_relation_lover = {
			reason = lover_history
			target = scope:matilda
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0091.info
			}
		}
	}

	after = {
		trigger_event = normandy.0092
	}


}



# William the Conqueror - marriage is too closely related, issues with the Pope
normandy.0092 = {
	type = character_event
	title = normandy.0092.t
	desc = normandy.0092.desc
	theme = faith

	left_portrait = {
		character = scope:william
		animation = anger
	}
	
	right_portrait = {
		character = scope:leo
		animation = dismissal
	}

	lower_center_portrait = scope:nicholas
	
	# Piety
	option = {
		name = normandy.0092.a
		add_piety = 100
		scope:matilda = {
			add_piety = 100
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0092.info
			}
		}
	}
	
	# Prestige
	option = {
		name = normandy.0092.b
		add_prestige = 100
		scope:matilda = {
			add_prestige = 100
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0092.info
			}
		}
	}

	after = {
		trigger_event = normandy.0093
	}


}




# William the Conqueror - concluding the intro event chain
normandy.0093 = {
	type = character_event
	title = normandy.0093.t
	desc = normandy.0093.desc
	theme = martial
	override_background = { reference = fp1_ocean }

	left_portrait = {
		character = scope:william
		animation = personality_bold
	}

	lower_left_portrait = scope:matilda
	lower_right_portrait = scope:alexander

	immediate = {
		add_character_modifier = {
			modifier = RICE_normandy_alexander_blessing
			years = 10
		}
		scope:alexander = {			
			add_opinion = {
				target = scope:william
				modifier = pleased_opinion
				opinion = 30
			}
			reverse_add_opinion = {
				target = scope:william
				modifier = grateful_opinion
				opinion = 30
			}
		}
	}
	
	# Piety
	option = {
		name = normandy.0093.a
		add_piety = 100
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0093.info
			}
		}
	}
	
	# Prestige
	option = {
		name = normandy.0093.b
		add_prestige = 100
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0093.info
			}
		}
	}

}




# Matilda imprisons Beorhtric and seizes his properties
normandy.0096 = {
	type = character_event
	title = normandy.0096.t
	desc = normandy.0096.desc
	theme = intrigue_skulduggery_focus
	override_background = { reference = throne_room }
	
	left_portrait = {
		character = scope:william
		animation = worry
	}
	
	right_portrait = {
		character = scope:matilda
		animation = personality_vengeful
	}

	lower_center_portrait = scope:beorhtric

	trigger = {
		character:140 = {
			is_alive = yes
			is_landed = yes
			OR = {
				opinion = {
					target = character:367
					value >= 0
				}
				is_ai = no
			}
		}
		character:367 = {
			is_alive = yes
			is_spouse_of = character:140
		}
		character:normandy_002 = {
			is_alive = yes
			is_ai = yes
			is_vassal_or_below_of = scope:william
		}
	}

	immediate = {
		set_global_variable = {
			name = RICE_matilda_woman_scored_event
			value = yes
		}
		character:140 = {
			save_scope_as = william
		}
		character:367 = {
			save_scope_as = matilda
		}
		character:normandy_002 = {
			save_scope_as = beorhtric
		}
		character:364 = {
			save_scope_as = baldwin
		}
	}
	
	# Great, get all his lands
	option = {
		name = normandy.0096.a
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0096.info
			}
		}
	}
	
	# Imprison him, but don't take his lands
	option = {
		name = normandy.0096.b
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0096.info
			}
		}
	}
	
	# Calm down!
	option = {
		name = normandy.0096.c
		scope:matilda = {
			add_opinion = {
				modifier = disappointed_opinion
				target = scope:william
				opinion = -20
			}
		}
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_description_no_bullet = {
				text = normandy.0096.info
			}
		}
	}


}






######################################################################################
# 
# HISTORIA NORMANNORUM
# 
# normandy.0110-normandy.0119 reserved
# 
######################################################################################


# Historia Normannorum - choose candidate
normandy.0110 = {
	type = character_event
	title = normandy.0110.t
	desc = {
		desc = normandy.0110.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						exists = scope:candidate_1
						exists = scope:candidate_2
					}
				}
				desc = normandy.0110.desc.candidate
			}	
			desc = normandy.0110.desc.no_candidate
		}	
		desc = normandy.0110.desc.conclusion
	}
	theme = learning
	
	right_portrait = {
		character = root
		animation = personality_rational
	}

	lower_left_portrait = {
		character = scope:candidate_1
		trigger = { exists = scope:candidate_1 }
	}
	lower_center_portrait = {
		character = scope:candidate_2
		trigger = { exists = scope:candidate_2 }
	}
	lower_right_portrait = {
		character = scope:scholar
		trigger = { exists = scope:scholar }
	}

	immediate = {
		save_scope_as = original_sponsor
		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}
		culture:norman = {
			save_scope_as = norman
		}
		title:d_normandy = {
			save_scope_as = normandy
		}
		add_prestige = 200
		dynasty = {
			add_dynasty_prestige = 100
		}
		add_character_flag = RICE_normandy_historia_normannorum_original_sponsor

		capital_county = { save_scope_as = capital_county }

		# See scripted_trigger valid_scandinavian_adventurer just in case
		every_courtier = {
			limit = {
				is_available_healthy_ai_adult = yes
				age <= 65 # Don't want someone too old who could die on the journey
				is_alive = yes
				is_ruler = no
				OR = {
					diplomacy >= mediocre_skill_rating
					has_trait = scholar
					has_trait = education_learning_3
					has_trait = education_learning_4
				}
				OR = {
					learning >= medium_skill_rating
					has_trait = scholar
					has_trait = education_learning_3
					has_trait = education_learning_4
				}
				# Will not inherit anything anytime soon
				OR = {					
					any_heir_title = { count = 0 }
					AND = {
						save_temporary_scope_as = potential
						any_heir_title = {
							place_in_line_of_succession = {
								target = scope:potential
								value >= 3
							}
						}
					}
				}
			}
			add_to_list = dudo_of_saint_quentin_candidate
		}

		if = {
			limit = {
				any_in_list = {
					list = dudo_of_saint_quentin_candidate
					count >= 2
					opinion = {
						target = root
						value > -25
					}
				}
			}
			random_in_list = {
				list = dudo_of_saint_quentin_candidate
				weight = {
					base = 10
					modifier = {
						has_trait = ambitious
						add = 5
					}
					modifier = {
						has_trait = content
						add = -5
					}
					modifier = {
						has_trait = diligent
						add = 5
					}
					modifier = {
						has_trait = lazy
						add = -5
					}
					modifier = {
						is_female = yes
						faith = { has_doctrine = doctrine_gender_male_dominated }
						add = -15
					}
					modifier = {
						is_female = no
						faith = { has_doctrine = doctrine_gender_female_dominated }
						add = -15
					}
				}
				save_scope_as = candidate_1
			}
		}

		if = {
			limit = {
				any_in_list = {
					list = dudo_of_saint_quentin_candidate
					count >= 1
				}
			}
			random_in_list = {
				list = dudo_of_saint_quentin_candidate
				limit = {
					exists = scope:candidate_1
					NOT = { this = scope:candidate_1 }
				}
				weight = {
					base = 10
					modifier = {
						has_trait = ambitious
						add = 5
					}
					modifier = {
						has_trait = content
						add = -5
					}
					modifier = {
						has_trait = diligent
						add = 5
					}
					modifier = {
						has_trait = lazy
						add = -5
					}
					modifier = {
						is_female = yes
						faith = { has_doctrine = doctrine_gender_male_dominated }
						add = -15
					}
					modifier = {
						is_female = no
						faith = { has_doctrine = doctrine_gender_female_dominated }
						add = -15
					}
				}
				save_scope_as = candidate_2
			}
		}

		create_character = {
			location = root.capital_province
			template = capital_scholar_character
			save_scope_as = scholar
		}

	}

	option = { # ok
		name = normandy.0110.a
		trigger = {
			exists = scope:candidate_1
		}
		scope:candidate_1 = {
			save_scope_as = dudo_of_saint_quentin
			add_prestige = 100
			hidden_effect = {
				add_character_modifier = {
					modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
				}				
			}
			add_character_flag = {
				flag = planning_an_activity
				years = 2
			}
			add_character_flag = {
				flag = blocked_from_leaving
				years = 2 # Little extra buffer just in case
			}
		}
		custom_tooltip = normandy.0110.a.tooltip
	}

	option = { # ok
		name = normandy.0110.b
		trigger = {
			exists = scope:candidate_2
		}
		scope:candidate_2 = {
			save_scope_as = dudo_of_saint_quentin
			add_prestige = 100
			hidden_effect = {
				add_character_modifier = {
					modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
				}				
			}
			add_character_flag = {
				flag = planning_an_activity
				years = 2
			}
			add_character_flag = {
				flag = blocked_from_leaving
				years = 2 # Little extra buffer just in case
			}
		}
		custom_tooltip = normandy.0110.b.tooltip
	}

	option = { # ok
		name = normandy.0110.c
		add_courtier = scope:scholar
		scope:scholar = {
			save_scope_as = dudo_of_saint_quentin
			add_prestige = 100
			hidden_effect = {
				add_character_modifier = {
					modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
				}				
			}
			add_character_flag = {
				flag = planning_an_activity
				years = 2
			}
			add_character_flag = {
				flag = blocked_from_leaving
				years = 2 # Little extra buffer just in case
			}
		}
		custom_tooltip = normandy.0110.c.tooltip
	}

	after = {
		# At minimum 3 years to complete
		set_global_variable = {
			name = RICE_normandy_historia_normannorum_timer_min
			value = yes
			days = 1095 # 1095
		}
		# "Maximum" of 10 years to complete, if it isn't done after this date, it will trigger within a year
		# IRL it took 20 years, but this is lessened to 10 years make it drag out less
		set_global_variable = {
			name = RICE_normandy_historia_normannorum_timer_max
			value = yes
			days = 1095 # 1095
		}
		add_to_global_variable_list = {
			name = RICE_normandy_dudo_of_saint_quentin_equivalent
			target = scope:dudo_of_saint_quentin
		}
		add_to_global_variable_list = {
			name = RICE_normandy_dudo_original_sponsor_list
			target = scope:original_sponsor
		}
		# scope:dudo_of_saint_quentin = {
		# 	hidden_effect = {
		# 		add_character_modifier = {
		# 			modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
		# 		}				
		# 	}
		# 	add_character_flag = {
		# 		flag = planning_an_activity
		# 		years = 2
		# 	}
		# 	add_character_flag = {
		# 		flag = blocked_from_leaving
		# 		years = 2 # Little extra buffer just in case
		# 	}			
		# }
	}

}




# Complete the Normannorum
normandy.0111 = {
	hidden = yes
	scope = none

	immediate = {
		culture:norman = {
			save_scope_as = norman
		}
		ordered_in_global_list = {
			variable = RICE_normandy_dudo_of_saint_quentin_equivalent
			save_scope_as = dudo_of_saint_quentin
		}
		ordered_in_global_list = {
			variable = RICE_normandy_dudo_original_sponsor_list
			save_scope_as = original_sponsor
		}
		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}
		# The Duke of Normandy exists
		if = {
			limit = {
				exists = title:d_normandy.holder
			}
			title:d_normandy.holder = {
				save_scope_as = norman_duke
			}
		}
		# The original sponsor, if they own land in Normandy
		else_if = {
			limit = {
				any_county_in_region = {
					region = RICE_normandy_region
					holder = {
						has_character_flag = RICE_normandy_historia_normannorum_original_sponsor
					}
				}
			}
			random_county_in_region = {				
				region = RICE_normandy_region
				limit = {
					holder = {
						has_character_flag = RICE_normandy_historia_normannorum_original_sponsor
					}
				}
				holder = {
					save_scope_as = norman_duke
				}
			}
		}
		# Choose a count who has Dudo of Quentin in their court
		else_if = {
			limit = {
				scope:dudo_of_saint_quentin = {
					is_alive = yes
				}
				scope:dudo_of_saint_quentin.liege = {
					OR = {
						has_title = title:c_rouen
						has_title = title:c_eu
						has_title = title:c_evreux
						has_title = title:c_lisieux
						has_title = title:c_alencon
						has_title = title:c_bayeux
						has_title = title:c_avranches
					}
				}
			}
			scope:dudo_of_saint_quentin.liege = {
				save_scope_as = norman_duke
			}
		}
		# Otherewise, pick a random count in Normandy
		else = {
			random_county_in_region = {				
				region = RICE_normandy_region
				holder = {
					save_scope_as = norman_duke
				}
			}
		}



		scope:norman_duke = {
			if = {
				limit = {
					exists = dynasty
				}
				dynasty = {
					add_dynasty_prestige = 300
				}
			}
			# Create the artifact
			hidden_effect_new_object = {
				create_artifact = {
					name = RICE_normandy_historia_normannorum_name
					description = RICE_normandy_historia_normannorum_desc
					type = miscellaneous
					visuals = RICE_normandy_historia_normannorum_artifact
					quality = 100
					wealth = 100
					modifier = RICE_normandy_historia_normannorum_modifier
					#max_durability = 40
					save_scope_as = RICE_historia_normannorum_book_artifact
					decaying = no
				}
				# scope:RICE_domesday_book_artifact = {
				# 	set_variable = RICE_domesday_book_variable
				# }
			}
			scope:RICE_historia_normannorum_book_artifact = {
				set_owner = {
					target = scope:norman_duke
				}
			}
		}
		
		if = {
			limit = {				
				scope:dudo_of_saint_quentin = {
					is_alive = yes
				}
			}
			scope:dudo_of_saint_quentin = {
				remove_character_modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
				add_character_modifier = {
					modifier = RICE_normandy_dudo_of_saint_quentin_modifier
				}
			}
		}

		if = {
			limit = {
				scope:dudo_of_saint_quentin = {
					is_alive = yes
				}
				#NOT = { has_relation_friend = root }
				scope:norman_duke = {
					can_set_relation_friend_trigger = { CHARACTER = scope:dudo_of_saint_quentin }
				}
			}
			scope:norman_duke = {
				set_relation_friend = { reason = RICE_normandy_historia_normannorum_reason target = scope:dudo_of_saint_quentin }
			}
		}
		else = {
			add_opinion = {
				target = scope:dudo_of_saint_quentin
				modifier = friendliness_opinion
				opinion = 40
			}
		}

		culture:norman = {
			set_culture_pillar = language_french
			remove_culture_tradition = tradition_RICE_northmen
			add_culture_tradition = tradition_RICE_adventurers_and_aristocrats
			remove_variable = tradition_cooldown
		}

		every_culture_global = {
			if = {
				limit = {
					#OR = {
					#	rice_culture_trigger_norman = yes
						any_parent_culture = { rice_culture_trigger_norman = yes }
					#}
				}
				if = {
					limit = {
						has_cultural_pillar = language_norse
					}
					set_culture_pillar = language_french
				}
				if = {
					limit = {
						has_cultural_tradition = tradition_RICE_northmen
					}
					remove_culture_tradition = tradition_RICE_northmen
				}
				add_culture_tradition = tradition_RICE_adventurers_and_aristocrats
				remove_variable = tradition_cooldown
			}
		}

		
		struggle:RICE_normandy_struggle = {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_normandy_historia_normannorum
			}
		}

		every_ruler = {
			limit = {
				OR = {
					any_sub_realm_county = {
						title_province = { geographical_region = RICE_normandy_region }
					}		
					this = scope:norman_duke
				}
			}
			trigger_event = normandy.0112
		}

		
	}
}

# Historia Normannorum - done
normandy.0112 = {
	type = character_event
	title = normandy.0112.t
	desc = {
		desc = normandy.0112.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:original_sponsor = {
						is_alive = no
					}
				}
				desc = normandy.0112.desc.sponsor_dead
			}	
			triggered_desc = {
				trigger = {
					scope:original_sponsor = {
						is_alive = yes
						
					}
					scope:norman_duke = {
						has_character_flag = RICE_normandy_historia_normannorum_original_sponsor
					}
				}
				desc = normandy.0112.desc.sponsor_alive
			}	
			triggered_desc = {
				trigger = {
					scope:original_sponsor = {
						is_alive = yes
						
					}
					scope:norman_duke = {
						NOT = { has_character_flag = RICE_normandy_historia_normannorum_original_sponsor }
					}
				}
				desc = normandy.0112.desc.sponsor_other
			}	
			desc = normandy.0112.desc.sponsor_backup
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:dudo_of_saint_quentin = {
						is_alive = yes
					}
				}
				desc = normandy.0112.desc.dudo_alive
			}	
			desc = normandy.0112.desc.dudo_dead
		}
		desc = normandy.0112.desc.conclusion
	}
	theme = diplomacy_majesty_focus
	
	left_portrait = {
		character = scope:norman_duke
		animation = personality_content
	}
	right_portrait = {
		character = scope:dudo_of_saint_quentin
		animation = throne_room_writer
	}

	artifact = { # To display the artifact in the event-window
		target = scope:RICE_historia_normannorum_book_artifact
		position = lower_center_portrait
	}

	immediate = {
		play_music_cue = mx_cue_sacredrite
		title:d_normandy = {
			save_scope_as = normandy
		}
		culture:norman = {
			save_scope_as = norman
		}
		culture:french = {
			save_scope_as = french
		}
		culture:norse = {
			save_scope_as = norse
		}
		ordered_in_global_list = {
			variable = RICE_normandy_rollo_list
			save_scope_as = rollo
		}
		show_as_tooltip = {
			scope:RICE_historia_normannorum_book_artifact = {
				set_owner = {
					target = scope:norman_duke
				}
			}
			scope:norman_duke = {
				if = {
					limit = {
						exists = dynasty
					}
					dynasty = {
						add_dynasty_prestige = 300
					}
				}
			}
			if = {
				limit = {
					scope:dudo_of_saint_quentin = {
						is_alive = yes
					}
				}
				scope:dudo_of_saint_quentin = {
					remove_character_modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
					add_character_modifier = {
						modifier = RICE_normandy_dudo_of_saint_quentin_modifier
					}
				}
				if = {
					limit = {
						scope:norman_duke = {
							has_relation_friend = scope:dudo_of_saint_quentin
						}
					}
					scope:norman_duke = {
						set_relation_friend = { reason = RICE_normandy_historia_normannorum_reason target = scope:dudo_of_saint_quentin }
					}
				}
				else = {
					scope:norman_duke = {					
						add_opinion = {
							target = scope:dudo_of_saint_quentin
							modifier = friendliness_opinion
							opinion = 40
						}
						reverse_add_opinion = {
							target = scope:dudo_of_saint_quentin
							modifier = friendliness_opinion
							opinion = 40
						}
					}
				}
			}				
			struggle:RICE_normandy_struggle = {
				activate_struggle_catalyst = {
					catalyst = catalyst_RICE_normandy_historia_normannorum
				}
			}
		}
		custom_tooltip = normandy.0112.tooltip.culture_language
		custom_tooltip = normandy.0112.tooltip.culture_tradition
		custom_tooltip = normandy.0112.tooltip.struggle_req
	}

	
	option = { # ok
		name = normandy.0112.a
		#custom_tooltip = normandy.0112.tooltip
	}

}




# Historia Normannorum - Dudo equivalent dies
normandy.0113 = {
	hidden = yes
	scope = none

	trigger = {
		has_character_modifier = RICE_normandy_dudo_of_saint_quentin_WIP_modifier
	}

	immediate = {
		ordered_in_global_list = {
			variable = RICE_normandy_dudo_of_saint_quentin_equivalent
			save_scope_as = dudo_of_saint_quentin
		}
		ordered_in_global_list = {
			variable = RICE_normandy_dudo_original_sponsor_list
			save_scope_as = original_sponsor
		}
		every_ruler = {
			limit = {
				OR = {
					has_title = title:c_rouen
					has_title = title:c_eu
					has_title = title:c_evreux
					has_title = title:c_lisieux
					has_title = title:c_alencon
					has_title = title:c_bayeux
					has_title = title:c_avranches
					has_title = title:d_normandy
					has_character_flag = RICE_normandy_historia_normannorum_original_sponsor
				}
			}
			trigger_event = normandy.0114
		}		
	}
}


# Historia Normannorum - death notification
normandy.0114 = {
	type = character_event
	title = normandy.0114.t
	desc = {
		desc = normandy.0114.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { has_global_variable = RICE_normandy_historia_normannorum_timer_max } # Getting very close to completion
				}
				desc = normandy.0114.desc.almost_done
			}	
			triggered_desc = {
				trigger = {
					NOT = { has_global_variable = RICE_normandy_historia_normannorum_timer_min } # Partway complete
				}
				desc = normandy.0114.desc.partway
			}	
			desc = normandy.0114.desc.starting
		}
		desc = normandy.0114.desc.conclusion
	}
	theme = death
	override_background = { reference = study }

	right_portrait = scope:dudo_of_saint_quentin	

	lower_center_portrait = scope:original_sponsor
	
	option = { # ok
		name = normandy.0114.a
	}

}


