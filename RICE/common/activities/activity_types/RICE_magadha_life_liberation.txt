activity_RICE_magadha_life_liberation = {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		religion = { rice_religion_trigger_buddhism_religion = yes }
		faith = { has_doctrine_parameter = RICE_life_liberation_active }
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= RICE_activity_cost
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		# If no one shows up
		trigger_if = {
			limit = {
				is_current_phase_active = yes
			}
			has_attending_activity_guests = yes
		}
		# Converting mid-activity is a big no-no.
		scope:activity = {
			OR = {
				NOT = { has_variable = starting_faith }
				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
				scope:host.faith = var:starting_faith
			}
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = { # No one shows up
			limit = {
				has_attending_activity_guests = no
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			scope:host = { trigger_event = activity_system.0100 }
		}
		# Host converted to a different faith
		# Could check to see if new faith allows for this kind of shenanigans, but it's easier to just do it broadly like this
		if = {
			limit = {
				NOT = { scope:host.faith = var:starting_faith }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			every_attending_character = {
				trigger_event = RICEmisc.0010
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = capital
	ai_province_filter = capital
	wait_time_before_start = { days = 14 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# LOCATION [SPECIAL TYPE] OPTION
		#########
		special_type = {
			RICE_magadha_life_liberation_court = {
				default = yes
				ai_will_do = {
					value = 10
				}
			}
			RICE_magadha_life_liberation_temple = {
				cost = {
					gold = {
						add = {
							value = minor_gold_value
						}
					}
				}				
				ai_will_do = {
					value = 5
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 5
						}
					}
				}
			}
			RICE_magadha_life_liberation_wilderness = {
				cost = {
					gold = {
						add = {
							value = minor_gold_value
						}
					}
				}				
				ai_will_do = {
					value = 5
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 5
						}
					}
				}
			}
			RICE_magadha_life_liberation_public = {
				cost = {
					gold = {
						add = {
							value = minor_gold_value
						}
					}
				}				
				ai_will_do = {
					value = 5
					if = {
						limit = {
							short_term_gold <= minor_gold_value
						}
						subtract = {
							value = 5
						}
					}
				}
			}
		}
		#########
		# TYPE OF ANIMAL OPTION
		#########
		RICE_magadha_life_liberation_animal_type = {
			RICE_magadha_life_liberation_animal_type_insects = {
				default = yes
				ai_will_do = {
					value = 10
				}
			}
			RICE_magadha_life_liberation_animal_type_birds = {
				ai_will_do = {
					value = 10
				}
			}
			RICE_magadha_life_liberation_animal_type_turtles = {
				ai_will_do = {
					value = 10
				}
			}
			RICE_magadha_life_liberation_animal_type_fish = {
				ai_will_do = {
					value = 10
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		RICE_magadha_life_release_phase = {
			is_predefined = yes
			
			on_phase_active = {
				trigger_event = magadha.0060
			}

			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { months = 1 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		# How much do you care about your faith not liking this?
		if = {
			limit = {
				has_trait = cynical
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = RICE_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
		# if = {
		# 	limit = {
		# 		this = scope:host.capital_province
		# 	}
		# 	add = {
		# 		value = 30
		# 		desc = "Capital Province preferred"
		# 	}
		# }
	}
	
	is_location_valid = {
		has_holding = yes
	}

	province_filter = capital
	ai_province_filter = capital

	max_province_icons = 3
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = RICE_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = RICE_activity_cost
			add = { # Location of life release
				value = 0
				add = minor_gold_value
				add = minor_gold_value
				add = minor_gold_value
				# Divide by 4 to get the average option cost
				divide = 4
			}

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {
		# Check what faith the pilgrimage is supposed to be for.
		set_variable = {
			name = starting_faith
			value = scope:host.faith
		}
	}

	on_enter_passive_state = {
		trigger_event = magadha.0050
	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 30

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Magnates.
			4 = activity_invite_neighbouring_rulers

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			1 = activity_invite_rule_liege
			1 = activity_invite_rule_vassals
			2 = activity_invite_rule_fellow_vassals
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		faith.religion = scope:host.faith.religion
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
	}

	host_intents = {
		intents = { RICE_life_liberation_compassion_intent RICE_life_liberation_spectacle_intent RICE_life_liberation_merit_intent }
		default = RICE_life_liberation_compassion_intent
	}

	guest_intents = {
		intents = { RICE_life_liberation_compassion_intent RICE_life_liberation_spectacle_intent RICE_life_liberation_merit_intent }
		default = RICE_life_liberation_compassion_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {
		if = {
			limit = { this = scope:host }
			#create_character_memory = {
			#	type = RICE_magadha_life_liberation_host_memory
			#}
			scope:host = {
				RICE_magadha_life_liberation_completed_log_entry_effect = yes
			}
		}
		# else = {			
		# 	create_character_memory = {
		# 		type = RICE_magadha_life_liberation_guest_memory
		# 		participants = {
		# 			host = scope:host
		# 		}
		# 	}
		# }
	}

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	# Travel


	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/garden.dds"
		environment = "environment_event_garden"
		ambience = "event:/SFX/Events/Backgrounds/castle_garden_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = idle
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = idle
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = idle
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}
