activity_RICE_tuareg_dream_incubation = {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		OR = {
			religion = { rice_religion_trigger_amazigh_religion = yes }
			culture = {
				has_cultural_pillar = heritage_berber
			}
		}	
		trigger_if = {
			limit = {
				is_ai = yes
			}
			is_at_war = no
			short_term_gold >= RICE_tuareg_dream_incubation_cost
		}
	}

	can_start = {
		OR = {
			religion = { rice_religion_trigger_amazigh_religion = yes }
			culture = {
				has_cultural_pillar = heritage_berber
			}
		}	
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_landed = yes
			NOT = { is_incapable = yes }
		}
		# If no one shows up
		# trigger_if = {
		# 	limit = {
		# 		is_current_phase_active = yes
		# 	}
		# 	has_attending_activity_guests = yes
		# }
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_landed = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		# if = { # No one shows up
		# 	limit = {
		# 		has_attending_activity_guests = no
		# 	}
		# 	scope:activity = {
		# 		activity_type = { save_scope_as = activity_type }
		# 		activity_location = { save_scope_as = location }
		# 	}
		# 	scope:host = { trigger_event = activity_system.0100 }
		# }
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = realm
	ai_province_filter = realm

	province_description = {
		#Does this have an empty holding?
		triggered_desc = {
			trigger = {
				has_holding = no
			}
			desc = activity_RICE_tuareg_dream_incubation_wilderness_province_desc
		}
		#Does this have a temple holding?
		triggered_desc = {
			trigger = {
				has_holding_type = church_holding
			}
			desc = activity_RICE_tuareg_dream_incubation_temple_province_desc
		}
		#Does this have a city holding?
		triggered_desc = {
			trigger = {
				has_holding_type = city_holding
			}
			desc = activity_RICE_tuareg_dream_incubation_city_province_desc
		}
	}

	
	wait_time_before_start = { days = 7 }

	###################
	# OPTIONS
	###################

	special_option_category = special_type

	options = {
		#########
		# TYPE OF VACATION
		#########
		special_type = {
			RICE_tuareg_dream_incubation_type_personal = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = gregarious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = shy
						}
						add = -5
					}
					if = {
						limit = {
							has_trait = vengeful
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = forgiving
						}
						add = -5
					}
				}
			}
			RICE_tuareg_dream_incubation_type_political = {
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = content
						}
						add = -5
					}
					if = {
						limit = {
							has_trait = paranoid
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = trusting
						}
						add = -5
					}
				}
			}
			RICE_tuareg_dream_incubation_type_communal = {	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = compassionate
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = callous
						}
						add = -5
					}
					if = {
						limit = {
							has_trait = just
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = arbitrary
						}
						add = -5
					}
				}
			}
		}
		#########
		# LENGTH
		#########
		RICE_tuareg_dream_incubation_tomb_type = {
			RICE_tuareg_dream_incubation_tomb_type_random = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = diligent
						}
						add = 10
					}
				}
			}
			RICE_tuareg_dream_incubation_tomb_type_ancestor = {	
				cost = { 
					gold = {
						add = {
							value = 0
							desc = RICE_tuareg_dream_ancestor_tomb_desc
							add = {
								value = 25
								desc = RICE_tuareg_dream_ancestor_tomb_desc
							}
						}
					}
				}	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							short_term_gold <= 25
						}
						subtract = {
							value = 10
						}
					}
				}
			}
			RICE_tuareg_dream_incubation_tomb_type_saint = {	
				cost = { 
					gold = {
						add = {
							value = 0
							desc = RICE_tuareg_dream_saint_tomb_desc
							add = {
								value = 25
								desc = RRICE_tuareg_dream_saint_tomb_desc
							}
						}
					}
				}	
				ai_will_do = {
					value = 10				
					if = {
						limit = {
							short_term_gold <= 25
						}
						subtract = {
							value = 10
						}
					}
				}
			}
		}

	}

	###################
	# PHASES
	###################

	phases = {
		RICE_tuareg_dream_incubation_dream_phase = {
			is_predefined = yes
			
			on_phase_active = {

				###########################################################
				#
				# Trigger the appropriate intro event
				#
				###########################################################

				if = {
					limit = {
						this = scope:host
					}
					trigger_event = tuareg.0020
				}

			}

			on_end = {
				# Run conclusion stuff here
				# if = {
				# 	limit = { this = scope:host }
				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
				# }
			}
		}
	}

	max_guest_arrival_delay_time = { days = 3 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		# How much do you care about your faith not liking this?
		if = {
			limit = {
				has_trait = diligent
			}
			add = 25
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = zealous
			}
			add = 25
		}
		if = {
			limit = {
				has_trait = cynical
			}
			add = -25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = RICE_tuareg_dream_incubation_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
		add = {
			value = scope:score # Derived from province_score
			multiply = 5
		}
		# if = {
		# 	limit = {
		# 		this = scope:host.capital_province
		# 	}
		# 	add = {
		# 		value = 20
		# 		desc = "Capital Province preferred"
		# 	}
		# }
	}
	
	# Anywhere
	is_location_valid = {

	}

	max_province_icons = 3

	province_score = {
		add = 0
		if = {
			limit = {
				has_holding = no
			}
			add = 25
		}
		if = {
			limit = {
				has_holding_type = church_holding
			}
			add = 50
		}
		if = {
			limit = {
				has_holding_type = city_holding
			}
			add = 50
		}
		# Capital
		# if = {
		# 	limit = {
		# 		this = scope:host.capital_province
		# 	}
		# 	add = 25
		# }
	}
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = RICE_tuareg_dream_incubation_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = RICE_tuareg_dream_incubation_cost

			add = { # Option to do at a tomb of a saint/ancestor
				value = 0
				add = 25
				# Divide by 2 to get the average option cost
				divide = 2
			}

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5

		}
	}
	cooldown = { days = 3650 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {		
		# if = {
		# 	limit = {
		# 		this = scope:host
		# 	}
		# 	# Trigger the appropriate hot springs event
		# 	if = {
		# 		limit = {
		# 			has_trait = shy
		# 		}
		# 		trigger_event = RICEmisc.8888
		# 	}
		# 	else = {
		# 		trigger_event = RICEmisc.8888
		# 	}
		# }
	}

	# Once you arrive, trigger the relevant event(s)
	on_leave_travel_state = {
	}

	on_enter_passive_state = {

	}

	###################
	# GUEST HANDLING
	###################
	
	#allow_zero_guest_invites = yes

	max_guests = 10

	#allow_zero_guest_invites = yes

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Magnates.
			#4 = activity_invite_neighbouring_rulers

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			#1 = activity_invite_rule_liege
			#1 = activity_invite_rule_vassals
			#2 = activity_invite_rule_fellow_vassals
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_landed = no
		# NOT = {
		# 	is_primary_heir_of = scope:actor
		# }
	}


	host_intents = {
		intents = { RICE_insight_understanding RICE_ritual_intent RICE_curiosity_intent }
		default = RICE_insight_understanding
	}

	guest_intents = {
		intents = { RICE_insight_understanding RICE_ritual_intent RICE_curiosity_intent }
		default = RICE_insight_understanding
	}

	# guest_join_chance = {
	# 	base = 0
	# 	base_activity_modifier = yes

	# 	# Scripted Modifiers
	# 	activity_guest_shared_ai_accept_modifier = yes
	# }
	
	on_complete = {
		# if = {
		# 	limit = { this = scope:host }
		# 	create_character_memory = {
		# 		type = RICE_tuareg_dream_incubation_host_memory
		# 	}
		# 	#scope:host = {
		# 	#	RICE_tuareg_dream_incubation_completed_log_entry_effect = yes
		# 	#}
		# }
	}

	### Graphics
	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			OR = {
	# 				has_graphical_mena_culture_group_trigger = yes
	# 				has_graphical_steppe_culture_group_trigger = yes
	# 				has_graphical_african_culture_group_trigger = yes
	# 			}
	# 		}
	# 	}
	# 	reference = "building_mena_feast_01_entity"
	# }

	# map_entity = {
	# 	trigger = {
	# 		activity_location.culture = {
	# 			has_graphical_india_culture_group_trigger = yes
	# 		}
	# 	}
	# 	reference = "building_indian_feast_01_entity"
	# }
	
	# map_entity = "building_western_feast_01_entity"

	# Travel
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				NOT = { exists = province_owner }
			}
			activity_location = {
				OR = {
					geographical_region = world_middle_east
					geographical_region = world_africa
					geographical_region = world_europe_west_iberia
					geographical_region = world_asia_minor
					geographical_region = world_india
					geographical_region = world_steppe
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/RICE_tuareg_ahaggar_mountains.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = {
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				exists = province_owner
			}
			activity_location = {
				OR = {
					geographical_region = world_middle_east
					geographical_region = world_africa
					geographical_region = world_europe_west_iberia
					geographical_region = world_asia_minor
					geographical_region = world_india
					geographical_region = world_steppe
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/RICE_tuareg_tent.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = {
		trigger = {
			activity_location = {
				OR = {
					geographical_region = world_middle_east
					geographical_region = world_africa
					geographical_region = world_europe_west_iberia
					geographical_region = world_asia_minor
					geographical_region = world_india
					geographical_region = world_steppe
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/RICE_sahel_manor.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/RICE_desert_night.dds"
		environment = "environment_event_alley"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}


	window_characters = {

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_bold
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_honorable
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = personality_zealous
			}
		}
		
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = jockey_walk
			}
		}
	}
}
