# activity_RICE_local_pilgrimage = {
# 	is_shown = {
# 		highest_held_title_tier > tier_barony
# 		is_landed = yes
# 		RICE_local_pilgrimage_available_trigger = yes
# 		trigger_if = {
# 			limit = {
# 				is_ai = yes
# 			}
# 			is_at_war = no
# 			short_term_gold >= RICE_activity_cost
# 		}
# 	}

# 	can_start = {
# 		# custom_description = {
# 		# 	text = RICE_local_pilgrimage_county_req
# 		# 	any_realm_county = {
# 		# 		title_province = {
# 		# 			geographical_region = RICE_local_pilgrimage_region
# 		# 		}
# 		# 	}
# 		# }
# 		RICE_local_pilgrimage_available_trigger = yes
# 	}

# 	can_start_showing_failures_only = {
# 		is_available_adult = yes
# 	}

# 	is_valid = {
# 		NOT = {
# 			has_variable = activity_invalidated
# 		}
# 		scope:host = {
# 			is_landed = yes
# 			NOT = { is_incapable = yes }
# 		}
# 		# If no one shows up
# 		# trigger_if = {
# 		# 	limit = {
# 		# 		is_current_phase_active = yes
# 		# 	}
# 		# 	has_attending_activity_guests = yes
# 		# }
# 		# Converting mid-activity is a big no-no.
# 		scope:activity = {
# 			OR = {
# 				NOT = { has_variable = starting_faith }
# 				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
# 				scope:host.faith = var:starting_faith
# 			}
# 		}
# 	}

# 	on_invalidated = {
# 		# Host becomes unlanded
# 		if = {
# 			limit = {
# 				scope:host = { is_landed = no }
# 			}
# 			scope:activity = {
# 				activity_type = { save_scope_as = activity_type }
# 			}
# 			every_attending_character = {
# 				trigger_event = activity_system.0320
# 			}
# 		}
# 		if = {
# 			limit = {
# 				scope:host = { is_incapable = yes }
# 			}
# 			scope:activity = {
# 				activity_type = { save_scope_as = activity_type }
# 			}
# 			scope:host = {
# 				trigger_event = activity_system.0330
# 			}
# 			every_attending_character = {
# 				limit = { NOT = { this = scope:host } }
# 				trigger_event = activity_system.0331
# 			}
# 		}
# 		# if = { # No one shows up
# 		# 	limit = {
# 		# 		has_attending_activity_guests = no
# 		# 	}
# 		# 	scope:activity = {
# 		# 		activity_type = { save_scope_as = activity_type }
# 		# 		activity_location = { save_scope_as = location }
# 		# 	}
# 		# 	scope:host = { trigger_event = activity_system.0100 }
# 		# }
# 				# Host converted to a different faith
# 		# Could check to see if new faith allows for this kind of shenanigans, but it's easier to just do it broadly like this
# 		if = {
# 			limit = {
# 				NOT = { scope:host.faith = var:starting_faith }
# 			}
# 			scope:activity = {
# 				activity_type = { save_scope_as = activity_type }
# 				activity_location = { save_scope_as = location }
# 			}
# 			every_attending_character = {
# 				trigger_event = RICEmisc.0010
# 			}
# 		}
# 	}

# 	on_host_death = {
# 		scope:activity = {
# 			set_variable = {
# 				name = activity_invalidated
# 			}
# 		}
# 	}

# 	province_filter = all
# 	ai_province_filter = realm

# 	province_description = {

# 	}

	
# 	wait_time_before_start = { days = 7 }

# 	###################
# 	# OPTIONS
# 	###################

# 	special_option_category = special_type

# 	options = {
# 		#########
# 		# TYPE OF VISIT
# 		#########
# 		special_type = {
# 			RICE_local_pilgrimage_type_devotion = {
# 				default = yes	
# 				ai_will_do = {
# 					value = 10
# 					if = {
# 						limit = {
# 							has_trait = zealous
# 						}
# 						add = 5
# 					}
# 					if = {
# 						limit = {
# 							has_trait = diligent
# 						}
# 						add = 5
# 					}
# 				}
# 			}
# 			RICE_local_pilgrimage_type_observance = {		
# 				ai_will_do = {
# 					value = 10
# 					if = {
# 						limit = {
# 							has_trait = ambitious
# 						}
# 						add = 5
# 					}
# 					if = {
# 						limit = {
# 							has_trait = humble
# 						}
# 						add = 5
# 					}
# 				}
# 			}
# 			RICE_local_pilgrimage_type_vacation = {		
# 				ai_will_do = {
# 					value = 10
# 					if = {
# 						limit = {
# 							has_trait = lazy
# 						}
# 						add = 5
# 					}
# 					if = {
# 						limit = {
# 							has_trait = gregarious
# 						}
# 						add = 5
# 					}
# 				}
# 			}
# 		}

# 	}

# 	###################
# 	# PHASES
# 	###################

# 	phases = {
# 		RICE_local_pilgrimage_pilgrimage_phase = {
# 			is_predefined = yes
			
# 			on_phase_active = {

# 				###########################################################
# 				#
# 				# Trigger the appropriate arrival event
# 				#
# 				###########################################################

# 				if = {
# 					limit = {
# 						this = scope:host
# 					}
# 					# Patmos Pilgrimage	
# 					if = {
# 						limit = {
# 							involved_activity.activity_location.barony = title:b_samos
# 						}
# 						scope:host = { trigger_event = chios.0106 }
# 					}
# 					# Aachen Pilgrimage	
# 					if = {
# 						limit = {
# 							involved_activity.activity_location.barony = title:b_aachen
# 						}
# 						scope:host = { trigger_event = aachen.0022 }
# 					}
# 					# Tomb of Daniel	
# 					if = {
# 						limit = {
# 							involved_activity.activity_location.barony = title:b_tustar
# 						}
# 						scope:host = { trigger_event = khuzestan.0022 }
# 					}
# 				}

# 			}

# 			on_end = {
# 				# Run conclusion stuff here
# 				# if = {
# 				# 	limit = { this = scope:host }
# 				# 	scope:activity = { progress_activity_phase_after = { weeks = 2 } }
# 				# }
# 			}
# 		}
# 	}

# 	max_guest_arrival_delay_time = { months = 1 }

# 	# desc is only shown in debug AI watch window
# 	ai_will_do = {
# 		value = 50
		
# 		# How much do you care about your faith not liking this?
# 		if = {
# 			limit = {
# 				has_trait = zealous
# 			}
# 			add = 25
# 		}
# 		if = {
# 			limit = {
# 				has_trait = cynical
# 			}
# 			add = -25
# 		}
		
# 		#Can you actually afford this?
# 		if = {
# 			limit = {
# 				NOT = { can_make_expensive_purchase_trigger = { PRICE = RICE_activity_cost } }
# 			}
# 			add = -50
# 		}
# 	}

# 	ai_check_interval = 60

# 	ai_will_select_province = {
# 		value = 10
# 		add = {
# 			value = scope:score # Derived from province_score
# 			multiply = 5
# 		}
# 		# if = {
# 		# 	limit = {
# 		# 		this = scope:host.capital_province
# 		# 	}
# 		# 	add = {
# 		# 		value = 20
# 		# 		desc = "Capital Province preferred"
# 		# 	}
# 		# }
# 	}
	
# 	# Anywhere
# 	is_location_valid = {
# 		OR = {
# 			# Patmos Pilgrimage
# 			trigger_if = {
# 				limit = {
# 					exists = barony
# 					has_global_variable = RICE_chios_patmos_pilgrimage_available
# 					scope:host = {
# 						religion = { rice_religion_trigger_christianity_religion = yes }
# 						OR = {
# 							title:c_chios = {
# 								squared_distance = {
# 									target = scope:host.capital_province
# 									value <= squared_distance_small
# 								}
# 							}
# 							has_title = title:c_chios
# 							capital_county = title:c_rhodos
# 							capital_county = title:c_caria
# 							capital_county = title:c_chandax
# 							capital_county = title:c_chania
# 						}
# 					}
# 				}
# 				barony = title:b_samos
# 			}
# 			# Aachen Pilgrimage
# 			trigger_if = {
# 				limit = {
# 					exists = barony
# 					scope:host = {
# 						religion = { rice_religion_trigger_christianity_religion = yes }
# 					}
# 					OR = {
# 						title:c_aachen = {
# 							squared_distance = {
# 								target = scope:host.capital_province
# 								value <= squared_distance_small
# 							}
# 						}
# 						AND = {
# 							is_target_in_global_variable_list = {
# 								name = unavailable_unique_decisions
# 								target = flag:RICE_aachen_charlemagne_remains_transferred
# 							}
# 							scope:host.capital_province = {
# 								OR = {
# 									geographical_region = world_europe_west_francia
# 									geographical_region = world_europe_west_germania
# 								}
# 							}			
# 						}
# 					}
# 				}
# 				barony = title:b_aachen
# 			}
# 			# Tomb of Daniel Pilgrimage
# 			trigger_if = {
# 				limit = {
# 					exists = barony
# 					scope:host = {
# 						OR = {
# 							religion = { rice_religion_trigger_islam_religion = yes }
# 							religion = { rice_religion_trigger_christianity_religion = yes }
# 							religion = { rice_religion_trigger_judaism_religion = yes }
# 							faith = {
# 								OR = {
# 									has_doctrine = tenet_islamic_syncretism
# 									has_doctrine = tenet_jewish_syncretism
# 									has_doctrine = tenet_christian_syncretism
# 								}
# 							}
# 						}
# 					}
# 					OR = {
# 						AND = {
# 							is_target_in_global_variable_list = {
# 								name = unavailable_unique_decisions
# 								target = flag:RICE_khuzestan_daniel_reburied
# 							}
# 							title:c_tustar = {
# 								squared_distance = {
# 									target = scope:host.capital_province
# 									value <= squared_distance_medium
# 								}
# 							}
# 						}
# 						scope:host = {
# 							any_held_title = {
# 								tier = tier_county
# 								duchy = title:d_khuzestan			
# 							}
# 						}
# 					}
# 				}
# 				barony = title:b_tustar
# 			}
# 		}
# 	}

# 	max_province_icons = 3

# 	province_score = {
# 		add = 0
# 		# add = {
# 		# 	value = county.development_level
# 		# 	divide = 2
# 		# }
# 		# if = {
# 		# 	limit = {
# 		# 		county.development_level <= 5
# 		# 	}
# 		# 	add = -5
# 		# }
# 		if = {
# 			limit = {
# 				RICE_local_pilgrimage_baronies_trigger = yes
# 			}
# 			add = 100
# 		}
# 		# Capital
# 		# if = {
# 		# 	limit = {
# 		# 		this = scope:host.capital_province
# 		# 	}
# 		# 	add = 25
# 		# }
# 	}
	
# 	cost = {
# 		gold = {
# 			add = {
# 				value = 0
# 				add = {
# 					value = RICE_activity_cost
# 					desc = hunt_base_cost
# 				}
# 			}
# 		}
# 	}

# 	ui_predicted_cost = {
# 		gold = {
# 			value = RICE_activity_cost
# 			# Make it a multiple of 5 (rounded up)
# 			divide = 5 
# 			ceiling = yes 
# 			multiply = 5
# 		}
# 	}
# 	cooldown = { days = 3650 }
	
# 	###################
# 	# ACTIVITY-SPECIFIC PULSES
# 	###################
	
# 	pulse_actions = {

# 	}

# 	on_start = {		
# 		# if = {
# 		# 	limit = {
# 		# 		this = scope:host
# 		# 	}
# 		# 	# Trigger the appropriate hot springs event
# 		# 	if = {
# 		# 		limit = {
# 		# 			has_trait = shy
# 		# 		}
# 		# 		trigger_event = RICEmisc.8888
# 		# 	}
# 		# 	else = {
# 		# 		trigger_event = RICEmisc.8888
# 		# 	}
# 		# }
# 	}

# 	# Once you arrive at the springs, trigger the relevant event(s)
# 	on_leave_travel_state = {
# 	}

# 	on_enter_passive_state = {

# 	}

# 	###################
# 	# GUEST HANDLING
# 	###################
	
# 	allow_zero_guest_invites = yes

# 	max_guests = 10

# 	#allow_zero_guest_invites = yes

# 	guest_invite_rules = {
# 		rules = {
# 			# Relations.
# 			2 = activity_invite_rule_lovers
# 			2 = activity_invite_rule_rivals_if_appropriate

# 			# Family.
# 			3 = activity_invite_rule_extended_family

# 			# Magnates.
# 			#4 = activity_invite_neighbouring_rulers

# 			# Misc landless.
# 			5 = activity_invite_rule_knights

# 			# MP 
# 			6 = activity_invite_mp
# 		}
# 		defaults = {
# 			1 = activity_invite_rule_friends
# 			1 = activity_invite_rule_close_family
# 			#1 = activity_invite_rule_liege
# 			#1 = activity_invite_rule_vassals
# 			#2 = activity_invite_rule_fellow_vassals
# 			3 = activity_invite_rule_courtiers
# 			4 = activity_invite_rule_guests
# 			1 = activity_invite_spouses
# 		}
# 	}

# 	can_be_activity_guest = {
#		religion = scope:host.religion
# 		is_adult = yes
# 		is_available = yes
# 		in_diplomatic_range = scope:host
# 		is_landed = no
# 		# NOT = {
# 		# 	is_primary_heir_of = scope:actor
# 		# }
# 	}

# 	host_intents = {
# 		intents = { RICE_local_pilgrimage_worship_intent RICE_local_pilgrimage_model_intent RICE_local_pilgrimage_curiosity_intent }
# 		default = RICE_local_pilgrimage_worship_intent
# 	}

# 	guest_intents = {
# 		intents = { RICE_local_pilgrimage_worship_intent RICE_local_pilgrimage_model_intent RICE_local_pilgrimage_curiosity_intent }
# 		default = RICE_local_pilgrimage_worship_intent
# 	}

# 	guest_join_chance = {
# 		base = 0
# 		base_activity_modifier = yes

# 		# Scripted Modifiers
# 		activity_guest_shared_ai_accept_modifier = yes
# 	}
	
# 	on_complete = {
# 		if = {
# 			limit = { this = scope:host }
# 			create_character_memory = {
# 				type = RICE_local_pilgrimage_host_memory
# 			}
# 			scope:host = {
# 				RICE_local_pilgrimage_completed_log_entry_effect = yes
# 			}
# 		}
# 		else = {
# 			create_character_memory = {
# 				type = RICE_local_pilgrimage_guest_memory
# 				participants = {
# 					host = scope:host
# 				}
# 			}
# 		}
# 	}

# 	### Graphics
# 	# map_entity = {
# 	# 	trigger = {
# 	# 		activity_location.culture = {
# 	# 			OR = {
# 	# 				has_graphical_mena_culture_group_trigger = yes
# 	# 				has_graphical_steppe_culture_group_trigger = yes
# 	# 				has_graphical_african_culture_group_trigger = yes
# 	# 			}
# 	# 		}
# 	# 	}
# 	# 	reference = "building_mena_feast_01_entity"
# 	# }

# 	# map_entity = {
# 	# 	trigger = {
# 	# 		activity_location.culture = {
# 	# 			has_graphical_india_culture_group_trigger = yes
# 	# 		}
# 	# 	}
# 	# 	reference = "building_indian_feast_01_entity"
# 	# }
	
# 	# map_entity = "building_western_feast_01_entity"

# 	#################
# 	#
# 	# TRAVEL
# 	#
# 	#################

# 	# Patmos (sea)
# 	background = {
# 		trigger = {
# 			NOT = { scope:host.location = scope:activity.activity_location }
# 			activity_location.barony = title:b_samos
# 			scope:host.location = {
# 				is_sea_province = yes
# 			}
# 		}
# 		texture = "gfx/interface/illustrations/event_scenes/RICE_greek_beach.dds"
# 		environment = "environment_event_desert"
# 		ambience = "event:/DLC/FP1/SFX/Events/event_beached_longships"
# 	}
# 	# Patmos
# 	background = {
# 		trigger = {
# 			NOT = { scope:host.location = scope:activity.activity_location }
# 			activity_location.barony = title:b_samos
# 			scope:host.location = {
# 				is_sea_province = yes
# 			}
# 		}
# 		texture = "gfx/interface/illustrations/event_scenes/RICE_greek_beach.dds"
# 		environment = "environment_event_desert"
# 		ambience = "event:/DLC/FP1/SFX/Events/event_beached_longships"
# 	}

# 	#################
# 	#
# 	# ARRIVED
# 	#
# 	#################

# 	#Patmos
# 	background = {
# 		trigger = {
# 			activity_location.barony = title:b_samos
# 		}
# 		texture = "gfx/interface/illustrations/event_scenes/RICE_greek_beach.dds"
# 		environment = "environment_event_desert"
# 		ambience = "event:/DLC/FP1/SFX/Events/event_beached_longships"
# 	}

# 	#Fallback
# 	background = {
# 		texture = "gfx/interface/illustrations/event_scenes/temple.dds"
# 		environment = "environment_event_temple"
# 		ambience = "event:/SFX/Events/Backgrounds/temple_generic"
# 	}


# 	window_characters = {

# 		guest = {
# 			camera = camera_body
			
# 			effect = {
# 				every_attending_character = {
# 					limit = {
# 						scope:host.location = scope:activity.activity_location
# 					}
# 					add_to_list = characters
# 				}
# 			}

# 			scripted_animation = {
# 				triggered_animation = {
# 					trigger = {
# 						scope:character = {
# 							has_trait = zealous
# 						}
# 					}
# 					animation = { personality_zealous personality_honorable }
# 				}
# 				triggered_animation = {
# 					trigger = {
# 						scope:character = {
# 							OR = {
# 								has_trait = cynical
# 								has_trait = lazy
# 							}
# 						}
# 					}
# 					animation = { boredom eyeroll }
# 				}
# 				animation = personality_content
# 			}
# 		}

# 		guest = {
# 			camera = camera_body
			
# 			effect = {
# 				every_attending_character = {
# 					limit = {
# 						scope:host.location = scope:activity.activity_location
# 					}
# 					add_to_list = characters
# 				}
# 			}

# 			scripted_animation = {
# 				triggered_animation = {
# 					trigger = {
# 						scope:character = {
# 							has_trait = zealous
# 						}
# 					}
# 					animation = { personality_zealous personality_honorable }
# 				}
# 				triggered_animation = {
# 					trigger = {
# 						scope:character = {
# 							OR = {
# 								has_trait = cynical
# 								has_trait = lazy
# 							}
# 						}
# 					}
# 					animation = { boredom eyeroll }
# 				}
# 				animation = personality_compassionate
# 			}
# 		}
		
# 		host = {
# 			camera = camera_body
			
# 			effect = {
# 				if = {
# 					limit = {
# 						scope:host.location = scope:activity.activity_location
# 					}
# 					scope:host = {
# 						add_to_list = characters
# 					}
# 				}
# 			}

# 			scripted_animation = {
# 				triggered_animation = {
# 					trigger = {
# 						scope:character = {
# 							OR = {
# 								has_trait = cynical
# 								has_trait = lazy
# 							}
# 						}
# 					}
# 					animation = { boredom eyeroll }
# 				}
# 				animation = personality_zealous
# 			}
# 		}
		
# 		travel_host = {
# 			camera = camera_body
			
# 			effect = {
# 				if = {
# 					limit = {
# 						NOT = {
# 							scope:host.location = scope:activity.activity_location
# 						}
# 					}
# 					scope:host = {
# 						add_to_list = characters
# 					}
# 				}
# 			}

# 			scripted_animation = {
# 				animation = jockey_walk
# 			}
# 		}

# 		guest = {
# 			camera = camera_body
			
# 			effect = {
# 				every_attending_character = {
# 					limit = {
# 						NOT = {
# 							scope:host.location = scope:activity.activity_location
# 						}
# 					}
# 					add_to_list = characters
# 				}
# 			}

# 			scripted_animation = {
# 				animation = jockey_walk
# 			}
# 		}

# 		guest = {
# 			camera = camera_body
			
# 			effect = {
# 				every_attending_character = {
# 					limit = {
# 						NOT = {
# 							scope:host.location = scope:activity.activity_location
# 						}
# 					}
# 					add_to_list = characters
# 				}
# 			}

# 			scripted_animation = {
# 				animation = jockey_walk
# 			}
# 		}
# 	}
# }
