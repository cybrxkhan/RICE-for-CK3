
RICE_aachen_rebury_charlemagne = {
	picture = "gfx/interface/illustrations/decisions/decision_RICE_charlemagne.dds"
	major = yes
	desc = RICE_aachen_rebury_charlemagne_desc

	ai_check_interval = 120

	is_shown = {
		NOT = { has_global_variable = RICE_game_started_on_TFE_start_date }
		is_landed = yes
		has_title = title:c_aachen
		religion = { rice_religion_trigger_christianity_religion = yes }
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_charlemagne_remains_transferred
			}
		}
	}

	is_valid = {
		OR = {
			AND = {
				highest_held_title_tier = tier_county
				dynasty = {
					dynasty_prestige_level >= 5
				}
			}
			AND = {
				highest_held_title_tier >= tier_duchy
				dynasty = {
					dynasty_prestige_level >= 3
				}
			}
		}
		has_title = title:c_aachen
		religion = { rice_religion_trigger_christianity_religion = yes }
		root.culture = {
			has_cultural_era_or_later = culture_era_early_medieval
		}
		#custom_description = {
		#	text = "RICE_aachen_charlemagne_remains_transfered_req"
		#	OR = {
		#		is_target_in_global_variable_list = {
		#			name = unavailable_unique_decisions
		#			target = flag:RICE_aachen_charlemagne_remains_transferred
		#		}
		#		is_ai = no
		#	}
		#
		#}
	}

	is_valid_showing_failures_only = {
		is_adult = yes
		RICE_is_available_adult_even_if_sick_trigger = yes
	}

	cost = {
		gold = {
			value = major_gold_value
		}
		prestige = {
			value = major_prestige_value
		}
	}

	effect = {
		#Can only happen once
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_charlemagne_remains_transferred
		}

		#character:6392 = { save_scope_as = carolus_magnus }
		save_scope_as = aachen_charlemagne_mover
		
		custom_tooltip = RICE_aachen_rebury_charlemagne_effect_tooltip

		show_as_tooltip = {
			rebury_charlemagne_in_aachen_cathedral_effect = yes
		}
		
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = RICE_aachen_rebury_charlemagne_context_tooltip
		}
		
		trigger_event = aachen.0003

		# add_to_list = notification_sent
	}

	ai_will_do = {
		base = 25
		modifier = {
			add = 15
			has_trait = ambitious
		}
		modifier = {
			add = 15
			has_trait = zealous
		}
		modifier = {
			add = -40
			# Happened in 1165 IRL
			current_date <= 1000.1.1
		}
		modifier = {
			add = -20
			# Happened in 1349 IRL
			current_date <= 1100.1.1
		}
		modifier = {
			add = -10
			# Happened in 1349 IRL
			current_date <= 1150.1.1
		}
	}
}

RICE_aachen_commission_bust_of_charlemagne = {
	picture = "gfx/interface/illustrations/decisions/decision_RICE_charlemagne.dds"
	major = yes
	desc = RICE_aachen_commission_bust_of_charlemagne_desc

	ai_check_interval = 120

	is_shown = {
		NOT = { has_global_variable = RICE_game_started_on_TFE_start_date }
		is_landed = yes
		has_title = title:c_aachen
		religion = { rice_religion_trigger_christianity_religion = yes }
		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_charlemagne_remains_transferred
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_commission_charlemagne_bust
			}
		}
	}

	is_valid = {
		OR = {
			AND = {
				highest_held_title_tier = tier_county
				dynasty = {
					dynasty_prestige_level >= 5
				}
			}
			AND = {
				highest_held_title_tier >= tier_duchy
				dynasty = {
					dynasty_prestige_level >= 3
				}
			}
		}
		has_title = title:c_aachen
		religion = { rice_religion_trigger_christianity_religion = yes }
		root.culture = {
			has_cultural_era_or_later = culture_era_high_medieval
		}
		custom_description = {
			text = "RICE_aachen_charlemagne_remains_transfered_req"
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_charlemagne_remains_transferred
			}
		}
	}

	is_valid_showing_failures_only = {
		is_adult = yes
		RICE_is_available_adult_even_if_sick_trigger = yes
	}

	cost = {
		gold = {
			value = major_gold_value
		}
		piety = {
			value = major_piety_value
		}
	}

	effect = {
		#Can only happen once
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_commission_charlemagne_bust
		}
		save_scope_as = aachen_charlemagne_buster

		custom_tooltip = RICE_aachen_commission_bust_of_charlemagne_effect_tooltip

		show_as_tooltip = {
			commission_bust_of_charlemagne_effect = yes
		}
		
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = RICE_aachen_commission_bust_of_charlemagne_context_tooltip
		}
		
		trigger_event = aachen.0001

		# add_to_list = notification_sent
	}

	ai_will_do = {
		base = 20
		modifier = {
			add = 15
			has_trait = ambitious
		}
		modifier = {
			add = 15
			has_trait = zealous
		}
		modifier = {
			add = -40
			# Happened in 1349 IRL
			current_date <= 1100.1.1
		}
		modifier = {
			add = -20
			# Happened in 1349 IRL
			current_date <= 1200.1.1
		}
		modifier = {
			add = -10
			# Happened in 1349 IRL
			current_date <= 1300.1.1
		}
	}
}


RICE_aachen_dedicate_grannus_shrine = {
	picture = "gfx/interface/illustrations/decisions/decision_RICE_hellenic_temple.dds"
	major = yes
	desc = RICE_aachen_dedicate_grannus_shrine_desc

	ai_check_interval = 45

	is_shown = {
		NOT = { has_global_variable = RICE_game_started_on_TFE_start_date }
		is_landed = yes
		has_title = title:c_aachen
		RICE_grannus_shrine_allowed_trigger = yes
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_grannus_shrine_dedicated
			}
		}
	}

	is_valid = {
		highest_held_title_tier >= tier_duchy
		has_title = title:c_aachen
		RICE_grannus_shrine_allowed_trigger = yes
	}

	is_valid_showing_failures_only = {
		is_adult = yes
		RICE_is_available_adult_even_if_sick_trigger = yes
	}

	cost = {
		gold = {
			value = major_gold_value
		}
		prestige = {
			value = major_prestige_value
		}
	}

	effect = {
		#Can only happen once
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_grannus_shrine_dedicated
		}

		show_as_tooltip = {
			aachen_dedicate_grannus_shrine_effect = yes
		}
		
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = RICE_aachen_dedicate_grannus_shrine_context_tooltip
		}
		
		trigger_event = aachen.0013

		# add_to_list = notification_sent
	}

	ai_will_do = {
		base = 40
		modifier = {
			add = 10
			has_trait = ambitious
		}
		modifier = {
			add = 10
			has_trait = zealous
		}
	}
}




RICE_aachen_build_new_meuse_bridge = {
	picture = "gfx/interface/illustrations/decisions/decision_RICE_forest_river.dds"
	major = yes
	desc = RICE_aachen_build_new_meuse_bridge_desc

	ai_check_interval = 120

	is_shown = {
		is_landed = yes
		has_title = title:c_maastricht
		is_target_in_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_meuse_bridge_collapsed
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_meuse_bridge_built
			}
		}
	}

	is_valid = {
		has_title = title:c_maastricht
		custom_description = {
			text = "RICE_aachen_meuse_bridge_collapsed_req"
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:RICE_aachen_meuse_bridge_collapsed
			}
		}
	}

	is_valid_showing_failures_only = {
		is_adult = yes
		RICE_is_available_adult_even_if_sick_trigger = yes
	}

	cost = {
		gold = {
			value = major_gold_value
		}
		prestige = {
			value = medium_prestige_value
		}
	}

	effect = {
		#Can only happen once
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:RICE_aachen_meuse_bridge_built
		}
		
		save_scope_as = meuse_bridge_builder

		show_as_tooltip = {
			build_meuse_bridge_effect = yes
		}
		
		if = {
			limit = {
				has_game_rule = RICE_historical_context_on
			}
			custom_tooltip = RICE_aachen_build_new_meuse_bridge_context_tooltip
		}
		
		trigger_event = aachen.0007

		# add_to_list = notification_sent
	}

	ai_will_do = {
		base = 30
		modifier = {
			add = 15
			has_trait = diligent
		}
		modifier = {
			add = -15
			has_trait = lazy
		}
		modifier = {
			add = 15
			has_trait = zealous
		}
		modifier = {
			add = -15
			has_trait = arbitrary
		}
	}
}